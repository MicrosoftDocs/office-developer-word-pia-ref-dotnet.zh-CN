<Type Name="Range" FullName="Microsoft.Office.Interop.Word.Range">
  <Metadata><Meta Name="ms.openlocfilehash" Value="25e06c97e25e7d58a7178934b72890adc6876950" /><Meta Name="ms.sourcegitcommit" Value="655244c9d9a99d41d118f4fa57b5d74d46c410d7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/03/2020" /><Meta Name="ms.locfileid" Value="43924653" /></Metadata><TypeSignature Language="C#" Value="public interface Range" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Range" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Word.Range" />
  <TypeSignature Language="VB.NET" Value="Public Interface Range" />
  <TypeSignature Language="C++ CLI" Value="public interface class Range" />
  <TypeSignature Language="F#" Value="type Range = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002095E-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示文档中的一个连续区域。</summary>
    <remarks><para>每个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象都由起始和结束字符位置定义。 与在文档中使用书签的方式类似， <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象用于标识文档的特定部分。 但是，与书签不同的 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 是，对象仅在定义它的编程代码运行时才存在。 <see cref="T:Microsoft.Office.Interop.Word.Range" />对象独立于所选内容。 这就是说，你可以定义区域并对其进行操作，无需更改选定内容。 此外，你还可以在文档中定义多个区域，但每个窗格只能具有一个选定内容。</para>
      <para>使用 <see cref="M:Microsoft.Office.Interop.Word._Document.Range(System.Object@,System.Object@)" /> 方法返回 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 由给定的起始和结束字符位置定义的对象。</para>
      <para>使用单个对象的<b>Range</b>属性可返回 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 由该对象的开头和结尾定义的对象。 <b>Range</b>属性适用于许多对象（例如、、 <see cref="T:Microsoft.Office.Interop.Word.Paragraph" /> <see cref="T:Microsoft.Office.Interop.Word.Bookmark" /> 、和 <see cref="T:Microsoft.Office.Interop.Word.Cell" /> ）。</para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Application ^ Application { Microsoft::Office::Interop::Word::Application ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Application : Microsoft.Office.Interop.Word.Application" Usage="Microsoft.Office.Interop.Word.Range.Application" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.Application" /> 对象，表示 Microsoft Word 应用程序。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFormat">
      <MemberSignature Language="C#" Value="public void AutoFormat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AutoFormat() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.AutoFormat" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoFormat ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoFormat();" />
      <MemberSignature Language="F#" Value="abstract member AutoFormat : unit -&gt; unit" Usage="range.AutoFormat " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(195)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>自动设置区域格式。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bold">
      <MemberSignature Language="C#" Value="public int Bold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Bold" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Bold" />
      <MemberSignature Language="VB.NET" Value="Public Property Bold As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Bold { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Bold : int with get, set" Usage="Microsoft.Office.Interop.Word.Range.Bold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(130)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(130)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(130)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>确定字体或区域的格式是否为加粗。</summary>
        <value>To be added.</value>
        <remarks><para>该属性返回 <b>True</b>、<b>False</b> 或 <b>wdUndefined</b>（当返回值既可为 <b>True</b>，也可为 <b>False</b> 时取该值）。</para>
          <para>此属性的值可设置为<b>True</b>、 <b>False</b>和<b>wdToggle</b>。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BoldBi">
      <MemberSignature Language="C#" Value="public int BoldBi { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BoldBi" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.BoldBi" />
      <MemberSignature Language="VB.NET" Value="Public Property BoldBi As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BoldBi { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BoldBi : int with get, set" Usage="Microsoft.Office.Interop.Word.Range.BoldBi" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(400)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(400)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(400)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>确定字体或区域的格式是否为加粗。</summary>
        <value>.</value>
        <remarks><para>此属性返回 <b>True</b> ， <b>假</b> 或 <b>wdUndefined</b> (为粗体和非粗体文本的混合)。</para>
          <para>此属性的值可设置为<b>True</b>、 <b>False</b>和<b>wdToggle</b>。</para>
          <para><b>BoldBi</b> 属性适用于从右向左的语言文本。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BookmarkID">
      <MemberSignature Language="C#" Value="public int BookmarkID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BookmarkID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.BookmarkID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BookmarkID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BookmarkID { int get(); };" />
      <MemberSignature Language="F#" Value="member this.BookmarkID : int" Usage="Microsoft.Office.Interop.Word.Range.BookmarkID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(308)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(308)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回包含指定的所选内容或区域的开始位置的书签的编号。如果没有相应的书签，则返回0（零）。</summary>
        <value>To be added.</value>
        <remarks><para>该数字对应于书签在文档中的位置，1表示第一个书签，2表示第一个书签，依此类推。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Bookmarks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Bookmarks Bookmarks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Bookmarks Bookmarks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Bookmarks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bookmarks As Bookmarks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Bookmarks ^ Bookmarks { Microsoft::Office::Interop::Word::Bookmarks ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Bookmarks : Microsoft.Office.Interop.Word.Bookmarks" Usage="Microsoft.Office.Interop.Word.Range.Bookmarks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(75)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(75)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Bookmarks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.Bookmarks" /> 集合，该集合代表区域中的所有书签。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Borders">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Borders Borders { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Borders Borders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Borders" />
      <MemberSignature Language="VB.NET" Value="Public Property Borders As Borders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Borders ^ Borders { Microsoft::Office::Interop::Word::Borders ^ get(); void set(Microsoft::Office::Interop::Word::Borders ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Borders : Microsoft.Office.Interop.Word.Borders with get, set" Usage="Microsoft.Office.Interop.Word.Range.Borders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1100)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1100)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1100)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Borders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.Borders" /> 集合，该集合代表指定对象的所有边框。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculate">
      <MemberSignature Language="C#" Value="public float Calculate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 Calculate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.Calculate" />
      <MemberSignature Language="VB.NET" Value="Public Function Calculate () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; float Calculate();" />
      <MemberSignature Language="F#" Value="abstract member Calculate : unit -&gt; single" Usage="range.Calculate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(172)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>计算区域中的数学表达式。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanEdit">
      <MemberSignature Language="C#" Value="public int CanEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CanEdit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.CanEdit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanEdit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CanEdit { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CanEdit : int" Usage="Microsoft.Office.Interop.Word.Range.CanEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(304)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(304)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>保留以供内部使用。 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanPaste">
      <MemberSignature Language="C#" Value="public int CanPaste { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CanPaste" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.CanPaste" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanPaste As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CanPaste { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CanPaste : int" Usage="Microsoft.Office.Interop.Word.Range.CanPaste" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(305)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(305)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>保留以供内部使用。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Case">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdCharacterCase Case { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdCharacterCase Case" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Case" />
      <MemberSignature Language="VB.NET" Value="Public Property Case As WdCharacterCase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdCharacterCase Case { Microsoft::Office::Interop::Word::WdCharacterCase get(); void set(Microsoft::Office::Interop::Word::WdCharacterCase value); };" />
      <MemberSignature Language="F#" Value="member this.Case : Microsoft.Office.Interop.Word.WdCharacterCase with get, set" Usage="Microsoft.Office.Interop.Word.Range.Case" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(312)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(312)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(312)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdCharacterCase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置一个 <see cref="T:Microsoft.Office.Interop.Word.WdCharacterCase" /> 常量，该常量代表指定区域中的文本的大小写。</summary>
        <value>To be added.</value>
        <remarks><para>由于您选择或安装的语言支持不同（例如美国英语），上述部分常量可能无法使用。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Cells Cells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Cells Cells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Cells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cells As Cells" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Cells ^ Cells { Microsoft::Office::Interop::Word::Cells ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cells : Microsoft.Office.Interop.Word.Cells" Usage="Microsoft.Office.Interop.Word.Range.Cells" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(57)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(57)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Cells</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.Cells" /> 集合，该集合代表区域中的表格单元格。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Characters">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Characters Characters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Characters Characters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Characters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Characters As Characters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Characters ^ Characters { Microsoft::Office::Interop::Word::Characters ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Characters : Microsoft.Office.Interop.Word.Characters" Usage="Microsoft.Office.Interop.Word.Range.Characters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(53)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(53)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Characters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.Characters" /> 集合，该集合代表区域中的字符。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterStyle">
      <MemberSignature Language="C#" Value="public object CharacterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CharacterStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.CharacterStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CharacterStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CharacterStyle { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CharacterStyle : obj" Usage="Microsoft.Office.Interop.Word.Range.CharacterStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(420)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(420)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个<b>Object</b>类型的对象，该对象代表用于设置一个或多个字符格式的样式。 只读。</summary>
        <value><b>Object</b></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterWidth">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdCharacterWidth CharacterWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdCharacterWidth CharacterWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.CharacterWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property CharacterWidth As WdCharacterWidth" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdCharacterWidth CharacterWidth { Microsoft::Office::Interop::Word::WdCharacterWidth get(); void set(Microsoft::Office::Interop::Word::WdCharacterWidth value); };" />
      <MemberSignature Language="F#" Value="member this.CharacterWidth : Microsoft.Office.Interop.Word.WdCharacterWidth with get, set" Usage="Microsoft.Office.Interop.Word.Range.CharacterWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(326)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(326)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(326)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdCharacterWidth</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置指定区域的字符宽度。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckGrammar">
      <MemberSignature Language="C#" Value="public void CheckGrammar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckGrammar() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.CheckGrammar" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckGrammar ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckGrammar();" />
      <MemberSignature Language="F#" Value="abstract member CheckGrammar : unit -&gt; unit" Usage="range.CheckGrammar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(204)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>开始对指定的区域执行拼写和语法检查。</summary>
        <remarks><para>如果文档或区域中包含错误，则该方法显示 "拼写和语法" 对话框（"工具" 菜单），并选中 "检查语法" 复选框。 该方法应用于文档时，将检查文档中所有可用文字的拼写（如页眉、页脚和文本框）。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSpelling">
      <MemberSignature Language="C#" Value="public void CheckSpelling (ref object CustomDictionary, ref object IgnoreUppercase, ref object AlwaysSuggest, ref object CustomDictionary2, ref object CustomDictionary3, ref object CustomDictionary4, ref object CustomDictionary5, ref object CustomDictionary6, ref object CustomDictionary7, ref object CustomDictionary8, ref object CustomDictionary9, ref object CustomDictionary10);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckSpelling([in]object&amp; CustomDictionary, [in]object&amp; IgnoreUppercase, [in]object&amp; AlwaysSuggest, [in]object&amp; CustomDictionary2, [in]object&amp; CustomDictionary3, [in]object&amp; CustomDictionary4, [in]object&amp; CustomDictionary5, [in]object&amp; CustomDictionary6, [in]object&amp; CustomDictionary7, [in]object&amp; CustomDictionary8, [in]object&amp; CustomDictionary9, [in]object&amp; CustomDictionary10) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.CheckSpelling(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckSpelling (Optional ByRef CustomDictionary As Object, Optional ByRef IgnoreUppercase As Object, Optional ByRef AlwaysSuggest As Object, Optional ByRef CustomDictionary2 As Object, Optional ByRef CustomDictionary3 As Object, Optional ByRef CustomDictionary4 As Object, Optional ByRef CustomDictionary5 As Object, Optional ByRef CustomDictionary6 As Object, Optional ByRef CustomDictionary7 As Object, Optional ByRef CustomDictionary8 As Object, Optional ByRef CustomDictionary9 As Object, Optional ByRef CustomDictionary10 As Object)" />
      <MemberSignature Language="F#" Value="abstract member CheckSpelling : obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj -&gt; unit" Usage="range.CheckSpelling (CustomDictionary, IgnoreUppercase, AlwaysSuggest, CustomDictionary2, CustomDictionary3, CustomDictionary4, CustomDictionary5, CustomDictionary6, CustomDictionary7, CustomDictionary8, CustomDictionary9, CustomDictionary10)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(205)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CustomDictionary" Type="System.Object" RefType="ref" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" RefType="ref" />
        <Parameter Name="AlwaysSuggest" Type="System.Object" RefType="ref" />
        <Parameter Name="CustomDictionary2" Type="System.Object" RefType="ref" />
        <Parameter Name="CustomDictionary3" Type="System.Object" RefType="ref" />
        <Parameter Name="CustomDictionary4" Type="System.Object" RefType="ref" />
        <Parameter Name="CustomDictionary5" Type="System.Object" RefType="ref" />
        <Parameter Name="CustomDictionary6" Type="System.Object" RefType="ref" />
        <Parameter Name="CustomDictionary7" Type="System.Object" RefType="ref" />
        <Parameter Name="CustomDictionary8" Type="System.Object" RefType="ref" />
        <Parameter Name="CustomDictionary9" Type="System.Object" RefType="ref" />
        <Parameter Name="CustomDictionary10" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="CustomDictionary">可选<b>对象</b>。 可以是返回对象的表达式，也可以是 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 自定义词典的文件名。</param>
        <param name="IgnoreUppercase">可选<b>对象</b>。 <b>如此</b> 如果忽略大小写。 如果省略此参数，则使用属性的当前值 <see cref="P:Microsoft.Office.Interop.Word.Options.IgnoreUppercase" /> 。</param>
        <param name="AlwaysSuggest">可选<b>对象</b>。 <b>真正</b> 使 Microsoft Word 能够提出拼写建议。 如果省略此参数，则使用属性的当前值 <see cref="P:Microsoft.Office.Interop.Word.Options.SuggestSpellingCorrections" /> 。</param>
        <param name="CustomDictionary2">可选<b>对象</b>。 其中任何一个表达式，可返回一个 <b>字典</b> 对象或一个附加的自定义词典的文件名。 您可以指定多达 9 个附加词典。</param>
        <param name="CustomDictionary3">可选<b>对象</b>。 其中任何一个表达式，可返回一个 <b>字典</b> 对象或一个附加的自定义词典的文件名。</param>
        <param name="CustomDictionary4">可选<b>对象</b>。 其中任何一个表达式，可返回一个 <b>字典</b> 对象或一个附加的自定义词典的文件名。</param>
        <param name="CustomDictionary5">可选<b>对象</b>。 其中任何一个表达式，可返回一个 <b>字典</b> 对象或一个附加的自定义词典的文件名。</param>
        <param name="CustomDictionary6">可选<b>对象</b>。 其中任何一个表达式，可返回一个 <b>字典</b> 对象或一个附加的自定义词典的文件名。</param>
        <param name="CustomDictionary7">可选<b>对象</b>。 其中任何一个表达式，可返回一个 <b>字典</b> 对象或一个附加的自定义词典的文件名。</param>
        <param name="CustomDictionary8">可选<b>对象</b>。 其中任何一个表达式，可返回一个 <b>字典</b> 对象或一个附加的自定义词典的文件名。</param>
        <param name="CustomDictionary9">可选<b>对象</b>。 其中任何一个表达式，可返回一个 <b>字典</b> 对象或一个附加的自定义词典的文件名。</param>
        <param name="CustomDictionary10">可选<b>对象</b>。 其中任何一个表达式，可返回一个 <b>字典</b> 对象或一个附加的自定义词典的文件名。</param>
        <summary>开始对指定区域进行拼写检查。</summary>
        <remarks><para>如果该文档或区域中包含错误，则该方法显示“拼写和语法”对话框（“工具”菜单），其中“检查语法”复选框处于清除状态。 该方法应用于文档时，将检查文档中所有可用文字的拼写（如页眉、页脚和文本框）。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSynonyms">
      <MemberSignature Language="C#" Value="public void CheckSynonyms ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckSynonyms() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.CheckSynonyms" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckSynonyms ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckSynonyms();" />
      <MemberSignature Language="F#" Value="abstract member CheckSynonyms : unit -&gt; unit" Usage="range.CheckSynonyms " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(180)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>显示“同义词库”对话框，为指定区域中的文字列出可替换单词或同义词。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Collapse">
      <MemberSignature Language="C#" Value="public void Collapse (ref object Direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Collapse([in]object&amp; Direction) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.Collapse(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Collapse (Optional ByRef Direction As Object)" />
      <MemberSignature Language="F#" Value="abstract member Collapse : obj -&gt; unit" Usage="range.Collapse Direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(101)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Direction" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Direction">可选<b>对象</b>。 折叠某区域或所选内容的方向。 可以是下列 <see cref="T:Microsoft.Office.Interop.Word.WdCollapseDirection" /> 常量之一： <b>WdCollapseEnd</b>或<b>wdCollapseStart</b>。 默认值是 <b>wdCollapseStart</b> 。</param>
        <summary>将区域折叠到起始位置或结束位置。</summary>
        <remarks><para>区域折叠后，起始和结束点相等。</para>
          <para>如果使用<b>wdCollapseEnd</b>折叠引用整个段落的区域，则该范围位于结束段落标记之后（下一段的开头）。 但是，可以在区域折叠后使用方法将该范围移回一个字符 <see cref="M:Microsoft.Office.Interop.Word.Range.MoveEnd(System.Object@,System.Object@)" /> 。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Columns Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Columns Columns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As Columns" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Columns ^ Columns { Microsoft::Office::Interop::Word::Columns ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Columns : Microsoft.Office.Interop.Word.Columns" Usage="Microsoft.Office.Interop.Word.Range.Columns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(302)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(302)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Columns</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.Columns" /> 集合，该集合代表区域中的所有表格列。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CombineCharacters">
      <MemberSignature Language="C#" Value="public bool CombineCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CombineCharacters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.CombineCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Property CombineCharacters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CombineCharacters { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CombineCharacters : bool with get, set" Usage="Microsoft.Office.Interop.Word.Range.CombineCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(267)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(267)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(267)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>确定指定区域是否包含组合字符。</summary>
        <value>To be added.</value>
        <remarks><para>如果指定的区域包含组合字符，则此属性返回<b>True</b> ，否则返回<b>False</b> 。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Comments">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Comments Comments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Comments Comments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Comments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comments As Comments" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Comments ^ Comments { Microsoft::Office::Interop::Word::Comments ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Comments : Microsoft.Office.Interop.Word.Comments" Usage="Microsoft.Office.Interop.Word.Range.Comments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(56)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(56)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Comments</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.Comments" /> 集合，该集合代表指定区域中的所有批注。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputeStatistics">
      <MemberSignature Language="C#" Value="public int ComputeStatistics (Microsoft.Office.Interop.Word.WdStatistic Statistic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ComputeStatistics([in]valuetype Microsoft.Office.Interop.Word.WdStatistic Statistic) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.ComputeStatistics(Microsoft.Office.Interop.Word.WdStatistic)" />
      <MemberSignature Language="VB.NET" Value="Public Function ComputeStatistics (Statistic As WdStatistic) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ComputeStatistics(Microsoft::Office::Interop::Word::WdStatistic Statistic);" />
      <MemberSignature Language="F#" Value="abstract member ComputeStatistics : Microsoft.Office.Interop.Word.WdStatistic -&gt; int" Usage="range.ComputeStatistics Statistic" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(178)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Statistic" Type="Microsoft.Office.Interop.Word.WdStatistic" />
      </Parameters>
      <Docs>
        <param name="Statistic">必需 <see cref="T:Microsoft.Office.Interop.Word.WdStatistic" /> 。</param>
        <summary>返回基于指定范围的内容的统计信息。</summary>
        <returns>To be added.</returns>
        <remarks><para>某些<b>WdStatistic</b>常量可能不可用，具体取决于您选择或安装的语言支持（例如，美国英语）。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Conflicts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Conflicts Conflicts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Conflicts Conflicts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Conflicts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Conflicts As Conflicts" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Conflicts ^ Conflicts { Microsoft::Office::Interop::Word::Conflicts ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Conflicts : Microsoft.Office.Interop.Word.Conflicts" Usage="Microsoft.Office.Interop.Word.Range.Conflicts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(506)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(506)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Conflicts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Conflicts" /> 集合对象，该对象包含范围中的所有冲突对象。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Conflicts" /> 集合对象，该对象包含范围中的所有冲突对象。</value>
        <remarks><para>只读。 使用此属性可返回 <see cref="T:Microsoft.Office.Interop.Word.Conflicts" /> 文档的集合对象。 使用<b>冲突</b>（ <paramref name="Index" /> ），其中 <paramref name="Index" /> 是冲突索引号，返回单个 <see cref="T:Microsoft.Office.Interop.Word.Conflict" /> 对象。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentControls">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ContentControls ContentControls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ContentControls ContentControls" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.ContentControls" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentControls As ContentControls" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::ContentControls ^ ContentControls { Microsoft::Office::Interop::Word::ContentControls ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentControls : Microsoft.Office.Interop.Word.ContentControls" Usage="Microsoft.Office.Interop.Word.Range.ContentControls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(424)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(424)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ContentControls</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.ContentControls" /> 集合，该集合代表区域中包含的内容控件。 只读。</summary>
        <value><see cref="T:Microsoft.Office.Interop.Word.ContentControls" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertHangulAndHanja">
      <MemberSignature Language="C#" Value="public void ConvertHangulAndHanja (ref object ConversionsMode, ref object FastConversion, ref object CheckHangulEnding, ref object EnableRecentOrdering, ref object CustomDictionary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConvertHangulAndHanja([in]object&amp; ConversionsMode, [in]object&amp; FastConversion, [in]object&amp; CheckHangulEnding, [in]object&amp; EnableRecentOrdering, [in]object&amp; CustomDictionary) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.ConvertHangulAndHanja(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ConvertHangulAndHanja (Optional ByRef ConversionsMode As Object, Optional ByRef FastConversion As Object, Optional ByRef CheckHangulEnding As Object, Optional ByRef EnableRecentOrdering As Object, Optional ByRef CustomDictionary As Object)" />
      <MemberSignature Language="F#" Value="abstract member ConvertHangulAndHanja : obj * obj * obj * obj * obj -&gt; unit" Usage="range.ConvertHangulAndHanja (ConversionsMode, FastConversion, CheckHangulEnding, EnableRecentOrdering, CustomDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(221)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ConversionsMode" Type="System.Object" RefType="ref" />
        <Parameter Name="FastConversion" Type="System.Object" RefType="ref" />
        <Parameter Name="CheckHangulEnding" Type="System.Object" RefType="ref" />
        <Parameter Name="EnableRecentOrdering" Type="System.Object" RefType="ref" />
        <Parameter Name="CustomDictionary" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ConversionsMode">可选<b>对象</b>。 设置朝鲜文字和朝鲜文汉字之间的转换方向。 可以是下列 <see cref="T:Microsoft.Office.Interop.Word.WdMultipleWordConversionsMode" /> 常量之一： <b>WdHangulToHanja</b>或<b>wdHanjaToHangul</b>。 默认值为属性的当前值 <see cref="P:Microsoft.Office.Interop.Word.Options.MultipleWordConversionsMode" /> 。</param>
        <param name="FastConversion">可选<b>对象</b>。 <b>如此</b> 如果 Microsoft Word 会自动将带有转换仅输入一个建议的单词。 默认值为属性的当前值 <see cref="P:Microsoft.Office.Interop.Word.Options.HangulHanjaFastConversion" /> 。</param>
        <param name="CheckHangulEnding">可选<b>对象</b>。 <b>如此</b>如果 Word 自动检测朝鲜文字结尾并忽略它们。 默认值为属性的当前值 <see cref="P:Microsoft.Office.Interop.Word.Options.CheckHangulEndings" /> 。 如果将该参数 <paramref name="ConversionsMode" /> 设置为<b>wdHanjaToHangul</b>，则忽略此参数。</param>
        <param name="EnableRecentOrdering">可选<b>对象</b>。 <b>如此</b> 如果 Word 显示最近使用过的单词建议列表的顶部。 默认值为属性的当前值 <see cref="P:Microsoft.Office.Interop.Word.Options.EnableHangulHanjaRecentOrdering" /> 。</param>
        <param name="CustomDictionary">可选<b>对象</b>。 自定义朝鲜文字/朝鲜文汉字转换词典的名称。 使用此参数，可以使用主词典中未包含朝鲜文字/朝鲜文汉字转换的自定义词典。</param>
        <summary>将指定范围从朝鲜文字转换为朝鲜文汉字，反之亦然。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToTable">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Table ConvertToTable (ref object Separator, ref object NumRows, ref object NumColumns, ref object InitialColumnWidth, ref object Format, ref object ApplyBorders, ref object ApplyShading, ref object ApplyFont, ref object ApplyColor, ref object ApplyHeadingRows, ref object ApplyLastRow, ref object ApplyFirstColumn, ref object ApplyLastColumn, ref object AutoFit, ref object AutoFitBehavior, ref object DefaultTableBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Table ConvertToTable([in]object&amp; Separator, [in]object&amp; NumRows, [in]object&amp; NumColumns, [in]object&amp; InitialColumnWidth, [in]object&amp; Format, [in]object&amp; ApplyBorders, [in]object&amp; ApplyShading, [in]object&amp; ApplyFont, [in]object&amp; ApplyColor, [in]object&amp; ApplyHeadingRows, [in]object&amp; ApplyLastRow, [in]object&amp; ApplyFirstColumn, [in]object&amp; ApplyLastColumn, [in]object&amp; AutoFit, [in]object&amp; AutoFitBehavior, [in]object&amp; DefaultTableBehavior) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.ConvertToTable(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToTable (Optional ByRef Separator As Object, Optional ByRef NumRows As Object, Optional ByRef NumColumns As Object, Optional ByRef InitialColumnWidth As Object, Optional ByRef Format As Object, Optional ByRef ApplyBorders As Object, Optional ByRef ApplyShading As Object, Optional ByRef ApplyFont As Object, Optional ByRef ApplyColor As Object, Optional ByRef ApplyHeadingRows As Object, Optional ByRef ApplyLastRow As Object, Optional ByRef ApplyFirstColumn As Object, Optional ByRef ApplyLastColumn As Object, Optional ByRef AutoFit As Object, Optional ByRef AutoFitBehavior As Object, Optional ByRef DefaultTableBehavior As Object) As Table" />
      <MemberSignature Language="F#" Value="abstract member ConvertToTable : obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj -&gt; Microsoft.Office.Interop.Word.Table" Usage="range.ConvertToTable (Separator, NumRows, NumColumns, InitialColumnWidth, Format, ApplyBorders, ApplyShading, ApplyFont, ApplyColor, ApplyHeadingRows, ApplyLastRow, ApplyFirstColumn, ApplyLastColumn, AutoFit, AutoFitBehavior, DefaultTableBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(498)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Table</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Separator" Type="System.Object" RefType="ref" />
        <Parameter Name="NumRows" Type="System.Object" RefType="ref" />
        <Parameter Name="NumColumns" Type="System.Object" RefType="ref" />
        <Parameter Name="InitialColumnWidth" Type="System.Object" RefType="ref" />
        <Parameter Name="Format" Type="System.Object" RefType="ref" />
        <Parameter Name="ApplyBorders" Type="System.Object" RefType="ref" />
        <Parameter Name="ApplyShading" Type="System.Object" RefType="ref" />
        <Parameter Name="ApplyFont" Type="System.Object" RefType="ref" />
        <Parameter Name="ApplyColor" Type="System.Object" RefType="ref" />
        <Parameter Name="ApplyHeadingRows" Type="System.Object" RefType="ref" />
        <Parameter Name="ApplyLastRow" Type="System.Object" RefType="ref" />
        <Parameter Name="ApplyFirstColumn" Type="System.Object" RefType="ref" />
        <Parameter Name="ApplyLastColumn" Type="System.Object" RefType="ref" />
        <Parameter Name="AutoFit" Type="System.Object" RefType="ref" />
        <Parameter Name="AutoFitBehavior" Type="System.Object" RefType="ref" />
        <Parameter Name="DefaultTableBehavior" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Separator">可选<b>对象</b>。 指定用于将文本分隔成单元格的字符。 可以是一个字符或一个 <see cref="T:Microsoft.Office.Interop.Word.WdTableFieldSeparator" /> 常量。 如果省略此参数，则使用 <b>DefaultTableSeparator</b> 属性的值。</param>
        <param name="NumRows">可选<b>对象</b>。 表格的行数。 如果省略此参数，Word 将根据区域的内容设置行数。</param>
        <param name="NumColumns">可选<b>对象</b>。 表格中的列数。 如果省略此参数，Word 将根据该范围的内容设置列数。</param>
        <param name="InitialColumnWidth">可选<b>对象</b>。 每一列的初始宽度，以磅为单位。 如果省略此参数，Word 将计算并调整列宽，以使表格填满页面。</param>
        <param name="Format">可选<b>对象</b>。 指定 "表格自动套用格式" 对话框（"表格" 菜单）中列出的预定义格式之一。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdTableFormat" /> 常量之一。</param>
        <param name="ApplyBorders">可选<b>对象</b>。 <b>则</b> 应用指定格式的边框属性。</param>
        <param name="ApplyShading">可选<b>对象</b>。 <b>则</b> 应用指定格式的底纹属性。</param>
        <param name="ApplyFont">可选<b>对象</b>。 <b>则</b> 应用指定格式的字体属性。</param>
        <param name="ApplyColor">可选<b>对象</b>。 <b>则</b> 应用指定格式的颜色属性。</param>
        <param name="ApplyHeadingRows">可选<b>对象</b>。 <b>则</b> 应用指定格式的标题行的属性。</param>
        <param name="ApplyLastRow">可选<b>对象</b>。 <b>则</b> 应用指定格式的最后一行的属性。</param>
        <param name="ApplyFirstColumn">可选<b>对象</b>。 <b>则</b> 应用指定格式的第一列的属性。</param>
        <param name="ApplyLastColumn">可选<b>对象</b>。 <b>则</b> 应用指定格式的最后一列的属性。</param>
        <param name="AutoFit">可选<b>对象</b>。 <b>真</b> 要减少尽最大可能的表格列的宽度，而无需更改文字换行的单元格中。</param>
        <param name="AutoFitBehavior">可选<b>对象</b>。 设置 Word 调整表格的大小的自动调整规则。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdAutoFitBehavior" /> 常量之一。 如果 <paramref name="DefaultTableBehavior" /> 为<b>wdWord8TableBehavior</b>，则忽略此参数。</param>
        <param name="DefaultTableBehavior">可选<b>对象</b>。 设置一个值，指定是否 Microsoft Word 会自动调整大小以适合内容 (自动调整) 表中的单元格。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdDefaultTableBehavior" /> 常量。</param>
        <summary>将区域或所选内容中的文本转换为表格。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToTableOld">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Table ConvertToTableOld (ref object Separator, ref object NumRows, ref object NumColumns, ref object InitialColumnWidth, ref object Format, ref object ApplyBorders, ref object ApplyShading, ref object ApplyFont, ref object ApplyColor, ref object ApplyHeadingRows, ref object ApplyLastRow, ref object ApplyFirstColumn, ref object ApplyLastColumn, ref object AutoFit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Table ConvertToTableOld([in]object&amp; Separator, [in]object&amp; NumRows, [in]object&amp; NumColumns, [in]object&amp; InitialColumnWidth, [in]object&amp; Format, [in]object&amp; ApplyBorders, [in]object&amp; ApplyShading, [in]object&amp; ApplyFont, [in]object&amp; ApplyColor, [in]object&amp; ApplyHeadingRows, [in]object&amp; ApplyLastRow, [in]object&amp; ApplyFirstColumn, [in]object&amp; ApplyLastColumn, [in]object&amp; AutoFit) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.ConvertToTableOld(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToTableOld (Optional ByRef Separator As Object, Optional ByRef NumRows As Object, Optional ByRef NumColumns As Object, Optional ByRef InitialColumnWidth As Object, Optional ByRef Format As Object, Optional ByRef ApplyBorders As Object, Optional ByRef ApplyShading As Object, Optional ByRef ApplyFont As Object, Optional ByRef ApplyColor As Object, Optional ByRef ApplyHeadingRows As Object, Optional ByRef ApplyLastRow As Object, Optional ByRef ApplyFirstColumn As Object, Optional ByRef ApplyLastColumn As Object, Optional ByRef AutoFit As Object) As Table" />
      <MemberSignature Language="F#" Value="abstract member ConvertToTableOld : obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj -&gt; Microsoft.Office.Interop.Word.Table" Usage="range.ConvertToTableOld (Separator, NumRows, NumColumns, InitialColumnWidth, Format, ApplyBorders, ApplyShading, ApplyFont, ApplyColor, ApplyHeadingRows, ApplyLastRow, ApplyFirstColumn, ApplyLastColumn, AutoFit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(162)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Table</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Separator" Type="System.Object" RefType="ref" />
        <Parameter Name="NumRows" Type="System.Object" RefType="ref" />
        <Parameter Name="NumColumns" Type="System.Object" RefType="ref" />
        <Parameter Name="InitialColumnWidth" Type="System.Object" RefType="ref" />
        <Parameter Name="Format" Type="System.Object" RefType="ref" />
        <Parameter Name="ApplyBorders" Type="System.Object" RefType="ref" />
        <Parameter Name="ApplyShading" Type="System.Object" RefType="ref" />
        <Parameter Name="ApplyFont" Type="System.Object" RefType="ref" />
        <Parameter Name="ApplyColor" Type="System.Object" RefType="ref" />
        <Parameter Name="ApplyHeadingRows" Type="System.Object" RefType="ref" />
        <Parameter Name="ApplyLastRow" Type="System.Object" RefType="ref" />
        <Parameter Name="ApplyFirstColumn" Type="System.Object" RefType="ref" />
        <Parameter Name="ApplyLastColumn" Type="System.Object" RefType="ref" />
        <Parameter Name="AutoFit" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Separator">To be added.</param>
        <param name="NumRows">To be added.</param>
        <param name="NumColumns">To be added.</param>
        <param name="InitialColumnWidth">To be added.</param>
        <param name="Format">To be added.</param>
        <param name="ApplyBorders">To be added.</param>
        <param name="ApplyShading">To be added.</param>
        <param name="ApplyFont">To be added.</param>
        <param name="ApplyColor">To be added.</param>
        <param name="ApplyHeadingRows">To be added.</param>
        <param name="ApplyLastRow">To be added.</param>
        <param name="ApplyFirstColumn">To be added.</param>
        <param name="ApplyLastColumn">To be added.</param>
        <param name="AutoFit">To be added.</param>
        <summary>仅供内部使用。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Copy();" />
      <MemberSignature Language="F#" Value="abstract member Copy : unit -&gt; unit" Usage="range.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(120)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将指定对象复制到剪贴板。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyAsPicture">
      <MemberSignature Language="C#" Value="public void CopyAsPicture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyAsPicture() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.CopyAsPicture" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyAsPicture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyAsPicture();" />
      <MemberSignature Language="F#" Value="abstract member CopyAsPicture : unit -&gt; unit" Usage="range.CopyAsPicture " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(167)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><b>CopyAsPicture</b>方法的工作方式与 <see cref="M:Microsoft.Office.Interop.Word.Range.Copy" /> 方法相同。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePublisher">
      <MemberSignature Language="C#" Value="public void CreatePublisher (ref object Edition, ref object ContainsPICT, ref object ContainsRTF, ref object ContainsText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreatePublisher([in]object&amp; Edition, [in]object&amp; ContainsPICT, [in]object&amp; ContainsRTF, [in]object&amp; ContainsText) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.CreatePublisher(System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreatePublisher (Optional ByRef Edition As Object, Optional ByRef ContainsPICT As Object, Optional ByRef ContainsRTF As Object, Optional ByRef ContainsText As Object)" />
      <MemberSignature Language="F#" Value="abstract member CreatePublisher : obj * obj * obj * obj -&gt; unit" Usage="range.CreatePublisher (Edition, ContainsPICT, ContainsRTF, ContainsText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(182)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Edition" Type="System.Object" RefType="ref" />
        <Parameter Name="ContainsPICT" Type="System.Object" RefType="ref" />
        <Parameter Name="ContainsRTF" Type="System.Object" RefType="ref" />
        <Parameter Name="ContainsText" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Edition">此参数仅适用于 Macintosh 并且不应使用。</param>
        <param name="ContainsPICT">此参数仅适用于 Macintosh 并且不应使用。</param>
        <param name="ContainsRTF">此参数仅适用于 Macintosh 并且不应使用。</param>
        <param name="ContainsText">此参数仅适用于 Macintosh 并且不应使用。</param>
        <summary>保留以供内部使用。此成员仅用于 Macintosh，不应使用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Creator { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Creator : int" Usage="Microsoft.Office.Interop.Word.Range.Creator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 32 位整数，它指示在其中创建指定的对象的应用程序。</summary>
        <value>To be added.</value>
        <remarks><para>如果指定的对象是在 Microsoft Word 中创建的，则此属性返回十六进制数字是4d535744，表示字符串 "MSWD"。 [!注释] 此值还可以通过常量 <b>wdCreatorCode</b> 表示。</para>
          <para><b>Creator</b>属性主要用于在 Macintosh 上使用，其中每个应用程序都有一个四字符创建者代码。 例如，Microsoft Word 提供了 MSWD 的创建者代码。 有关此属性的其他信息，请参阅语言参考 Microsoft Office Macintosh 版本所附带的帮助。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public void Cut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cut() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cut();" />
      <MemberSignature Language="F#" Value="abstract member Cut : unit -&gt; unit" Usage="range.Cut " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(119)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将指定对象从文档中移到剪贴板上。</summary>
        <remarks><para>对于 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 或 <see cref="T:Microsoft.Office.Interop.Word.Selection" /> 对象，将对象的内容剪切到剪贴板，但折叠的对象仍保留在文档中。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete (ref object Unit, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Delete([in]object&amp; Unit, [in]object&amp; Count) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.Delete(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete (Optional ByRef Unit As Object, Optional ByRef Count As Object) As Integer" />
      <MemberSignature Language="F#" Value="abstract member Delete : obj * obj -&gt; int" Usage="range.Delete (Unit, Count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Unit" Type="System.Object" RefType="ref" />
        <Parameter Name="Count" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Unit">可选<b>对象</b>。 要删除折叠的范围或所选内容的单位。 可以是下列 <see cref="T:Microsoft.Office.Interop.Word.WdUnits" /> 常量之一： <b>wdCharacter</b> （Default）或<b>wdWord</b>。</param>
        <param name="Count">可选<b>对象</b>。 要删除的单位数。 若要删除该区域或所选内容之后的单位，请折叠该区域或所选内容并使用一个正数。 若要删除区域或所选内容之前的单位，请折叠该区域或所选内容并使用一个负数。</param>
        <summary>删除指定数量的字符或单词。</summary>
        <returns>To be added.</returns>
        <remarks><para>此方法返回一个指示已删除项目数的<b>整数</b>值，如果删除不成功，则返回0（零）。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectLanguage">
      <MemberSignature Language="C#" Value="public void DetectLanguage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DetectLanguage() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.DetectLanguage" />
      <MemberSignature Language="VB.NET" Value="Public Sub DetectLanguage ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DetectLanguage();" />
      <MemberSignature Language="F#" Value="abstract member DetectLanguage : unit -&gt; unit" Usage="range.DetectLanguage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(203)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>分析指定文本，以确定书写文本的语言类型。</summary>
        <remarks><para><b>DetectLanguage</b>方法的结果按字符逐个存储在 <see cref="P:Microsoft.Office.Interop.Word.Range.LanguageID" /> 属性中。 若要读取 <b>语言标识</b> 属性，必须首先指定所选内容或范围内的文本。</para>
          <para>如果<b>DetectLanguage</b>方法已应用于指定的文本，该 <see cref="P:Microsoft.Office.Interop.Word.Range.LanguageDetected" /> 属性将设置为<b>True</b>。 若要重新计算指定文本的语言，必须首先将<b>LanguageDetected</b>属性设置为 False。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableCharacterSpaceGrid">
      <MemberSignature Language="C#" Value="public bool DisableCharacterSpaceGrid { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableCharacterSpaceGrid" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.DisableCharacterSpaceGrid" />
      <MemberSignature Language="VB.NET" Value="Public Property DisableCharacterSpaceGrid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisableCharacterSpaceGrid { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisableCharacterSpaceGrid : bool with get, set" Usage="Microsoft.Office.Interop.Word.Range.DisableCharacterSpaceGrid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(141)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(141)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(141)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>确定 Microsoft Word 是否忽略区域中每行的字符数。</summary>
        <value>To be added.</value>
        <remarks><para>如果 Word 忽略区域中每行的字符数，则此属性返回<b>True</b> ，否则返回<b>False</b> 。</para>
          <para>如果仅有某些指定区域的<b>DisableCharacterSpaceGrid</b>属性设置为<b>True</b> ，则返回<b>wdUndefined</b> 。 </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Document">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Document Document { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Document Document" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Document" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Document As Document" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Document ^ Document { Microsoft::Office::Interop::Word::Document ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Document : Microsoft.Office.Interop.Word.Document" Usage="Microsoft.Office.Interop.Word.Range.Document" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(409)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(409)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Document</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Word.Document" /> 与指定区域相关联的对象。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duplicate">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range Duplicate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Range Duplicate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Duplicate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Duplicate As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Range ^ Duplicate { Microsoft::Office::Interop::Word::Range ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Duplicate : Microsoft.Office.Interop.Word.Range" Usage="Microsoft.Office.Interop.Word.Range.Duplicate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，表示指定范围的所有属性。</summary>
        <value>To be added.</value>
        <remarks><para>通过复制 <b>Range</b> 对象，可以更改所复制的区域的开始或结尾字符位置，而不更改原始区域。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Editors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Editors Editors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Editors Editors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Editors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Editors As Editors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Editors ^ Editors { Microsoft::Office::Interop::Word::Editors ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Editors : Microsoft.Office.Interop.Word.Editors" Usage="Microsoft.Office.Interop.Word.Range.Editors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(343)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(343)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Editors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.Editors" /> 对象，表示有权修改文档中的所选内容或区域的所有用户。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmphasisMark">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdEmphasisMark EmphasisMark { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdEmphasisMark EmphasisMark" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.EmphasisMark" />
      <MemberSignature Language="VB.NET" Value="Public Property EmphasisMark As WdEmphasisMark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdEmphasisMark EmphasisMark { Microsoft::Office::Interop::Word::WdEmphasisMark get(); void set(Microsoft::Office::Interop::Word::WdEmphasisMark value); };" />
      <MemberSignature Language="F#" Value="member this.EmphasisMark : Microsoft.Office.Interop.Word.WdEmphasisMark with get, set" Usage="Microsoft.Office.Interop.Word.Range.EmphasisMark" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(140)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(140)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(140)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdEmphasisMark</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置字符或指定的字符字符串的着重号。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public int End { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 End" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.End" />
      <MemberSignature Language="VB.NET" Value="Public Property End As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int End { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.End : int with get, set" Usage="Microsoft.Office.Interop.Word.Range.End" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置某区域中结束字符的位置。</summary>
        <value>To be added.</value>
        <remarks><para>如果此属性设置为一个小于属性的值 <see cref="P:Microsoft.Office.Interop.Word.Range.Start" /> ，则<b>start</b>属性设置为相同的值（即， <b>start</b>和<b>End</b>属性相等）。</para>
          <para><b>所选内容</b>、<b>范围</b>和<b>书签</b>都具有起始位置和结束位置。 结束位置是故事开始距离最远的点。</para>
          <para>此属性返回结束字符相对于开始部分的位置。 文档主体部分 (<b>wdMainTextStory</b>) 的起始字符位置为 0（零）。 通过设置该属性可以更改选定内容、区域或书签的大小。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EndnoteOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.EndnoteOptions EndnoteOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.EndnoteOptions EndnoteOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.EndnoteOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndnoteOptions As EndnoteOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::EndnoteOptions ^ EndnoteOptions { Microsoft::Office::Interop::Word::EndnoteOptions ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndnoteOptions : Microsoft.Office.Interop.Word.EndnoteOptions" Usage="Microsoft.Office.Interop.Word.Range.EndnoteOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(411)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(411)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.EndnoteOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.EndnoteOptions" /> 对象，表示某一区域或选定内容中的尾注。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Endnotes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Endnotes Endnotes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Endnotes Endnotes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Endnotes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Endnotes As Endnotes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Endnotes ^ Endnotes { Microsoft::Office::Interop::Word::Endnotes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Endnotes : Microsoft.Office.Interop.Word.Endnotes" Usage="Microsoft.Office.Interop.Word.Range.Endnotes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(55)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(55)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Endnotes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.Endnotes" /> 集合，该集合代表区域中的所有尾注。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndOf">
      <MemberSignature Language="C#" Value="public int EndOf (ref object Unit, ref object Extend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 EndOf([in]object&amp; Unit, [in]object&amp; Extend) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.EndOf(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndOf (Optional ByRef Unit As Object, Optional ByRef Extend As Object) As Integer" />
      <MemberSignature Language="F#" Value="abstract member EndOf : obj * obj -&gt; int" Usage="range.EndOf (Unit, Extend)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Unit" Type="System.Object" RefType="ref" />
        <Parameter Name="Extend" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Unit">可选<b>对象</b>。 结束字符位置移至的单元。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdUnits" /> 常量之一。</param>
        <param name="Extend">可选<b>对象</b>。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdMovementType" /> 常量之一。</param>
        <summary>将区域或选定内容的结束字符位置移动或扩展至最近的一个指定文本单元末尾。</summary>
        <returns>To be added.</returns>
        <remarks><para>本方法返回该区域或所选内容所移动或扩展的字符位置数（移动方向为向前）。</para>
          <para>如果区域或选定内容的开始和结束位置都已在指定单位的末尾，则该方法不移动或扩展此区域或选定内容。 </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnhMetaFileBits">
      <MemberSignature Language="C#" Value="public object EnhMetaFileBits { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object EnhMetaFileBits" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.EnhMetaFileBits" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnhMetaFileBits As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ EnhMetaFileBits { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnhMetaFileBits : obj" Usage="Microsoft.Office.Interop.Word.Range.EnhMetaFileBits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(345)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(345)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回所选内容或文本区域的显示方式的图片表示。</summary>
        <value>To be added.</value>
        <remarks><para><b>EnhMetaFileBits</b>属性返回一个可与 Microsoft Windows 32 应用程序编程接口一起使用的字节数组。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Expand">
      <MemberSignature Language="C#" Value="public int Expand (ref object Unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Expand([in]object&amp; Unit) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.Expand(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Expand (Optional ByRef Unit As Object) As Integer" />
      <MemberSignature Language="F#" Value="abstract member Expand : obj -&gt; int" Usage="range.Expand Unit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Unit" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Unit">可选<b>对象</b>。 度量单位以展开该区域。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdUnits" /> 常量之一。</param>
        <summary>扩展指定区域。</summary>
        <returns>To be added.</returns>
        <remarks><para>此属性返回添加到区域中的字符数。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportAsFixedFormat">
      <MemberSignature Language="C#" Value="public void ExportAsFixedFormat (string OutputFileName, Microsoft.Office.Interop.Word.WdExportFormat ExportFormat, bool OpenAfterExport = false, Microsoft.Office.Interop.Word.WdExportOptimizeFor OptimizeFor = Microsoft.Office.Interop.Word.WdExportOptimizeFor.wdExportOptimizeForPrint, bool ExportCurrentPage = false, Microsoft.Office.Interop.Word.WdExportItem Item = Microsoft.Office.Interop.Word.WdExportItem.wdExportDocumentContent, bool IncludeDocProps = false, bool KeepIRM = false, Microsoft.Office.Interop.Word.WdExportCreateBookmarks CreateBookmarks = Microsoft.Office.Interop.Word.WdExportCreateBookmarks.wdExportCreateNoBookmarks, bool DocStructureTags = false, bool BitmapMissingFonts = false, bool UseISO19005_1 = false, ref object FixedFormatExtClassPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportAsFixedFormat([in]string OutputFileName, [in]valuetype Microsoft.Office.Interop.Word.WdExportFormat ExportFormat, [in]bool OpenAfterExport, [in]valuetype Microsoft.Office.Interop.Word.WdExportOptimizeFor OptimizeFor, [in]bool ExportCurrentPage, [in]valuetype Microsoft.Office.Interop.Word.WdExportItem Item, [in]bool IncludeDocProps, [in]bool KeepIRM, [in]valuetype Microsoft.Office.Interop.Word.WdExportCreateBookmarks CreateBookmarks, [in]bool DocStructureTags, [in]bool BitmapMissingFonts, [in]bool UseISO19005_1, [in]object&amp; FixedFormatExtClassPtr) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.ExportAsFixedFormat(System.String,Microsoft.Office.Interop.Word.WdExportFormat,System.Boolean,Microsoft.Office.Interop.Word.WdExportOptimizeFor,System.Boolean,Microsoft.Office.Interop.Word.WdExportItem,System.Boolean,System.Boolean,Microsoft.Office.Interop.Word.WdExportCreateBookmarks,System.Boolean,System.Boolean,System.Boolean,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportAsFixedFormat (OutputFileName As String, ExportFormat As WdExportFormat, Optional OpenAfterExport As Boolean = false, Optional OptimizeFor As WdExportOptimizeFor = Microsoft.Office.Interop.Word.WdExportOptimizeFor.wdExportOptimizeForPrint, Optional ExportCurrentPage As Boolean = false, Optional Item As WdExportItem = Microsoft.Office.Interop.Word.WdExportItem.wdExportDocumentContent, Optional IncludeDocProps As Boolean = false, Optional KeepIRM As Boolean = false, Optional CreateBookmarks As WdExportCreateBookmarks = Microsoft.Office.Interop.Word.WdExportCreateBookmarks.wdExportCreateNoBookmarks, Optional DocStructureTags As Boolean = false, Optional BitmapMissingFonts As Boolean = false, Optional UseISO19005_1 As Boolean = false, Optional ByRef FixedFormatExtClassPtr As Object)" />
      <MemberSignature Language="F#" Value="abstract member ExportAsFixedFormat : string * Microsoft.Office.Interop.Word.WdExportFormat * bool * Microsoft.Office.Interop.Word.WdExportOptimizeFor * bool * Microsoft.Office.Interop.Word.WdExportItem * bool * bool * Microsoft.Office.Interop.Word.WdExportCreateBookmarks * bool * bool * bool * obj -&gt; unit" Usage="range.ExportAsFixedFormat (OutputFileName, ExportFormat, OpenAfterExport, OptimizeFor, ExportCurrentPage, Item, IncludeDocProps, KeepIRM, CreateBookmarks, DocStructureTags, BitmapMissingFonts, UseISO19005_1, FixedFormatExtClassPtr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="OutputFileName" Type="System.String" />
        <Parameter Name="ExportFormat" Type="Microsoft.Office.Interop.Word.WdExportFormat" />
        <Parameter Name="OpenAfterExport" Type="System.Boolean" />
        <Parameter Name="OptimizeFor" Type="Microsoft.Office.Interop.Word.WdExportOptimizeFor" />
        <Parameter Name="ExportCurrentPage" Type="System.Boolean" />
        <Parameter Name="Item" Type="Microsoft.Office.Interop.Word.WdExportItem" />
        <Parameter Name="IncludeDocProps" Type="System.Boolean" />
        <Parameter Name="KeepIRM" Type="System.Boolean" />
        <Parameter Name="CreateBookmarks" Type="Microsoft.Office.Interop.Word.WdExportCreateBookmarks" />
        <Parameter Name="DocStructureTags" Type="System.Boolean" />
        <Parameter Name="BitmapMissingFonts" Type="System.Boolean" />
        <Parameter Name="UseISO19005_1" Type="System.Boolean" />
        <Parameter Name="FixedFormatExtClassPtr" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="OutputFileName">必需的<b>字符串</b>：新的 PDF 或 XPS 文件的路径和文件名。</param>
        <param name="ExportFormat">必需 <see cref="T:Microsoft.Office.Interop.Word.WdExportFormat" /> 指定 PDF 或 XPS 格式。</param>
        <param name="OpenAfterExport">可选<b>布尔值</b>在导出内容后打开新文件。</param>
        <param name="OptimizeFor">Optional <see cref="T:Microsoft.Office.Interop.Word.WdExportOptimizeFor" /> 指定是否针对屏幕或打印进行优化。</param>
        <param name="ExportCurrentPage">可选<b>布尔值</b>指定是否导出当前页。  <b>True</b> 将导出整个页面。 <b>False</b> 将导出当前的选择。</param>
        <param name="Item">Optional <see cref="T:Microsoft.Office.Interop.Word.WdExportItem" /> 指定导出过程是仅包含文本还是包含带标记的文本。</param>
        <param name="IncludeDocProps">可选<b>布尔值</b>指定是否在新导出的文件中包含文档属性。</param>
        <param name="KeepIRM">可选<b>布尔值</b>指定是否将 irm 权限复制到 XPS 文档中（如果源文档具有 IRM 保护）。 默认值为 <b>True</b> 。</param>
        <param name="CreateBookmarks">Optional <see cref="T:Microsoft.Office.Interop.Word.WdExportCreateBookmarks" /> 指定是否导出书签以及要导出的书签的类型。</param>
        <param name="DocStructureTags">可选<b>布尔值</b>指定是否包含其他数据来帮助屏幕阅读器，例如内容的流和逻辑组织的相关信息。 默认值为<b>True</b>。</param>
        <param name="BitmapMissingFonts">可选<b>布尔值</b>指定是否包含文本的位图。 当字体许可不允许在 PDF 文件中嵌入某一字体时，请将此参数设置为 <b>True</b> 。 如果 <b>False</b> ，则引用该字体，和查看者的计算机会替换合适的字体，如果编写的一个不可用。 默认值为<b>True</b>。</param>
        <param name="UseISO19005_1">可选<b>布尔值</b>指定是否将 pdf 使用限制为标准化为 ISO 19005-1 的 pdf 子集。 如果 <b>真</b> ，所产生的文件会更加可靠地自我包含，但可能会更大或显示更多的视觉瑕疵，由于受到格式的限制。 默认值为<b>False</b>。</param>
        <param name="FixedFormatExtClassPtr">Optional<b>对象</b>指定一个指向外接程序的指针，该外接程序允许调用代码的备用实现。  代码的备用实现将对应用程序生成的 EMF 和 EMF+ 页面描述进行解释，以生成其自身的 PDF 或 XPS。 有关详细信息，请参阅 "<a href="bd5ab634-71c4-4d29-a264-05969eded844">扩展 Office （2007）固定格式导出功能</a>"</param>
        <summary>将文档的一部分保存为 PDF 或 XPS 格式。</summary>
        <remarks><para>只有在安装加载项之后，才可以通过 2007 Microsoft Office system 程序将其另存为 PDF 或 XPS 文件。  <a href="http://www.microsoft.com/downloads/details.aspx?FamilyId=4D951911-3E7E-4AE6-B059-A2E79ED87041&amp;displaylang=enOnline">Microsoft 下载中心</a></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportFragment">
      <MemberSignature Language="C#" Value="public void ExportFragment (string FileName, Microsoft.Office.Interop.Word.WdSaveFormat Format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportFragment([in]string FileName, [in]valuetype Microsoft.Office.Interop.Word.WdSaveFormat Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.ExportFragment(System.String,Microsoft.Office.Interop.Word.WdSaveFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportFragment (FileName As String, Format As WdSaveFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportFragment(System::String ^ FileName, Microsoft::Office::Interop::Word::WdSaveFormat Format);" />
      <MemberSignature Language="F#" Value="abstract member ExportFragment : string * Microsoft.Office.Interop.Word.WdSaveFormat -&gt; unit" Usage="range.ExportFragment (FileName, Format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(425)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileName" Type="System.String" />
        <Parameter Name="Format" Type="Microsoft.Office.Interop.Word.WdSaveFormat" />
      </Parameters>
      <Docs>
        <param name="FileName">必需的<b>字符串</b>指定要在其中保存文档片段的文件的路径和文件名。</param>
        <param name="Format">必需 <see cref="T:Microsoft.Office.Interop.Word.WdSaveFormat" /> 指定文档片段文件的文件格式。 您可以使用 Microsoft Office Word 支持的任何格式保存文档片段。</param>
        <summary>将所选区域导出到文档中，以便用作文档片段。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fields">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Fields Fields { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Fields Fields" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Fields" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Fields As Fields" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Fields ^ Fields { Microsoft::Office::Interop::Word::Fields ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Fields : Microsoft.Office.Interop.Word.Fields" Usage="Microsoft.Office.Interop.Word.Range.Fields" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Fields</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个只读 <see cref="T:Microsoft.Office.Interop.Word.Fields" /> 集合，该集合代表区域中的所有字段。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Find Find { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Find Find" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Find" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Find As Find" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Find ^ Find { Microsoft::Office::Interop::Word::Find ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Find : Microsoft.Office.Interop.Word.Find" Usage="Microsoft.Office.Interop.Word.Range.Find" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Find</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.Find" /> 对象，其中包含查找操作的条件。</summary>
        <value>To be added.</value>
        <remarks><para>将此属性与对象一起使用时 <see cref="T:Microsoft.Office.Interop.Word.Selection" /> ，如果查找操作成功，将更改所选内容。 如果此属性与对象一起使用 <see cref="T:Microsoft.Office.Interop.Word.Range" /> ，则不更改所选内容，除非应用了该 <see cref="M:Microsoft.Office.Interop.Word.Range.Select" /> 方法。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FitTextWidth">
      <MemberSignature Language="C#" Value="public float FitTextWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 FitTextWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.FitTextWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property FitTextWidth As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float FitTextWidth { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.FitTextWidth : single with get, set" Usage="Microsoft.Office.Interop.Word.Range.FitTextWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置 Microsoft Word 适应当前区域中的文本的宽度（以当前度量单位表示）。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Font Font" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Font" />
      <MemberSignature Language="VB.NET" Value="Public Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Font ^ Font { Microsoft::Office::Interop::Word::Font ^ get(); void set(Microsoft::Office::Interop::Word::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Font : Microsoft.Office.Interop.Word.Font with get, set" Usage="Microsoft.Office.Interop.Word.Range.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置一个 <see cref="T:Microsoft.Office.Interop.Word.Font" /> 对象，该对象代表指定对象的字符格式。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FootnoteOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.FootnoteOptions FootnoteOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.FootnoteOptions FootnoteOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.FootnoteOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FootnoteOptions As FootnoteOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::FootnoteOptions ^ FootnoteOptions { Microsoft::Office::Interop::Word::FootnoteOptions ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FootnoteOptions : Microsoft.Office.Interop.Word.FootnoteOptions" Usage="Microsoft.Office.Interop.Word.Range.FootnoteOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(410)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(410)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.FootnoteOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.FootnoteOptions" /> 对象，表示区域中的脚注选项。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Footnotes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Footnotes Footnotes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Footnotes Footnotes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Footnotes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Footnotes As Footnotes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Footnotes ^ Footnotes { Microsoft::Office::Interop::Word::Footnotes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Footnotes : Microsoft.Office.Interop.Word.Footnotes" Usage="Microsoft.Office.Interop.Word.Range.Footnotes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(54)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(54)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Footnotes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.Footnotes" /> 集合，该集合代表区域中的所有脚注。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormattedText">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range FormattedText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Range FormattedText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.FormattedText" />
      <MemberSignature Language="VB.NET" Value="Public Property FormattedText As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Range ^ FormattedText { Microsoft::Office::Interop::Word::Range ^ get(); void set(Microsoft::Office::Interop::Word::Range ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FormattedText : Microsoft.Office.Interop.Word.Range with get, set" Usage="Microsoft.Office.Interop.Word.Range.FormattedText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，该对象包含指定区域或选定内容中的格式化文本。</summary>
        <value>To be added.</value>
        <remarks><para>此属性返回一个<b>range</b>对象，该对象具有指定范围中的字符格式和文本。 如果在区域或所选内容中有一个段落标记，则<b>range</b>对象中包含段落格式。</para>
          <para>当设置此属性时，区域中的文本将替换带格式的文本。 如果不想替换现有的文本，请在 <see cref="M:Microsoft.Office.Interop.Word.Range.Collapse(System.Object@)" /> 使用此属性之前使用方法。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FormFields">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.FormFields FormFields { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.FormFields FormFields" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.FormFields" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FormFields As FormFields" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::FormFields ^ FormFields { Microsoft::Office::Interop::Word::FormFields ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FormFields : Microsoft.Office.Interop.Word.FormFields" Usage="Microsoft.Office.Interop.Word.Range.FormFields" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(65)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(65)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.FormFields</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.FormFields" /> 集合，该集合代表区域中的所有窗体域。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Frames">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Frames Frames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Frames Frames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Frames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Frames As Frames" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Frames ^ Frames { Microsoft::Office::Interop::Word::Frames ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Frames : Microsoft.Office.Interop.Word.Frames" Usage="Microsoft.Office.Interop.Word.Range.Frames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(66)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(66)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Frames</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.Frames" /> 集合，该集合代表区域中的所有图文框。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSpellingSuggestions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.SpellingSuggestions GetSpellingSuggestions (ref object CustomDictionary, ref object IgnoreUppercase, ref object MainDictionary, ref object SuggestionMode, ref object CustomDictionary2, ref object CustomDictionary3, ref object CustomDictionary4, ref object CustomDictionary5, ref object CustomDictionary6, ref object CustomDictionary7, ref object CustomDictionary8, ref object CustomDictionary9, ref object CustomDictionary10);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.SpellingSuggestions GetSpellingSuggestions([in]object&amp; CustomDictionary, [in]object&amp; IgnoreUppercase, [in]object&amp; MainDictionary, [in]object&amp; SuggestionMode, [in]object&amp; CustomDictionary2, [in]object&amp; CustomDictionary3, [in]object&amp; CustomDictionary4, [in]object&amp; CustomDictionary5, [in]object&amp; CustomDictionary6, [in]object&amp; CustomDictionary7, [in]object&amp; CustomDictionary8, [in]object&amp; CustomDictionary9, [in]object&amp; CustomDictionary10) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.GetSpellingSuggestions(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpellingSuggestions (Optional ByRef CustomDictionary As Object, Optional ByRef IgnoreUppercase As Object, Optional ByRef MainDictionary As Object, Optional ByRef SuggestionMode As Object, Optional ByRef CustomDictionary2 As Object, Optional ByRef CustomDictionary3 As Object, Optional ByRef CustomDictionary4 As Object, Optional ByRef CustomDictionary5 As Object, Optional ByRef CustomDictionary6 As Object, Optional ByRef CustomDictionary7 As Object, Optional ByRef CustomDictionary8 As Object, Optional ByRef CustomDictionary9 As Object, Optional ByRef CustomDictionary10 As Object) As SpellingSuggestions" />
      <MemberSignature Language="F#" Value="abstract member GetSpellingSuggestions : obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj -&gt; Microsoft.Office.Interop.Word.SpellingSuggestions" Usage="range.GetSpellingSuggestions (CustomDictionary, IgnoreUppercase, MainDictionary, SuggestionMode, CustomDictionary2, CustomDictionary3, CustomDictionary4, CustomDictionary5, CustomDictionary6, CustomDictionary7, CustomDictionary8, CustomDictionary9, CustomDictionary10)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.SpellingSuggestions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CustomDictionary" Type="System.Object" RefType="ref" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" RefType="ref" />
        <Parameter Name="MainDictionary" Type="System.Object" RefType="ref" />
        <Parameter Name="SuggestionMode" Type="System.Object" RefType="ref" />
        <Parameter Name="CustomDictionary2" Type="System.Object" RefType="ref" />
        <Parameter Name="CustomDictionary3" Type="System.Object" RefType="ref" />
        <Parameter Name="CustomDictionary4" Type="System.Object" RefType="ref" />
        <Parameter Name="CustomDictionary5" Type="System.Object" RefType="ref" />
        <Parameter Name="CustomDictionary6" Type="System.Object" RefType="ref" />
        <Parameter Name="CustomDictionary7" Type="System.Object" RefType="ref" />
        <Parameter Name="CustomDictionary8" Type="System.Object" RefType="ref" />
        <Parameter Name="CustomDictionary9" Type="System.Object" RefType="ref" />
        <Parameter Name="CustomDictionary10" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="CustomDictionary">可选<b>对象</b>。 可以是返回对象的表达式，也可以是 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 自定义词典的文件名。</param>
        <param name="IgnoreUppercase">可选<b>对象</b>。 <b>真</b> 要忽略全部大写的单词。 如果省略此参数，则使用属性的当前值 <see cref="P:Microsoft.Office.Interop.Word.Options.IgnoreUppercase" /> 。</param>
        <param name="MainDictionary">可选<b>对象</b>。 表达式，可返回一个 <b>字典</b> 对象或主词典的文件名。 如果不指定主词典，Word 会使用对应于该区域中的第一个单词的语言格式的主词典。</param>
        <param name="SuggestionMode">可选<b>对象</b>。 指定 Word 提出拼写建议的方式。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdSpellingWordType" /> 常量之一。 默认值是 <b>WdSpellword</b> 。</param>
        <param name="CustomDictionary2">可选<b>对象</b>。 其中任何一个表达式，可返回一个 <b>字典</b> 对象或一个附加的自定义词典的文件名。 您可以指定多达 9 个附加词典。</param>
        <param name="CustomDictionary3">可选<b>对象</b>。 其中任何一个表达式，可返回一个 <b>字典</b> 对象或一个附加的自定义词典的文件名。</param>
        <param name="CustomDictionary4">可选<b>对象</b>。 其中任何一个表达式，可返回一个 <b>字典</b> 对象或一个附加的自定义词典的文件名。</param>
        <param name="CustomDictionary5">可选<b>对象</b>。 其中任何一个表达式，可返回一个 <b>字典</b> 对象或一个附加的自定义词典的文件名。</param>
        <param name="CustomDictionary6">可选<b>对象</b>。 其中任何一个表达式，可返回一个 <b>字典</b> 对象或一个附加的自定义词典的文件名。</param>
        <param name="CustomDictionary7">可选<b>对象</b>。 其中任何一个表达式，可返回一个 <b>字典</b> 对象或一个附加的自定义词典的文件名。</param>
        <param name="CustomDictionary8">可选<b>对象</b>。 其中任何一个表达式，可返回一个 <b>字典</b> 对象或一个附加的自定义词典的文件名。</param>
        <param name="CustomDictionary9">可选<b>对象</b>。 其中任何一个表达式，可返回一个 <b>字典</b> 对象或一个附加的自定义词典的文件名。</param>
        <param name="CustomDictionary10">可选<b>对象</b>。 其中任何一个表达式，可返回一个 <b>字典</b> 对象或一个附加的自定义词典的文件名。</param>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.SpellingSuggestions" /> 集合，表示为指定区域中的第一个单词的拼写替换建议的单词。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GoTo">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range GoTo (ref object What, ref object Which, ref object Count, ref object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Range GoTo([in]object&amp; What, [in]object&amp; Which, [in]object&amp; Count, [in]object&amp; Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.GoTo(System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GoTo (Optional ByRef What As Object, Optional ByRef Which As Object, Optional ByRef Count As Object, Optional ByRef Name As Object) As Range" />
      <MemberSignature Language="F#" Value="abstract member GoTo : obj * obj * obj * obj -&gt; Microsoft.Office.Interop.Word.Range" Usage="range.GoTo (What, Which, Count, Name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(173)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="What" Type="System.Object" RefType="ref" />
        <Parameter Name="Which" Type="System.Object" RefType="ref" />
        <Parameter Name="Count" Type="System.Object" RefType="ref" />
        <Parameter Name="Name" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="What">可选<b>对象</b>。 指定区域或选定内容要移动到的项的类别。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdGoToItem" /> 常量之一。</param>
        <param name="Which">可选<b>对象</b>。 指定区域或选定内容要移动到的项。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdGoToDirection" /> 常量之一。</param>
        <param name="Count">可选<b>对象</b>。 在文档中的项的数目。 默认值为1。只有正值是有效的值。 若要指定区域或所选内容之前的项，请使用<b>wdGoToPrevious</b>作为 <paramref name="Which" /> 参数并指定一个 <paramref name="Count" /> 值。</param>
        <param name="Name">可选<b>对象</b>。 如果 <paramref name="What" /> 参数为<b>wdGoToBookmark</b>、 <b>WdGoToComment</b>、 <b>wdGoToField</b>或<b>wdGoToObject</b>，则此参数指定一个名称。</param>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，表示指定项（如页、书签或字段）的起始位置。</summary>
        <returns>To be added.</returns>
        <remarks><para>当您使用 <b>GoTo</b> 方法与 <b>wdGoToGrammaticalError</b> 、 <b>wdGoToProofreadingError</b> 或 <b>wdGoToSpellingError</b> 的常量时，则返回的 <b>范围</b> 包括任何语法错误的文本或拼写错误的文本。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GoToEditableRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range GoToEditableRange (ref object EditorID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Range GoToEditableRange([in]object&amp; EditorID) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.GoToEditableRange(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GoToEditableRange (Optional ByRef EditorID As Object) As Range" />
      <MemberSignature Language="F#" Value="abstract member GoToEditableRange : obj -&gt; Microsoft.Office.Interop.Word.Range" Usage="range.GoToEditableRange EditorID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(415)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EditorID" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="EditorID">可选<b>对象</b>。 可以是一个<b>字符串</b>，表示用户的电子邮件别名（如果在同一域中）、电子邮件地址或 <see cref="T:Microsoft.Office.Interop.Word.WdEditorType" /> 代表一组用户的常量。 如果省略，则选择所有用户都有权限编辑的所有区域。</param>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> object 类型的对象，该对象代表指定用户或用户组可以修改的文档区域。</summary>
        <returns>To be added.</returns>
        <remarks><para>您还可以使用 <see cref="P:Microsoft.Office.Interop.Word.Editor.NextRange" /> 对象的属性 <see cref="T:Microsoft.Office.Interop.Word.Editor" /> 返回用户有权修改的下一个区域。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GoToNext">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range GoToNext (Microsoft.Office.Interop.Word.WdGoToItem What);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Range GoToNext([in]valuetype Microsoft.Office.Interop.Word.WdGoToItem What) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.GoToNext(Microsoft.Office.Interop.Word.WdGoToItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function GoToNext (What As WdGoToItem) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Word::Range ^ GoToNext(Microsoft::Office::Interop::Word::WdGoToItem What);" />
      <MemberSignature Language="F#" Value="abstract member GoToNext : Microsoft.Office.Interop.Word.WdGoToItem -&gt; Microsoft.Office.Interop.Word.Range" Usage="range.GoToNext What" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(174)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="What" Type="Microsoft.Office.Interop.Word.WdGoToItem" />
      </Parameters>
      <Docs>
        <param name="What">必需 <see cref="T:Microsoft.Office.Interop.Word.WdGoToItem" /> 。</param>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，该对象引用由参数指定的下一个项目或位置的起始位置 <paramref name="What" /> 。</summary>
        <returns>To be added.</returns>
        <remarks><para>[!注释] 当您使用此方法与 <b>wdGoToGrammaticalError</b> 、 <b>wdGoToProofreadingError</b> 或 <b>wdGoToSpellingError</b> 常量时，则返回 <b>Range</b> 对象包括任何语法错误的文本或拼写错误的文本。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GoToPrevious">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range GoToPrevious (Microsoft.Office.Interop.Word.WdGoToItem What);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Range GoToPrevious([in]valuetype Microsoft.Office.Interop.Word.WdGoToItem What) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.GoToPrevious(Microsoft.Office.Interop.Word.WdGoToItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function GoToPrevious (What As WdGoToItem) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Word::Range ^ GoToPrevious(Microsoft::Office::Interop::Word::WdGoToItem What);" />
      <MemberSignature Language="F#" Value="abstract member GoToPrevious : Microsoft.Office.Interop.Word.WdGoToItem -&gt; Microsoft.Office.Interop.Word.Range" Usage="range.GoToPrevious What" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(175)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="What" Type="Microsoft.Office.Interop.Word.WdGoToItem" />
      </Parameters>
      <Docs>
        <param name="What">必需 <see cref="T:Microsoft.Office.Interop.Word.WdGoToItem" /> 。 指定区域或所选内容要移动到的项目。</param>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，该对象引用上一项或参数指定的位置的起始位置 <paramref name="What" /> 。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GrammarChecked">
      <MemberSignature Language="C#" Value="public bool GrammarChecked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GrammarChecked" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.GrammarChecked" />
      <MemberSignature Language="VB.NET" Value="Public Property GrammarChecked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GrammarChecked { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.GrammarChecked : bool with get, set" Usage="Microsoft.Office.Interop.Word.Range.GrammarChecked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(260)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(260)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(260)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>确定是否已对指定区域运行语法检查。</summary>
        <value>To be added.</value>
        <remarks><para>如果已对指定的区域或文档运行语法检查，则此属性返回<b>True</b> ，如果未对指定范围或文档中的某些文档进行语法检查，则返回<b>False</b> 。</para>
          <para>要重新检查区域或文档的语法，可将 <b>GrammarChecked</b> 属性设置为 <b>False</b>。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GrammaticalErrors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ProofreadingErrors GrammaticalErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ProofreadingErrors GrammaticalErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.GrammaticalErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GrammaticalErrors As ProofreadingErrors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::ProofreadingErrors ^ GrammaticalErrors { Microsoft::Office::Interop::Word::ProofreadingErrors ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GrammaticalErrors : Microsoft.Office.Interop.Word.ProofreadingErrors" Usage="Microsoft.Office.Interop.Word.Range.GrammaticalErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(315)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(315)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ProofreadingErrors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.ProofreadingErrors" /> 集合，该集合代表在指定区域上进行语法检查失败的句子。</summary>
        <value>To be added.</value>
        <remarks><para>可以有多个错误，每个句子。</para>
          <para>如果没有语法错误， <see cref="P:Microsoft.Office.Interop.Word.ProofreadingErrors.Count" /> 由<b>GrammaticalErrors</b>属性返回的<b>ProofreadingErrors</b>对象的属性将返回0（零）。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HighlightColorIndex">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdColorIndex HighlightColorIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdColorIndex HighlightColorIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.HighlightColorIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property HighlightColorIndex As WdColorIndex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdColorIndex HighlightColorIndex { Microsoft::Office::Interop::Word::WdColorIndex get(); void set(Microsoft::Office::Interop::Word::WdColorIndex value); };" />
      <MemberSignature Language="F#" Value="member this.HighlightColorIndex : Microsoft.Office.Interop.Word.WdColorIndex with get, set" Usage="Microsoft.Office.Interop.Word.Range.HighlightColorIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(301)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(301)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(301)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdColorIndex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置指定区域的突出显示颜色。</summary>
        <value>To be added.</value>
        <remarks><para>将此属性设置为<b>wdNoHighlight</b>可从指定区域删除突出显示颜色（如果有）。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalInVertical">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdHorizontalInVerticalType HorizontalInVertical { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdHorizontalInVerticalType HorizontalInVertical" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.HorizontalInVertical" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalInVertical As WdHorizontalInVerticalType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdHorizontalInVerticalType HorizontalInVertical { Microsoft::Office::Interop::Word::WdHorizontalInVerticalType get(); void set(Microsoft::Office::Interop::Word::WdHorizontalInVerticalType value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalInVertical : Microsoft.Office.Interop.Word.WdHorizontalInVerticalType with get, set" Usage="Microsoft.Office.Interop.Word.Range.HorizontalInVertical" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdHorizontalInVerticalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置水平垂直文本中的文本的格式。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HTMLDivisions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.HTMLDivisions HTMLDivisions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.HTMLDivisions HTMLDivisions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.HTMLDivisions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HTMLDivisions As HTMLDivisions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::HTMLDivisions ^ HTMLDivisions { Microsoft::Office::Interop::Word::HTMLDivisions ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HTMLDivisions : Microsoft.Office.Interop.Word.HTMLDivisions" Usage="Microsoft.Office.Interop.Word.Range.HTMLDivisions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(406)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(406)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.HTMLDivisions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.HTMLDivisions" /> 对象，表示 Web 文档中的 HTML 划分。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hyperlinks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Hyperlinks Hyperlinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Hyperlinks Hyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Hyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hyperlinks As Hyperlinks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Hyperlinks ^ Hyperlinks { Microsoft::Office::Interop::Word::Hyperlinks ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Hyperlinks : Microsoft.Office.Interop.Word.Hyperlinks" Usage="Microsoft.Office.Interop.Word.Range.Hyperlinks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(156)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(156)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Hyperlinks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.Hyperlinks" /> 集合，该集合代表指定区域中的所有超链接。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.ID" />
      <MemberSignature Language="VB.NET" Value="Public Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ID : string with get, set" Usage="Microsoft.Office.Interop.Word.Range.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(405)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(405)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(405)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置指定对象的标识标签当前文档保存为 Web 页时。</summary>
        <value>To be added.</value>
        <remarks><para>除 <see cref="T:Microsoft.Office.Interop.Word.Editor" /> 对象之外，您可以将标签用作来自其他网页或当前文档中的超链接引用。</para>
          <para>Microsoft Word 不存储对象的<b>ID</b>属性设置 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 。 如果设置<b>ID</b>属性，然后返回其值，则返回的值将为空<b>字符串</b>。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportFragment">
      <MemberSignature Language="C#" Value="public void ImportFragment (string FileName, bool MatchDestination = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ImportFragment([in]string FileName, [in]bool MatchDestination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.ImportFragment(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ImportFragment (FileName As String, Optional MatchDestination As Boolean = false)" />
      <MemberSignature Language="F#" Value="abstract member ImportFragment : string * bool -&gt; unit" Usage="range.ImportFragment (FileName, MatchDestination)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileName" Type="System.String" />
        <Parameter Name="MatchDestination" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="FileName">必需的<b>字符串</b>指定存储文档片段的路径和文件名。</param>
        <param name="MatchDestination">可选<b>布尔值</b>指定是否匹配目标格式设置。 如果该属性值为 <b>False</b>，则导入的文档片段保持原文档的格式。 默认值为 <b>False</b> 。</param>
        <summary>将文档片段导入文档中的指定区域。</summary>
        <remarks><para>此方法将替换区域的内容。 若要阻止这种情况发生，请 <see cref="M:Microsoft.Office.Interop.Word.Range.Collapse(System.Object@)" /> 在使用此方法之前使用方法。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Information">
      <MemberSignature Language="C#" Value="public object Information[Microsoft.Office.Interop.Word.WdInformation Type] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Information(valuetype Microsoft.Office.Interop.Word.WdInformation)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Information(Microsoft.Office.Interop.Word.WdInformation)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Information(Type As WdInformation) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Information[Microsoft::Office::Interop::Word::WdInformation] { System::Object ^ get(Microsoft::Office::Interop::Word::WdInformation Type); };" />
      <MemberSignature Language="F#" Value="member this.Information(Microsoft.Office.Interop.Word.WdInformation) : obj" Usage="Microsoft.Office.Interop.Word.Range.Information" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(313)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(313)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Word.WdInformation" />
      </Parameters>
      <Docs>
        <param name="Type">必需 <see cref="T:Microsoft.Office.Interop.Word.WdInformation" /> 。 信息类型。</param>
        <summary>返回有关指定的所选内容或区域的信息。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InlineShapes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.InlineShapes InlineShapes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.InlineShapes InlineShapes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.InlineShapes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InlineShapes As InlineShapes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::InlineShapes ^ InlineShapes { Microsoft::Office::Interop::Word::InlineShapes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InlineShapes : Microsoft.Office.Interop.Word.InlineShapes" Usage="Microsoft.Office.Interop.Word.Range.InlineShapes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(319)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(319)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.InlineShapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.InlineShapes" /> 集合，该集合代表 <see cref="T:Microsoft.Office.Interop.Word.InlineShape" /> 文档、区域或选定内容中的所有对象。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InRange">
      <MemberSignature Language="C#" Value="public bool InRange (Microsoft.Office.Interop.Word.Range Range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InRange([in]class Microsoft.Office.Interop.Word.Range Range) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InRange(Microsoft.Office.Interop.Word.Range)" />
      <MemberSignature Language="VB.NET" Value="Public Function InRange (Range As Range) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InRange(Microsoft::Office::Interop::Word::Range ^ Range);" />
      <MemberSignature Language="F#" Value="abstract member InRange : Microsoft.Office.Interop.Word.Range -&gt; bool" Usage="range.InRange Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="Microsoft.Office.Interop.Word.Range" />
      </Parameters>
      <Docs>
        <param name="Range">必需的<b>Range</b>对象。 要对其进行比较的区域 <paramref name="expression" /> 。</param>
        <summary>确定应用该方法的区域是否包含在指定的范围内。</summary>
        <returns>To be added.</returns>
        <remarks><para>如果应用该方法的区域包含在参数所指定的范围中，则此方法返回<b>True</b> <paramref name="Range" /> ; 如果不是，则返回<b>False</b> 。</para>
          <para>此方法 <paramref name="Range" /> 通过比较起始字符和结束字符的位置以及文字部分的类型，来确定表达式返回的区域或所选内容是否包含在指定中。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAfter">
      <MemberSignature Language="C#" Value="public void InsertAfter (string Text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertAfter([in]string Text) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InsertAfter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertAfter (Text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertAfter(System::String ^ Text);" />
      <MemberSignature Language="F#" Value="abstract member InsertAfter : string -&gt; unit" Usage="range.InsertAfter Text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(104)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Text">必需的 <b>字符串</b> 。 要插入的文本。</param>
        <summary>将指定文本插入范围或所选内容的末尾。</summary>
        <remarks><para>应用此方法之后，该范围将扩展，以包含新文本。</para>
          <para>如果对引用整个段落的范围使用此方法，则在末段标记之后插入文本（插入的文本将出现在下一段的开头）。 若要在段落的末尾插入文本，请确定结束点并从该位置减去1（段落标记是一个字符）。</para>
          <para>然而，如果该范围以一个段落标记结尾，而该段落标记正好又是文档的末尾，则 Microsoft Word 在末段标记前插入文本，而不是在文档末尾创建一个新段落。</para>
          <para>同样，如果该范围是书签，Word 将插入指定的文本，但不会扩展范围或书签以包含新文本。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAlignmentTab">
      <MemberSignature Language="C#" Value="public void InsertAlignmentTab (int Alignment, int RelativeTo = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertAlignmentTab([in]int32 Alignment, [in]int32 RelativeTo) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InsertAlignmentTab(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertAlignmentTab (Alignment As Integer, Optional RelativeTo As Integer = 0)" />
      <MemberSignature Language="F#" Value="abstract member InsertAlignmentTab : int * int -&gt; unit" Usage="range.InsertAlignmentTab (Alignment, RelativeTo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(500)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Alignment" Type="System.Int32" />
        <Parameter Name="RelativeTo" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Alignment">必需的<b>Integer</b>指示制表位的对齐类型（左对齐、居中或右对齐）。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdAlignmentTabAlignment" /> 常量之一。</param>
        <param name="RelativeTo">必需的<b>Integer</b>指示制表位是相对于边距还是相对于段落缩进。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdAlignmentTabRelative" /> 常量之一。</param>
        <summary>相对于边距或缩进插入始终位于同一点的绝对制表符。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAutoText">
      <MemberSignature Language="C#" Value="public void InsertAutoText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertAutoText() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InsertAutoText" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertAutoText ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertAutoText();" />
      <MemberSignature Language="F#" Value="abstract member InsertAutoText : unit -&gt; unit" Usage="range.InsertAutoText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>尝试将指定区域中的文字或某一区域周围的文字与现有的“自动图文集”词条名称相匹配。</summary>
        <remarks><para>如果找到任何这样的匹配项， <b>InsertAutoText</b>将插入 "自动图文集" 词条以替换该文本。 如果找不到匹配项，则会发生错误。</para>
          <para>可以将 <see cref="M:Microsoft.Office.Interop.Word.AutoTextEntry.Insert(Microsoft.Office.Interop.Word.Range,System.Object@)" /> 方法与对象结合使用， <see cref="T:Microsoft.Office.Interop.Word.AutoTextEntry" /> 以插入特定的 "自动图文集" 词条。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertBefore">
      <MemberSignature Language="C#" Value="public void InsertBefore (string Text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertBefore([in]string Text) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InsertBefore(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertBefore (Text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertBefore(System::String ^ Text);" />
      <MemberSignature Language="F#" Value="abstract member InsertBefore : string -&gt; unit" Usage="range.InsertBefore Text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Text">必需的 <b>字符串</b> 。 要插入的文本。</param>
        <summary>在指定的范围前插入指定文本。</summary>
        <remarks><para>在插入文本之后，该范围将扩展，以包含新文本。如果该范围是书签，则书签也会扩展，以包含新文本。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertBreak">
      <MemberSignature Language="C#" Value="public void InsertBreak (ref object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertBreak([in]object&amp; Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InsertBreak(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertBreak (Optional ByRef Type As Object)" />
      <MemberSignature Language="F#" Value="abstract member InsertBreak : obj -&gt; unit" Usage="range.InsertBreak Type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Type">可选<b>对象</b>。 要插入的分隔符的类型。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdBreakType" /> 常量之一。</param>
        <summary>插入分页符、分栏符或分节符。</summary>
        <remarks><para>当插入分页符或分栏符时，范围将被中断。 如果不想替换该范围，请在 <see cref="M:Microsoft.Office.Interop.Word.Range.Collapse(System.Object@)" /> 使用<b>InsertBreak</b>方法之前使用该方法。 当您插入分节符时，会在对象之前紧接插入分隔符 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 。</para>
          <para>某些<b>WdBreakType</b>常量可能不可用，具体取决于您选择或安装的语言支持（例如，美国英语）。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCaption">
      <MemberSignature Language="C#" Value="public void InsertCaption (ref object Label, ref object Title, ref object TitleAutoText, ref object Position, ref object ExcludeLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertCaption([in]object&amp; Label, [in]object&amp; Title, [in]object&amp; TitleAutoText, [in]object&amp; Position, [in]object&amp; ExcludeLabel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InsertCaption(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertCaption (ByRef Label As Object, Optional ByRef Title As Object, Optional ByRef TitleAutoText As Object, Optional ByRef Position As Object, Optional ByRef ExcludeLabel As Object)" />
      <MemberSignature Language="F#" Value="abstract member InsertCaption : obj * obj * obj * obj * obj -&gt; unit" Usage="range.InsertCaption (Label, Title, TitleAutoText, Position, ExcludeLabel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(417)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Label" Type="System.Object" RefType="ref" />
        <Parameter Name="Title" Type="System.Object" RefType="ref" />
        <Parameter Name="TitleAutoText" Type="System.Object" RefType="ref" />
        <Parameter Name="Position" Type="System.Object" RefType="ref" />
        <Parameter Name="ExcludeLabel" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Label">必需的<b>对象</b>。 要插入的题注标签。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdCaptionLabelID" /> 常量之一。</param>
        <param name="Title">可选<b>对象</b>。 要紧接在标题中的标签后面插入的字符串（如果 <paramref name="TitleAutoText" /> 指定，则忽略）。</param>
        <param name="TitleAutoText">可选<b>对象</b>。 要紧接在标题中的标签后面插入其内容的 "自动图文集" 词条（将覆盖由指定的任何文本 <paramref name="Title" /> ）。</param>
        <param name="Position">可选<b>对象</b>。 指定是否将题注插入对象的上方或下方 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdCaptionPosition" /> 常量之一。</param>
        <param name="ExcludeLabel">可选<b>对象</b>。 <b>如果为 True，则</b>不包括在参数中定义的文本标签 <paramref name="Label" /> 。 <b>错误</b> 包含指定的标签。</param>
        <summary>紧接在指定范围之前或之后插入题注。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCaptionXP">
      <MemberSignature Language="C#" Value="public void InsertCaptionXP (ref object Label, ref object Title, ref object TitleAutoText, ref object Position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertCaptionXP([in]object&amp; Label, [in]object&amp; Title, [in]object&amp; TitleAutoText, [in]object&amp; Position) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InsertCaptionXP(System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertCaptionXP (ByRef Label As Object, Optional ByRef Title As Object, Optional ByRef TitleAutoText As Object, Optional ByRef Position As Object)" />
      <MemberSignature Language="F#" Value="abstract member InsertCaptionXP : obj * obj * obj * obj -&gt; unit" Usage="range.InsertCaptionXP (Label, Title, TitleAutoText, Position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(166)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Label" Type="System.Object" RefType="ref" />
        <Parameter Name="Title" Type="System.Object" RefType="ref" />
        <Parameter Name="TitleAutoText" Type="System.Object" RefType="ref" />
        <Parameter Name="Position" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Label">To be added.</param>
        <param name="Title">To be added.</param>
        <param name="TitleAutoText">To be added.</param>
        <param name="Position">To be added.</param>
        <summary>仅供内部使用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCrossReference">
      <MemberSignature Language="C#" Value="public void InsertCrossReference (ref object ReferenceType, Microsoft.Office.Interop.Word.WdReferenceKind ReferenceKind, ref object ReferenceItem, ref object InsertAsHyperlink, ref object IncludePosition, ref object SeparateNumbers, ref object SeparatorString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertCrossReference([in]object&amp; ReferenceType, [in]valuetype Microsoft.Office.Interop.Word.WdReferenceKind ReferenceKind, [in]object&amp; ReferenceItem, [in]object&amp; InsertAsHyperlink, [in]object&amp; IncludePosition, [in]object&amp; SeparateNumbers, [in]object&amp; SeparatorString) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InsertCrossReference(System.Object@,Microsoft.Office.Interop.Word.WdReferenceKind,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertCrossReference (ByRef ReferenceType As Object, ReferenceKind As WdReferenceKind, ByRef ReferenceItem As Object, Optional ByRef InsertAsHyperlink As Object, Optional ByRef IncludePosition As Object, Optional ByRef SeparateNumbers As Object, Optional ByRef SeparatorString As Object)" />
      <MemberSignature Language="F#" Value="abstract member InsertCrossReference : obj * Microsoft.Office.Interop.Word.WdReferenceKind * obj * obj * obj * obj * obj -&gt; unit" Usage="range.InsertCrossReference (ReferenceType, ReferenceKind, ReferenceItem, InsertAsHyperlink, IncludePosition, SeparateNumbers, SeparatorString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(418)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ReferenceType" Type="System.Object" RefType="ref" />
        <Parameter Name="ReferenceKind" Type="Microsoft.Office.Interop.Word.WdReferenceKind" />
        <Parameter Name="ReferenceItem" Type="System.Object" RefType="ref" />
        <Parameter Name="InsertAsHyperlink" Type="System.Object" RefType="ref" />
        <Parameter Name="IncludePosition" Type="System.Object" RefType="ref" />
        <Parameter Name="SeparateNumbers" Type="System.Object" RefType="ref" />
        <Parameter Name="SeparatorString" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ReferenceType">必需的<b>对象</b>。 为要插入交叉引用的项的类型。 可以是任意 <see cref="T:Microsoft.Office.Interop.Word.WdReferenceType" /> 或 <see cref="T:Microsoft.Office.Interop.Word.WdCaptionLabelID" /> 常量或用户定义的题注标签。</param>
        <param name="ReferenceKind">必需 <see cref="T:Microsoft.Office.Interop.Word.WdReferenceKind" /> 。 要包含在交叉引用中的信息。</param>
        <param name="ReferenceItem">必需的<b>对象</b>。 如果 <paramref name="ReferenceType" /> 为<b>wdRefTypeBookmark</b>，则此参数指定书签名称。 对于所有其他 <paramref name="ReferenceType" /> 值，此参数在<b>交叉引用</b>对话框中的<b>引用类型</b>框中指定物料编号或名称。 使用 <see cref="M:Microsoft.Office.Interop.Word._Document.GetCrossReferenceItems(System.Object@)" /> 方法可返回可与此参数一起使用的项名称的列表。</param>
        <param name="InsertAsHyperlink">可选<b>对象</b>。 <b>真</b> 要插入交叉引用作为超链接引用的项。</param>
        <param name="IncludePosition">可选<b>对象</b>。 <b>True</b> 则根据引用项相对于交叉引用的位置插入"见上方"或"见下方，"。</param>
        <param name="SeparateNumbers">可选<b>对象</b>。 <b>如此</b> 使用分隔符将数字从关联文本中分离。 （仅在 <paramref name="ReferenceType" /> 参数设置为<b>wdRefTypeNumberedItem</b>并且 <paramref name="ReferenceKind" /> 参数设置为<b>wdNumberFullContext</b>时使用。）</param>
        <param name="SeparatorString">可选<b>对象</b>。 如果将<b>SeparateNumbers</b>参数设置为<b>True</b>，则指定要用作分隔符的字符串。</param>
        <summary>插入对标题、书签、脚注、尾注或定义了题注标签的项（如公式、图表或表格）的交叉引用。</summary>
        <remarks><para>如果为的值指定<b>wdPageNumber</b> <paramref name="ReferenceKind" /> ，则可能需要对文档重新分页，以便查看正确的交叉引用信息。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCrossReference_2002">
      <MemberSignature Language="C#" Value="public void InsertCrossReference_2002 (ref object ReferenceType, Microsoft.Office.Interop.Word.WdReferenceKind ReferenceKind, ref object ReferenceItem, ref object InsertAsHyperlink, ref object IncludePosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertCrossReference_2002([in]object&amp; ReferenceType, [in]valuetype Microsoft.Office.Interop.Word.WdReferenceKind ReferenceKind, [in]object&amp; ReferenceItem, [in]object&amp; InsertAsHyperlink, [in]object&amp; IncludePosition) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InsertCrossReference_2002(System.Object@,Microsoft.Office.Interop.Word.WdReferenceKind,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertCrossReference_2002 (ByRef ReferenceType As Object, ReferenceKind As WdReferenceKind, ByRef ReferenceItem As Object, Optional ByRef InsertAsHyperlink As Object, Optional ByRef IncludePosition As Object)" />
      <MemberSignature Language="F#" Value="abstract member InsertCrossReference_2002 : obj * Microsoft.Office.Interop.Word.WdReferenceKind * obj * obj * obj -&gt; unit" Usage="range.InsertCrossReference_2002 (ReferenceType, ReferenceKind, ReferenceItem, InsertAsHyperlink, IncludePosition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(165)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ReferenceType" Type="System.Object" RefType="ref" />
        <Parameter Name="ReferenceKind" Type="Microsoft.Office.Interop.Word.WdReferenceKind" />
        <Parameter Name="ReferenceItem" Type="System.Object" RefType="ref" />
        <Parameter Name="InsertAsHyperlink" Type="System.Object" RefType="ref" />
        <Parameter Name="IncludePosition" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ReferenceType">To be added.</param>
        <param name="ReferenceKind">To be added.</param>
        <param name="ReferenceItem">To be added.</param>
        <param name="InsertAsHyperlink">To be added.</param>
        <param name="IncludePosition">To be added.</param>
        <summary>仅供内部使用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertDatabase">
      <MemberSignature Language="C#" Value="public void InsertDatabase (ref object Format, ref object Style, ref object LinkToSource, ref object Connection, ref object SQLStatement, ref object SQLStatement1, ref object PasswordDocument, ref object PasswordTemplate, ref object WritePasswordDocument, ref object WritePasswordTemplate, ref object DataSource, ref object From, ref object To, ref object IncludeFields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertDatabase([in]object&amp; Format, [in]object&amp; Style, [in]object&amp; LinkToSource, [in]object&amp; Connection, [in]object&amp; SQLStatement, [in]object&amp; SQLStatement1, [in]object&amp; PasswordDocument, [in]object&amp; PasswordTemplate, [in]object&amp; WritePasswordDocument, [in]object&amp; WritePasswordTemplate, [in]object&amp; DataSource, [in]object&amp; From, [in]object&amp; To, [in]object&amp; IncludeFields) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InsertDatabase(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertDatabase (Optional ByRef Format As Object, Optional ByRef Style As Object, Optional ByRef LinkToSource As Object, Optional ByRef Connection As Object, Optional ByRef SQLStatement As Object, Optional ByRef SQLStatement1 As Object, Optional ByRef PasswordDocument As Object, Optional ByRef PasswordTemplate As Object, Optional ByRef WritePasswordDocument As Object, Optional ByRef WritePasswordTemplate As Object, Optional ByRef DataSource As Object, Optional ByRef From As Object, Optional ByRef To As Object, Optional ByRef IncludeFields As Object)" />
      <MemberSignature Language="F#" Value="abstract member InsertDatabase : obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj -&gt; unit" Usage="range.InsertDatabase (Format, Style, LinkToSource, Connection, SQLStatement, SQLStatement1, PasswordDocument, PasswordTemplate, WritePasswordDocument, WritePasswordTemplate, DataSource, From, To, IncludeFields)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(194)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Format" Type="System.Object" RefType="ref" />
        <Parameter Name="Style" Type="System.Object" RefType="ref" />
        <Parameter Name="LinkToSource" Type="System.Object" RefType="ref" />
        <Parameter Name="Connection" Type="System.Object" RefType="ref" />
        <Parameter Name="SQLStatement" Type="System.Object" RefType="ref" />
        <Parameter Name="SQLStatement1" Type="System.Object" RefType="ref" />
        <Parameter Name="PasswordDocument" Type="System.Object" RefType="ref" />
        <Parameter Name="PasswordTemplate" Type="System.Object" RefType="ref" />
        <Parameter Name="WritePasswordDocument" Type="System.Object" RefType="ref" />
        <Parameter Name="WritePasswordTemplate" Type="System.Object" RefType="ref" />
        <Parameter Name="DataSource" Type="System.Object" RefType="ref" />
        <Parameter Name="From" Type="System.Object" RefType="ref" />
        <Parameter Name="To" Type="System.Object" RefType="ref" />
        <Parameter Name="IncludeFields" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Format">可选<b>对象</b>。 “表格”菜单“表格自动套用格式”对话框的“格式”框中列出的一种格式。 可以是任何 <see cref="T:Microsoft.Office.Interop.Word.WdTableFormat" /> 常量。 默认情况下，边框应用到表中的单元格。</param>
        <param name="Style">可选<b>对象</b>。 由指定的自动套用格式的属性 <paramref name="Format" /> 应用于表格。 使用以下值的任意组合的总和： ValueMeaning0 （零） None1Borders2Shading4Font8Color16Auto Fit32Heading Rows64Last Row128First Column256Last 列</param>
        <param name="LinkToSource">可选<b>对象</b>。 <b>为</b> 建立新的表和数据源之间的链接。</param>
        <param name="Connection">可选<b>对象</b>。 在其中执行由指定的查询的范围 <paramref name="SQLStatement" /> 。 指定区域的方式取决于检索数据的方式。 例如：通过开放式数据库连接（ODBC）检索数据时，请指定一个连接字符串。 使用动态数据交换（DDE）检索 Microsoft Excel 中的数据时，请指定一个已命名的区域或 "整个电子表格"。<b>安全性</b> 动态数据交换（DDE）是一种不安全的旧技术。 如果可能，请使用更安全的 DDE 替代方法。检索 Microsoft Access 中的数据时，请指定单词 "Table" 或 "Query"，后跟表或查询的名称。</param>
        <param name="SQLStatement">可选<b>字符串</b>。 检索主数据源中要插入文档的数据集。</param>
        <param name="SQLStatement1">可选<b>字符串</b>。 如果查询字符串的长度超过255个字符，则 <paramref name="SQLStatement" /> 表示字符串的第一部分并 <paramref name="SQLStatement1" /> 表示第二部分。</param>
        <param name="PasswordDocument">可选<b>对象</b>。 打开数据源所需的密码（如果有。 请参阅下面的"说明"）。</param>
        <param name="PasswordTemplate">可选<b>对象</b>。 如果数据源是 Word 文档，则该参数是打开附加模板所需的密码（如果有。 请参阅下面的"说明"）。</param>
        <param name="WritePasswordDocument">可选<b>对象</b>。 保存对文档所作修改所需的密码（如果有。 请参阅下面的"说明"）。</param>
        <param name="WritePasswordTemplate">可选<b>对象</b>。 保存对模板所作修改所需的密码（如果有。 请参阅下面的"说明"）。</param>
        <param name="DataSource">可选<b>对象</b>。 数据源的路径和文件名称。</param>
        <param name="From">可选<b>对象</b>。 要插入的记录区域中第一条数据记录的编号。</param>
        <param name="To">可选<b>对象</b>。 要插入的记录范围中的最后一条数据记录的编号。</param>
        <param name="IncludeFields">可选<b>对象</b>。 <b>为</b> 新表的第一行中包含数据源中的字段名称。</param>
        <summary>从数据源 (例如，一个单独的 Word 文档，Microsoft Excel 工作表中或 Microsoft Access 数据库) 检索数据并将数据插入表替换指定的范围。</summary>
        <remarks><para>避免在应用程序中使用硬编码的密码。如果某个过程需要密码，可要求用户提供密码，将其以变量形式进行存储，然后在编码中使用该变量。</para>
          <para>避免使用内置系统管理员（<b>sa</b>）登录帐户。 而是使系统管理员成为 sysadmin 固定服务器角色的成员，并让他们使用自己的帐户登录。 仅在无法使用其他方式登录时使用 <b>sa</b>。 要避免通过 sa 登录帐户的未经授权的访问，您应该为该帐户指定唯一的强密码。</para>
          <para>如果可能，请使用 Windows 身份验证（也称为受信任的连接），它使用 Windows 用户帐户来连接到 SQL Server。当用户通过 Windows 用户帐户进行连接时，SQL Server 会使用 Windows 操作系统中的信息来验证帐户名称和密码。在您可以使用 Windows 身份验证之前，服务器管理员必须配置 SQL Server 以使用此模式的身份验证。如果 Windows 身份验证不可用，请不要保存用户的登录信息。对于用户而言，在每次登录时输入其登录信息更为安全。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertDateTime">
      <MemberSignature Language="C#" Value="public void InsertDateTime (ref object DateTimeFormat, ref object InsertAsField, ref object InsertAsFullWidth, ref object DateLanguage, ref object CalendarType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertDateTime([in]object&amp; DateTimeFormat, [in]object&amp; InsertAsField, [in]object&amp; InsertAsFullWidth, [in]object&amp; DateLanguage, [in]object&amp; CalendarType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InsertDateTime(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertDateTime (Optional ByRef DateTimeFormat As Object, Optional ByRef InsertAsField As Object, Optional ByRef InsertAsFullWidth As Object, Optional ByRef DateLanguage As Object, Optional ByRef CalendarType As Object)" />
      <MemberSignature Language="F#" Value="abstract member InsertDateTime : obj * obj * obj * obj * obj -&gt; unit" Usage="range.InsertDateTime (DateTimeFormat, InsertAsField, InsertAsFullWidth, DateLanguage, CalendarType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(444)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateTimeFormat" Type="System.Object" RefType="ref" />
        <Parameter Name="InsertAsField" Type="System.Object" RefType="ref" />
        <Parameter Name="InsertAsFullWidth" Type="System.Object" RefType="ref" />
        <Parameter Name="DateLanguage" Type="System.Object" RefType="ref" />
        <Parameter Name="CalendarType" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="DateTimeFormat">可选<b>对象</b>。 显示日期或时间或者同时显示两者时所用的格式。 如果省略该参数，Microsoft Word 将使用 Windows“控制面板”（“区域设置”图标）中的短日期样式。</param>
        <param name="InsertAsField">可选<b>对象</b>。 <b>真</b> 要插入指定的 TIME 域的信息。 默认值为 <b>True</b> 。</param>
        <param name="InsertAsFullWidth">可选<b>对象</b>。 <b>真</b> 要插入双字节数字的形式指定的信息。 根据您所选择或安装的语言支持（例如，美国英语），此参数可能不可用。</param>
        <param name="DateLanguage">可选<b>对象</b>。 设置要在其中显示日期或时间的语言。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdDateLanguage" /> 以下常量之一： <b>WdDateLanguageBidi</b>或<b>wdDateLanguageLatin</b>。 根据您所选择或安装的语言支持（例如，美国英语），此参数可能不可用。</param>
        <param name="CalendarType">可选<b>对象</b>。 设置显示日期或时间时要使用的日历类型。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdCalendarTypeBi" /> 以下常量之一： <b>WdCalendarTypeBidi</b>或<b>wdCalendarTypeGregorian</b>。 根据您所选择或安装的语言支持（例如，美国英语），此参数可能不可用。</param>
        <summary>以文本或 TIME 域的形式插入当前日期或时间，或将两者都插入。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertDateTimeOld">
      <MemberSignature Language="C#" Value="public void InsertDateTimeOld (ref object DateTimeFormat, ref object InsertAsField, ref object InsertAsFullWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertDateTimeOld([in]object&amp; DateTimeFormat, [in]object&amp; InsertAsField, [in]object&amp; InsertAsFullWidth) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InsertDateTimeOld(System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertDateTimeOld (Optional ByRef DateTimeFormat As Object, Optional ByRef InsertAsField As Object, Optional ByRef InsertAsFullWidth As Object)" />
      <MemberSignature Language="F#" Value="abstract member InsertDateTimeOld : obj * obj * obj -&gt; unit" Usage="range.InsertDateTimeOld (DateTimeFormat, InsertAsField, InsertAsFullWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(163)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateTimeFormat" Type="System.Object" RefType="ref" />
        <Parameter Name="InsertAsField" Type="System.Object" RefType="ref" />
        <Parameter Name="InsertAsFullWidth" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="DateTimeFormat">To be added.</param>
        <param name="InsertAsField">To be added.</param>
        <param name="InsertAsFullWidth">To be added.</param>
        <summary>仅供内部使用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertFile">
      <MemberSignature Language="C#" Value="public void InsertFile (string FileName, ref object Range, ref object ConfirmConversions, ref object Link, ref object Attachment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertFile([in]string FileName, [in]object&amp; Range, [in]object&amp; ConfirmConversions, [in]object&amp; Link, [in]object&amp; Attachment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InsertFile(System.String,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertFile (FileName As String, Optional ByRef Range As Object, Optional ByRef ConfirmConversions As Object, Optional ByRef Link As Object, Optional ByRef Attachment As Object)" />
      <MemberSignature Language="F#" Value="abstract member InsertFile : string * obj * obj * obj * obj -&gt; unit" Usage="range.InsertFile (FileName, Range, ConfirmConversions, Link, Attachment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileName" Type="System.String" />
        <Parameter Name="Range" Type="System.Object" RefType="ref" />
        <Parameter Name="ConfirmConversions" Type="System.Object" RefType="ref" />
        <Parameter Name="Link" Type="System.Object" RefType="ref" />
        <Parameter Name="Attachment" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileName">必需的 <b>字符串</b> 。 要插入的文件的路径及文件名。 如果不指定路径，Microsoft Word 将假定文件位于当前文件夹中。</param>
        <param name="Range">可选<b>对象</b>。 如果指定的文件是 Word 文档，则此参数代表书签。 如果该文件为其他类型（例如，Microsoft Excel 工作表），则此参数代表命名区域或单元格区域（例如，R1C1:R3C4）。</param>
        <param name="ConfirmConversions">可选<b>对象</b>。 <b>真</b> 要让 Word 提示您确认时插入 Word 文档格式之外的其他格式文件的转换。</param>
        <param name="Link">可选<b>对象</b>。 <b>真</b> 若要通过使用文本字段中插入该文件。</param>
        <param name="Attachment">可选<b>对象</b>。 <b>真</b> 要插入该文件作为电子邮件的附件。</param>
        <summary>插入指定文件的全部或一部分。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertParagraph">
      <MemberSignature Language="C#" Value="public void InsertParagraph ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertParagraph() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InsertParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertParagraph ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertParagraph();" />
      <MemberSignature Language="F#" Value="abstract member InsertParagraph : unit -&gt; unit" Usage="range.InsertParagraph " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(160)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>用新段落替换指定范围。</summary>
        <remarks><para>使用此方法后，该范围将成为一个新段落。</para>
          <para>如果不想替换该范围，请在 <see cref="M:Microsoft.Office.Interop.Word.Range.Collapse(System.Object@)" /> 使用此方法之前使用该方法。 <b>InsertParagraphAfter</b>方法在对象后插入一个新段落 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertParagraphAfter">
      <MemberSignature Language="C#" Value="public void InsertParagraphAfter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertParagraphAfter() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InsertParagraphAfter" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertParagraphAfter ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertParagraphAfter();" />
      <MemberSignature Language="F#" Value="abstract member InsertParagraphAfter : unit -&gt; unit" Usage="range.InsertParagraphAfter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(161)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在范围之后插入段落标记。</summary>
        <remarks><para>在应用此方法之后，该范围会扩展，以包含新段落。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertParagraphBefore">
      <MemberSignature Language="C#" Value="public void InsertParagraphBefore ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertParagraphBefore() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InsertParagraphBefore" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertParagraphBefore ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertParagraphBefore();" />
      <MemberSignature Language="F#" Value="abstract member InsertParagraphBefore : unit -&gt; unit" Usage="range.InsertParagraphBefore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(212)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在指定的范围前插入一个新段落。</summary>
        <remarks><para>在应用此方法之后，该范围会扩展，以包含新段落。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertSymbol">
      <MemberSignature Language="C#" Value="public void InsertSymbol (int CharacterNumber, ref object Font, ref object Unicode, ref object Bias);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertSymbol([in]int32 CharacterNumber, [in]object&amp; Font, [in]object&amp; Unicode, [in]object&amp; Bias) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InsertSymbol(System.Int32,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertSymbol (CharacterNumber As Integer, Optional ByRef Font As Object, Optional ByRef Unicode As Object, Optional ByRef Bias As Object)" />
      <MemberSignature Language="F#" Value="abstract member InsertSymbol : int * obj * obj * obj -&gt; unit" Usage="range.InsertSymbol (CharacterNumber, Font, Unicode, Bias)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(164)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CharacterNumber" Type="System.Int32" />
        <Parameter Name="Font" Type="System.Object" RefType="ref" />
        <Parameter Name="Unicode" Type="System.Object" RefType="ref" />
        <Parameter Name="Bias" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="CharacterNumber">必需的<b>整数</b>。 指定符号的字符编号。 该值应是 31 加上此符号在符号表中的位置（从左向右计算）相应的数字。 例如，若要在符号字体的符号表中的位置37处指定增量字符，请将设置 <paramref name="CharacterNumber" /> 为68。</param>
        <param name="Font">可选<b>对象</b>。 包含符号的字体的名称。</param>
        <param name="Unicode">可选<b>对象</b>。 <b>如果为 True</b> ，则插入指定的 Unicode 字符 <paramref name="CharacterNumber" /> ;<b>如果为 False</b> ，则插入由指定的 ANSI 字符 <paramref name="CharacterNumber" /> 。 默认值为 False。</param>
        <param name="Bias">可选<b>对象</b>。 设置符号的字体偏量。 此参数可用于设置东亚字符正确的字体斜线。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdFontBias" /> 常量之一： <b>wdFontBiasDefault</b>、 <b>wdFontBiasDontCare</b>或<b>wdFontBiasFareast</b>。 根据您所选择或安装的语言支持（例如，美国英语），此参数可能不可用。</param>
        <summary>插入一个符号，用于替换指定的范围。</summary>
        <remarks><para>如果您不想替换范围选择，请在 <see cref="M:Microsoft.Office.Interop.Word.Range.Collapse(System.Object@)" /> 使用此方法之前使用方法。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertXML">
      <MemberSignature Language="C#" Value="public void InsertXML (string XML, ref object Transform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertXML([in]string XML, [in]object&amp; Transform) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InsertXML(System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertXML (XML As String, Optional ByRef Transform As Object)" />
      <MemberSignature Language="F#" Value="abstract member InsertXML : string * obj -&gt; unit" Usage="range.InsertXML (XML, Transform)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(416)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XML" Type="System.String" />
        <Parameter Name="Transform" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="XML">必需的 <b>字符串</b> 。 要插入的 XML 文本。</param>
        <param name="Transform">可选<b>对象</b>。 要应用于插入的 XML 文本的转换。</param>
        <summary>将指定的 XML 文本插入到指定的区域或所选内容中。</summary>
        <remarks><para>如果指定区域或所选内容包含文本，则<b>InsertXML</b>方法将替换现有的文本。</para>
          <para>使用<b>InsertXML</b>方法可插入带任意 XML 或 MICROSOFT Word XML 标记的文本。 XML 必须具有良好的格式。 如果它使用 Word XML，则它还必须根据 Word XML 架构有效。 有关 Word XML 架构的详细信息，请参阅可在 Microsoft 开发人员网络（MSDN）网站上找到的 Word XML 内容开发工具包。</para>
          <para>如果无法在指定区域或所选内容中插入指定的 XML 文本，则会显示一条错误消息。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InStory">
      <MemberSignature Language="C#" Value="public bool InStory (Microsoft.Office.Interop.Word.Range Range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InStory([in]class Microsoft.Office.Interop.Word.Range Range) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InStory(Microsoft.Office.Interop.Word.Range)" />
      <MemberSignature Language="VB.NET" Value="Public Function InStory (Range As Range) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InStory(Microsoft::Office::Interop::Word::Range ^ Range);" />
      <MemberSignature Language="F#" Value="abstract member InStory : Microsoft.Office.Interop.Word.Range -&gt; bool" Usage="range.InStory Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(125)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="Microsoft.Office.Interop.Word.Range" />
      </Parameters>
      <Docs>
        <param name="Range">必需 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 的对象。 要将其情景与包含的文章进行比较的<b>Range</b>对象 <paramref name="expression" /> 。</param>
        <summary>确定此方法应用于的所选内容或区域是否与参数指定的范围位于相同的文章中 <paramref name="Range" /> 。</summary>
        <returns>To be added.</returns>
        <remarks><para>如果应用此<b>True</b>方法的所选内容或区域与参数指定的范围位于相同的文章中，则此方法返回 True <paramref name="Range" /> ; 如果不是，则返回<b>False</b> 。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEndOfRowMark">
      <MemberSignature Language="C#" Value="public bool IsEndOfRowMark { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEndOfRowMark" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.IsEndOfRowMark" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEndOfRowMark As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEndOfRowMark { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEndOfRowMark : bool" Usage="Microsoft.Office.Interop.Word.Range.IsEndOfRowMark" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>确定指定的范围是否为折叠且位于表中的行尾标记处。</summary>
        <value>To be added.</value>
        <remarks><para>如果指定的区域处于折叠状态且位于表中的行尾标记处，则此属性返回<b>True</b> ，否则返回<b>False</b> 。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEqual">
      <MemberSignature Language="C#" Value="public bool IsEqual (Microsoft.Office.Interop.Word.Range Range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEqual([in]class Microsoft.Office.Interop.Word.Range Range) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.IsEqual(Microsoft.Office.Interop.Word.Range)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEqual (Range As Range) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEqual(Microsoft::Office::Interop::Word::Range ^ Range);" />
      <MemberSignature Language="F#" Value="abstract member IsEqual : Microsoft.Office.Interop.Word.Range -&gt; bool" Usage="range.IsEqual Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(171)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="Microsoft.Office.Interop.Word.Range" />
      </Parameters>
      <Docs>
        <param name="Range">必需 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 的对象。 与进行比较的<b>Range</b>对象 <paramref name="expression" /> 。</param>
        <summary>确定应用此方法的范围是否等于参数指定的范围 <paramref name="Range" /> 。</summary>
        <returns>To be added.</returns>
        <remarks><para>如果应用此方法的所选内容或区域等于参数指定的范围，则此属性返回<b>True</b> <paramref name="Range" /> ，否则返回<b>False</b> 。</para>
          <para>此方法比较起始字符和结束字符的位置以及文字部分的类型。 如果两个对象的所有三项都相同，则这两个对象相等。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Italic">
      <MemberSignature Language="C#" Value="public int Italic { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Italic" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Italic" />
      <MemberSignature Language="VB.NET" Value="Public Property Italic As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Italic { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Italic : int with get, set" Usage="Microsoft.Office.Interop.Word.Range.Italic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(131)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(131)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(131)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>确定区域的格式是否设置为斜体。</summary>
        <value>To be added.</value>
        <remarks><para>如果区域的格式设置为斜体，则此属性返回<b>True</b> ，否则返回<b>False</b> 。</para>
          <para>该属性返回 <b>True</b>、<b>False</b> 或 <b>wdUndefined</b>（当返回值既可为 <b>True</b>，也可为 <b>False</b> 时取该值）。</para>
          <para>此属性的值可设置为<b>True</b>、 <b>False</b>或<b>wdToggle</b>。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ItalicBi">
      <MemberSignature Language="C#" Value="public int ItalicBi { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ItalicBi" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.ItalicBi" />
      <MemberSignature Language="VB.NET" Value="Public Property ItalicBi As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ItalicBi { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ItalicBi : int with get, set" Usage="Microsoft.Office.Interop.Word.Range.ItalicBi" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(401)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(401)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(401)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>确定区域的格式是否设置为斜体。</summary>
        <value>To be added.</value>
        <remarks><para>如果区域的格式设置为斜体，则此属性返回<b>True</b> ，否则返回<b>False</b> 。</para>
          <para>此属性返回 <b>True</b> ， <b>假</b> 或 <b>wdUndefined</b> (为斜体又有非斜体文本的混合)。</para>
          <para>此属性的值可设置为<b>True</b>、 <b>False</b>或<b>wdToggle</b>。</para>
          <para>[!注释] <b>ItalicBi</b> 属性适用于从右向左的语言文本。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Kana">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdKana Kana { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdKana Kana" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Kana" />
      <MemberSignature Language="VB.NET" Value="Public Property Kana As WdKana" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdKana Kana { Microsoft::Office::Interop::Word::WdKana get(); void set(Microsoft::Office::Interop::Word::WdKana value); };" />
      <MemberSignature Language="F#" Value="member this.Kana : Microsoft.Office.Interop.Word.WdKana with get, set" Usage="Microsoft.Office.Interop.Word.Range.Kana" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(327)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(327)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(327)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdKana</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置日文文本的指定区域是平假名还是片假名。</summary>
        <value>To be added.</value>
        <remarks><para>如果指定区域含有平假名和片假名的混合文本，或包含其他非日文文本，本属性返回 <b>wdUndefined</b>。 如果将 <b>Kana</b> 属性设为 <b>wdUndefined</b>，则会产生一个错误。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageDetected">
      <MemberSignature Language="C#" Value="public bool LanguageDetected { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LanguageDetected" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.LanguageDetected" />
      <MemberSignature Language="VB.NET" Value="Public Property LanguageDetected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LanguageDetected { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LanguageDetected : bool with get, set" Usage="Microsoft.Office.Interop.Word.Range.LanguageDetected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置一个值，指定 Word 是否已检测到指定的文本的语言。</summary>
        <value>To be added.</value>
        <remarks><para>检查 <see cref="P:Microsoft.Office.Interop.Word.Range.LanguageID" /> 任何以前的语言检测结果的属性。</para>
          <para>调用方法时， <b>LanguageDetected</b>属性<b>True</b>设置为 True <see cref="M:Microsoft.Office.Interop.Word.Range.DetectLanguage" /> 。 重新计算指定文本的语言，您必须首先设置 <b>为</b> <b>LanguageDetected</b> 属性。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageID">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdLanguageID LanguageID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdLanguageID LanguageID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.LanguageID" />
      <MemberSignature Language="VB.NET" Value="Public Property LanguageID As WdLanguageID" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdLanguageID LanguageID { Microsoft::Office::Interop::Word::WdLanguageID get(); void set(Microsoft::Office::Interop::Word::WdLanguageID value); };" />
      <MemberSignature Language="F#" Value="member this.LanguageID : Microsoft.Office.Interop.Word.WdLanguageID with get, set" Usage="Microsoft.Office.Interop.Word.Range.LanguageID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(153)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(153)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(153)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdLanguageID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置指定对象的语言。</summary>
        <value>To be added.</value>
        <remarks><para>某些 <see cref="T:Microsoft.Office.Interop.Word.WdLanguageID" /> 常量可能不可用，具体取决于您选择或安装的语言支持（例如，美国英语）。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageIDFarEast">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdLanguageID LanguageIDFarEast { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdLanguageID LanguageIDFarEast" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.LanguageIDFarEast" />
      <MemberSignature Language="VB.NET" Value="Public Property LanguageIDFarEast As WdLanguageID" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdLanguageID LanguageIDFarEast { Microsoft::Office::Interop::Word::WdLanguageID get(); void set(Microsoft::Office::Interop::Word::WdLanguageID value); };" />
      <MemberSignature Language="F#" Value="member this.LanguageIDFarEast : Microsoft.Office.Interop.Word.WdLanguageID with get, set" Usage="Microsoft.Office.Interop.Word.Range.LanguageIDFarEast" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(321)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(321)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(321)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdLanguageID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置指定对象的东亚语言。</summary>
        <value>To be added.</value>
        <remarks><para>推荐使用本方法，来返回或设置用 Microsoft Word 中文版创建的文档中东亚文字的语言。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageIDOther">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdLanguageID LanguageIDOther { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdLanguageID LanguageIDOther" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.LanguageIDOther" />
      <MemberSignature Language="VB.NET" Value="Public Property LanguageIDOther As WdLanguageID" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdLanguageID LanguageIDOther { Microsoft::Office::Interop::Word::WdLanguageID get(); void set(Microsoft::Office::Interop::Word::WdLanguageID value); };" />
      <MemberSignature Language="F#" Value="member this.LanguageIDOther : Microsoft.Office.Interop.Word.WdLanguageID with get, set" Usage="Microsoft.Office.Interop.Word.Range.LanguageIDOther" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(322)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(322)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(322)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdLanguageID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置指定对象的语言。</summary>
        <value>To be added.</value>
        <remarks><para>推荐使用本方法，来设置或返回在 Microsoft Word 从右向左语言版本所创建的文档中西文文字所用的语言。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ListFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ListFormat ListFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ListFormat ListFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.ListFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListFormat As ListFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::ListFormat ^ ListFormat { Microsoft::Office::Interop::Word::ListFormat ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ListFormat : Microsoft.Office.Interop.Word.ListFormat" Usage="Microsoft.Office.Interop.Word.Range.ListFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(68)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(68)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ListFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.ListFormat" /> 对象，表示区域的所有列表格式设置特征。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListParagraphs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ListParagraphs ListParagraphs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ListParagraphs ListParagraphs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.ListParagraphs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListParagraphs As ListParagraphs" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::ListParagraphs ^ ListParagraphs { Microsoft::Office::Interop::Word::ListParagraphs ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ListParagraphs : Microsoft.Office.Interop.Word.ListParagraphs" Usage="Microsoft.Office.Interop.Word.Range.ListParagraphs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(157)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(157)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ListParagraphs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.ListParagraphs" /> 集合，该集合代表区域中的所有编号段落。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListStyle">
      <MemberSignature Language="C#" Value="public object ListStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ListStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.ListStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ListStyle { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ListStyle : obj" Usage="Microsoft.Office.Interop.Word.Range.ListStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(422)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(422)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个<b>Object</b>类型的对象，该对象代表用于设置项目符号列表或编号列表格式的样式。 只读。</summary>
        <value><b>Object</b></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Locks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.CoAuthLocks Locks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.CoAuthLocks Locks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Locks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Locks As CoAuthLocks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::CoAuthLocks ^ Locks { Microsoft::Office::Interop::Word::CoAuthLocks ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Locks : Microsoft.Office.Interop.Word.CoAuthLocks" Usage="Microsoft.Office.Interop.Word.Range.Locks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(504)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.CoAuthLocks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.CoAuthLocks" /> 集合对象，该对象表示范围中的所有锁。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.CoAuthLocks" /> 集合对象，该对象代表区域中的所有锁定。</value>
        <remarks><para>只读。 使用此属性可返回 <see cref="T:Microsoft.Office.Interop.Word.CoAuthLocks" /> 集合。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupNameProperties">
      <MemberSignature Language="C#" Value="public void LookupNameProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LookupNameProperties() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.LookupNameProperties" />
      <MemberSignature Language="VB.NET" Value="Public Sub LookupNameProperties ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LookupNameProperties();" />
      <MemberSignature Language="F#" Value="abstract member LookupNameProperties : unit -&gt; unit" Usage="range.LookupNameProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(177)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在全局通讯簿列表中查找姓名，并显示属性对话框，该对话框中包含有关指定姓名的信息。</summary>
        <remarks><para>如果此方法找到了多个匹配项，则显示 "检查姓名" 对话框。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyEnclosure">
      <MemberSignature Language="C#" Value="public void ModifyEnclosure (ref object Style, ref object Symbol, ref object EnclosedText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ModifyEnclosure([in]object&amp; Style, [in]object&amp; Symbol, [in]object&amp; EnclosedText) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.ModifyEnclosure(System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ModifyEnclosure (ByRef Style As Object, Optional ByRef Symbol As Object, Optional ByRef EnclosedText As Object)" />
      <MemberSignature Language="F#" Value="abstract member ModifyEnclosure : obj * obj * obj -&gt; unit" Usage="range.ModifyEnclosure (Style, Symbol, EnclosedText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(223)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Style" Type="System.Object" RefType="ref" />
        <Parameter Name="Symbol" Type="System.Object" RefType="ref" />
        <Parameter Name="EnclosedText" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Style">必需的<b>对象</b>。 盘柜的样式。 可以是任何 <see cref="T:Microsoft.Office.Interop.Word.WdEncloseStyle" /> 常量。</param>
        <param name="Symbol">可选<b>对象</b>。 包含指定的范围符号。 可以是任何 <see cref="T:Microsoft.Office.Interop.Word.WdEnclosureType" /> 常量。</param>
        <param name="EnclosedText">可选<b>对象</b>。 要圈住的字符。 如果包括该参数，则 Microsoft Word 将用被圈起来的字符代替指定区域。 如果没有指定要圈住的字符，则 Microsoft Word 将圈住指定区域中的全部文本。</param>
        <summary>添加、修改或删除指定字符周围的圈号。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public int Move (ref object Unit, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Move([in]object&amp; Unit, [in]object&amp; Count) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.Move(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Move (Optional ByRef Unit As Object, Optional ByRef Count As Object) As Integer" />
      <MemberSignature Language="F#" Value="abstract member Move : obj * obj -&gt; int" Usage="range.Move (Unit, Count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(109)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Unit" Type="System.Object" RefType="ref" />
        <Parameter Name="Count" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Unit">可选<b>对象</b>。 移动折叠的范围或所选内容时所基于的单位。 可以是下列 <see cref="T:Microsoft.Office.Interop.Word.WdUnits" /> 常量之一： <b>wdCharacter</b>、 <b>wdWord</b>、 <b>wdSentence</b>、 <b>wdParagraph</b>、 <b>WdSection</b>、 <b>wdStory</b>、 <b>wdCell</b>、wdColumn、 <b>wdColumn</b> <b>wdRow</b>或<b>wdTable</b>。 如果 <paramref name="expression" /> 返回一个 <see cref="T:Microsoft.Office.Interop.Word.Selection" /> 对象，则还可以使用<b>wdLine</b>。 默认值是 <b>wdCharacter</b> 。</param>
        <param name="Count">可选<b>对象</b>。 指定的区域或所选内容的移动的单位数。 如果 <paramref name="Count" /> 是正数，则对象折叠到其结束位置，并在文档中向后移动指定的单位数。 如果 <paramref name="Count" /> 是负数，则将对象折叠到其起始位置，并向前移动指定的单位数。 默认值为 1。 您还可以在 <see cref="M:Microsoft.Office.Interop.Word.Range.Collapse(System.Object@)" /> 使用<b>Move</b>方法之前使用方法控制折叠方向。 如果该区域或所选内容位于一个单位的中间，或者不能折叠，将其移动到的开头或结尾的部门计为移动它一个完整的单元。</param>
        <summary>将指定的区域或所选内容折叠到其起始位置或结束位置，然后将折叠的对象移动指定的单位数。</summary>
        <returns>To be added.</returns>
        <remarks><para>此方法返回一个<b>整数</b>值，表示该对象实际移动的单位数，如果移动不成功，则返回0（零）。</para>
          <para>折叠的范围或所选内容的开始和结束位置相同。</para>
          <para>对一个范围应用 <b>Move</b> 方法不会重排文档中的文本。相反，它重新定义该区域，以引用文档中的新位置。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveEnd">
      <MemberSignature Language="C#" Value="public int MoveEnd (ref object Unit, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveEnd([in]object&amp; Unit, [in]object&amp; Count) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.MoveEnd(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveEnd (Optional ByRef Unit As Object, Optional ByRef Count As Object) As Integer" />
      <MemberSignature Language="F#" Value="abstract member MoveEnd : obj * obj -&gt; int" Usage="range.MoveEnd (Unit, Count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(111)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Unit" Type="System.Object" RefType="ref" />
        <Parameter Name="Count" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Unit">可选 <see cref="T:Microsoft.Office.Interop.Word.WdUnits" /> 。 结束字符位置移至的单元。</param>
        <param name="Count">可选<b>对象</b>。 要移动的单位数。 如果此数字为正数，结束字符位置将在文档中向前移动。 如果此数字为负，则结束位置向后移动。 如果结束位置 overtakes 起始位置，则范围将折叠，两个字符位置将一起移动。 默认值为 1。</param>
        <summary>移动结束字符位置的范围。</summary>
        <returns>To be added.</returns>
        <remarks><para>此方法如果返回一个整数，表示范围或所选内容实际移动的单位数；如果返回 0（零），则移动失败。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveEndUntil">
      <MemberSignature Language="C#" Value="public int MoveEndUntil (ref object Cset, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveEndUntil([in]object&amp; Cset, [in]object&amp; Count) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.MoveEndUntil(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveEndUntil (ByRef Cset As Object, Optional ByRef Count As Object) As Integer" />
      <MemberSignature Language="F#" Value="abstract member MoveEndUntil : obj * obj -&gt; int" Usage="range.MoveEndUntil (Cset, Count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cset" Type="System.Object" RefType="ref" />
        <Parameter Name="Count" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Cset">必需的<b>对象</b>。 一个或多个字符。 此参数区分大小写。</param>
        <param name="Count">可选<b>对象</b>。 指定区域或所选内容要移动的最大字符数。 可以是数字或 <b>wdForward</b> 或 <b>wdBackward</b> 常量。 如果 <paramref name="Count" /> 为正数，则该区域或所选内容在文档中向前移动。 如果是负数，则该区域或所选内容向后移动。 默认值是 <b>wdForward</b> 。</param>
        <summary>移动指定区域或所选内容的结束位置，直到在文档中找到任何指定的字符。</summary>
        <returns>To be added.</returns>
        <remarks><para>如果在文档中是向前移动，则扩展该范围。</para>
          <para>此方法返回指定范围的结束位置移动的字符数，作为<b>整数</b>值。 如果 <paramref name="Count" /> 大于0（零），则此方法返回移动的字符数加1。 如果 <paramref name="Count" /> 小于0（零），则此方法返回移动的字符数减1。 如果 <paramref name="Cset" /> 找不到字符，则不会更改区域或所选内容，并且该方法返回0（零）。 如果结束位置向后移动到原始起始位置之前的某个点，则起始位置设置为新的结束位置。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveEndWhile">
      <MemberSignature Language="C#" Value="public int MoveEndWhile (ref object Cset, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveEndWhile([in]object&amp; Cset, [in]object&amp; Count) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.MoveEndWhile(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveEndWhile (ByRef Cset As Object, Optional ByRef Count As Object) As Integer" />
      <MemberSignature Language="F#" Value="abstract member MoveEndWhile : obj * obj -&gt; int" Usage="range.MoveEndWhile (Cset, Count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(114)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cset" Type="System.Object" RefType="ref" />
        <Parameter Name="Count" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Cset">必需的<b>对象</b>。 一个或多个字符。 此参数区分大小写。</param>
        <param name="Count">可选<b>对象</b>。 区域或所选内容移动的最大字符数。 可以是数字或 <b>wdForward</b> 或 <b>wdBackward</b> 常量。 如果 <paramref name="Count" /> 为正数，则该区域或所选内容在文档中向前移动。 如果是负数，则该区域或所选内容向后移动。 默认值是 <b>wdForward</b> 。</param>
        <summary>在文档找到任何指定的字符时，移动某一范围的结束字符位置。</summary>
        <returns>To be added.</returns>
        <remarks><para>如果找到了中的任何字符 <paramref name="Cset" /> ，则移动指定区域或所选内容的结束位置。 此方法返回区域或所选内容的结束位置作为<b>整数</b>值移动的字符数。 如果 <paramref name="Cset" /> 找不到字符，则不会更改区域或所选内容，并且该方法返回0（零）。 如果结束位置向后移动到原始起始位置之前的某个点，则起始位置设置为新的结束位置。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveStart">
      <MemberSignature Language="C#" Value="public int MoveStart (ref object Unit, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveStart([in]object&amp; Unit, [in]object&amp; Count) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.MoveStart(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveStart (Optional ByRef Unit As Object, Optional ByRef Count As Object) As Integer" />
      <MemberSignature Language="F#" Value="abstract member MoveStart : obj * obj -&gt; int" Usage="range.MoveStart (Unit, Count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Unit" Type="System.Object" RefType="ref" />
        <Parameter Name="Count" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Unit">可选 <see cref="T:Microsoft.Office.Interop.Word.WdUnits" /> 。 指定区域或所选内容的起始位置要移动的单位。</param>
        <param name="Count">可选<b>对象</b>。 指定区域或所选内容移动的最大单位数。 如果 <paramref name="Count" /> 为正数，则该区域或所选内容的起始位置在文档中向前移动。 如果是负数，则起始位置向后移动。 如果将起始位置向前移动到超出结束位置的某个位置，则折叠该区域或所选内容，并将起始位置和结束位置移到一起。 默认值为 1。</param>
        <summary>移动指定范围的起始位置。</summary>
        <returns>To be added.</returns>
        <remarks><para>此方法返回一个整数，该整数指示起始位置或区域或所选内容实际移动的单位数，如果移动不成功，则返回0（零）。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveStartUntil">
      <MemberSignature Language="C#" Value="public int MoveStartUntil (ref object Cset, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveStartUntil([in]object&amp; Cset, [in]object&amp; Count) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.MoveStartUntil(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveStartUntil (ByRef Cset As Object, Optional ByRef Count As Object) As Integer" />
      <MemberSignature Language="F#" Value="abstract member MoveStartUntil : obj * obj -&gt; int" Usage="range.MoveStartUntil (Cset, Count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(116)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cset" Type="System.Object" RefType="ref" />
        <Parameter Name="Count" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Cset">必需的<b>对象</b>。 一个或多个字符。 此参数区分大小写。</param>
        <param name="Count">可选<b>对象</b>。 指定区域或所选内容要移动的最大字符数。 可以是数字或 <b>wdForward</b> 或 <b>wdBackward</b> 常量。 如果 <paramref name="Count" /> 为正数，则该区域或所选内容在文档中向前移动。 如果是负数，则该区域或所选内容向后移动。 默认值是 <b>wdForward</b> 。</param>
        <summary>移动指定区域或所选内容的起始位置，直到在文档中找到一个指定的字符。</summary>
        <returns>To be added.</returns>
        <remarks><para>如果在文档中是向后移动，则扩展该范围。</para>
          <para>此方法返回指定区域或所选内容的起始位置移动的字符数，作为<b>整数</b>值。 如果 <paramref name="Count" /> 大于0（零），则此方法返回移动的字符数加1。 如果 <paramref name="Count" /> 小于0（零），则此方法返回移动的字符数减1。 如果 <paramref name="Cset" /> 找不到字符，则不会更改指定的区域或所选内容，并且该方法返回0（零）。 如果起始位置向前移动到超出结束位置的某个点，则折叠该区域或所选内容，并将开始和结束位置移到一起。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveStartWhile">
      <MemberSignature Language="C#" Value="public int MoveStartWhile (ref object Cset, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveStartWhile([in]object&amp; Cset, [in]object&amp; Count) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.MoveStartWhile(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveStartWhile (ByRef Cset As Object, Optional ByRef Count As Object) As Integer" />
      <MemberSignature Language="F#" Value="abstract member MoveStartWhile : obj * obj -&gt; int" Usage="range.MoveStartWhile (Cset, Count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(113)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cset" Type="System.Object" RefType="ref" />
        <Parameter Name="Count" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Cset">必需的<b>对象</b>。 一个或多个字符。 此参数区分大小写。</param>
        <param name="Count">可选<b>对象</b>。 指定区域或所选内容要移动的最大字符数。 可以是数字或 <b>wdForward</b> 或 <b>wdBackward</b> 常量。 如果 <paramref name="Count" /> 为正数，则该区域或所选内容在文档中向前移动。 如果是负数，则该区域或所选内容向后移动。 默认值是 <b>wdForward</b> 。</param>
        <summary>当在文档中找到任何指定的字符时，移动指定范围的起始位置。</summary>
        <returns>To be added.</returns>
        <remarks><para>如果找到了中的任何字符 <paramref name="Cset" /> ，则移动区域或所选内容的起始位置。 此方法返回将区域或所选内容的起始位置移动为<b>整数</b>值的字符数。 如果 <paramref name="Cset" /> 找不到字符，则不会更改区域或所选内容，并且该方法返回0（零）。 如果起始位置向前移动到超出原来的结束位置的某个位置，该结束位置设置为新的起始位置。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveUntil">
      <MemberSignature Language="C#" Value="public int MoveUntil (ref object Cset, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveUntil([in]object&amp; Cset, [in]object&amp; Count) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.MoveUntil(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveUntil (ByRef Cset As Object, Optional ByRef Count As Object) As Integer" />
      <MemberSignature Language="F#" Value="abstract member MoveUntil : obj * obj -&gt; int" Usage="range.MoveUntil (Cset, Count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(115)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cset" Type="System.Object" RefType="ref" />
        <Parameter Name="Count" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Cset">必需的<b>对象</b>。 一个或多个字符。 如果在 <paramref name="Cset" /> 值过期之前找到了中的任何字符 <paramref name="Count" /> ，则指定的区域或所选内容将作为插入点放在该字符之前。 此参数区分大小写。</param>
        <param name="Count">可选<b>对象</b>。 指定区域或所选内容要移动的最大字符数。 可以是数字或 <b>wdForward</b> 或 <b>wdBackward</b> 常量。 如果 <paramref name="Count" /> 为正数，则该区域或所选内容在文档中从结束位置开始向前移动。 如果是负数，则该区域或所选内容从起始位置开始向后移动。 默认值是 <b>wdForward</b> 。</param>
        <summary>移动指定范围，直到在文档中找到指定字符中的一个为止。</summary>
        <returns>To be added.</returns>
        <remarks><para>此方法以<b>整数</b>值的形式返回指定区域或所选内容移动的字符数。 如果 <paramref name="Count" /> 大于0（零），则此方法返回移动的字符数加1。 如果 <paramref name="Count" /> 小于0（零），则此方法返回移动的字符数减一。 如果 <paramref name="Cset" /> 找不到字符，则不会更改区域或所选内容，并且该方法返回0（零）。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveWhile">
      <MemberSignature Language="C#" Value="public int MoveWhile (ref object Cset, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveWhile([in]object&amp; Cset, [in]object&amp; Count) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.MoveWhile(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveWhile (ByRef Cset As Object, Optional ByRef Count As Object) As Integer" />
      <MemberSignature Language="F#" Value="abstract member MoveWhile : obj * obj -&gt; int" Usage="range.MoveWhile (Cset, Count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(112)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cset" Type="System.Object" RefType="ref" />
        <Parameter Name="Count" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Cset">必需的<b>对象</b>。 一个或多个字符。 此参数区分大小写。</param>
        <param name="Count">可选<b>对象</b>。 指定区域或所选内容要移动的最大字符数。 可以是数字或 <b>wdForward</b> 或 <b>wdBackward</b> 常量。 如果 <paramref name="Count" /> 为正数，则指定的区域或所选内容在文档中从结束位置开始向前移动。 如果是负数，则该区域或所选内容从起始位置开始向后移动。 默认值是 <b>wdForward</b> 。</param>
        <summary>当在文档中找到任何指定的字符时，移动指定范围。</summary>
        <returns>To be added.</returns>
        <remarks><para>如果找到了中的任何字符 <paramref name="Cset" /> ，则移动指定的范围。 生成的 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象将作为插入点放置在找到的任何 <paramref name="Cset" /> 字符之后。 此方法以<b>整数</b>值的形式返回指定区域或所选内容移动的字符数。 如果找不到 <paramref name="Cset" /> 字符，则该范围不变，并且该方法返回0（零）。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range Next (ref object Unit, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Range Next([in]object&amp; Unit, [in]object&amp; Count) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.Next(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Next (Optional ByRef Unit As Object, Optional ByRef Count As Object) As Range" />
      <MemberSignature Language="F#" Value="abstract member Next : obj * obj -&gt; Microsoft.Office.Interop.Word.Range" Usage="range.Next (Unit, Count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(105)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Unit" Type="System.Object" RefType="ref" />
        <Parameter Name="Count" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Unit">可选<b>对象</b>。 要计算的单位类型。 可以是任何 <see cref="T:Microsoft.Office.Interop.Word.WdUnits" /> 常量。</param>
        <param name="Count">可选<b>对象</b>。 要向前移动的单位数。 默认值为 1。</param>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，表示相对于指定范围的指定的单位。</summary>
        <returns>To be added.</returns>
        <remarks><para>如果该范围恰好在指定的之前 <paramref name="Unit" /> ，则将该范围移至以下单元。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NextStoryRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range NextStoryRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Range NextStoryRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.NextStoryRange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextStoryRange As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Range ^ NextStoryRange { Microsoft::Office::Interop::Word::Range ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextStoryRange : Microsoft.Office.Interop.Word.Range" Usage="Microsoft.Office.Interop.Word.Range.NextStoryRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(320)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(320)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 引用下一文章的对象，如下表所示。</summary>
        <value>To be added.</value>
        <remarks><para>下表显示了<b>NextStoryRange</b>属性返回的内容：</para>
          <list type="table">
            <item>
              <description>
                <b>wdMainTextStory</b> 、 <b>wdFootnotesStory</b> 、 <b>wdEndnotesStory</b> 和 <b>wdCommentsStory</b></description>
              <description>始终返回<b>Nothing</b>。</description>
            </item>
            <item>
              <description>
                <b>wdTextFrameStory</b>
              </description>
              <description>下一组链接文本框的文章。</description>
            </item>
            <item>
              <description>
                <b>wdEvenPagesHeaderStory</b>、 <b>wdPrimaryHeaderStory</b>、 <b>wdEvenPagesFooterStory</b>、 <b>wdPrimaryFooterStory</b>、 <b>wdFirstPageHeaderStory</b>、 <b>wdFirstPageFooterStory</b></description>
              <description>下一节的相同类型的文章。</description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NextSubdocument">
      <MemberSignature Language="C#" Value="public void NextSubdocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NextSubdocument() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.NextSubdocument" />
      <MemberSignature Language="VB.NET" Value="Public Sub NextSubdocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NextSubdocument();" />
      <MemberSignature Language="F#" Value="abstract member NextSubdocument : unit -&gt; unit" Usage="range.NextSubdocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(219)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将范围移至下一个子文档。</summary>
        <remarks><para>如果没有上一个子文档，将发生错误。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NoProofing">
      <MemberSignature Language="C#" Value="public int NoProofing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NoProofing" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.NoProofing" />
      <MemberSignature Language="VB.NET" Value="Public Property NoProofing As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NoProofing { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.NoProofing : int with get, set" Usage="Microsoft.Office.Interop.Word.Range.NoProofing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(323)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(323)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(323)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>确定拼写和语法检查程序是否忽略指定的文本。</summary>
        <value>To be added.</value>
        <remarks><para>如果拼写和语法检查程序忽略指定的文本，则此属性返回<b>True</b> ，否则返回<b>False</b> 。 如果只将某些指定的文本的<b>NoProofing</b>属性设置为<b>True</b> ，则返回<b>wdUndefined</b> 。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OMaths">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.OMaths OMaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.OMaths OMaths" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.OMaths" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OMaths As OMaths" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::OMaths ^ OMaths { Microsoft::Office::Interop::Word::OMaths ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OMaths : Microsoft.Office.Interop.Word.OMaths" Usage="Microsoft.Office.Interop.Word.Range.OMaths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(346)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(346)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.OMaths</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.OMaths" /> 集合，该集合代表 <see cref="T:Microsoft.Office.Interop.Word.OMath" /> 指定区域中的对象。 只读。</summary>
        <value><see cref="T:Microsoft.Office.Interop.Word.OMaths" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdTextOrientation Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdTextOrientation Orientation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As WdTextOrientation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdTextOrientation Orientation { Microsoft::Office::Interop::Word::WdTextOrientation get(); void set(Microsoft::Office::Interop::Word::WdTextOrientation value); };" />
      <MemberSignature Language="F#" Value="member this.Orientation : Microsoft.Office.Interop.Word.WdTextOrientation with get, set" Usage="Microsoft.Office.Interop.Word.Range.Orientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(317)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(317)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(317)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdTextOrientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置范围中文字的方向，当启用了文字方向功能。</summary>
        <value>To be added.</value>
        <remarks><para>由于您选择或安装的语言支持不同（例如美国英语），上述部分常量可能无法使用。</para>
          <para>您可以设置文本框架或者恰好位于文本框架内的所选内容或区域的方向。 有关文本框架和文本框之间的差异的信息，请参阅 <see cref="T:Microsoft.Office.Interop.Word.TextFrame" /> 对象。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PageSetup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.PageSetup PageSetup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.PageSetup PageSetup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.PageSetup" />
      <MemberSignature Language="VB.NET" Value="Public Property PageSetup As PageSetup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::PageSetup ^ PageSetup { Microsoft::Office::Interop::Word::PageSetup ^ get(); void set(Microsoft::Office::Interop::Word::PageSetup ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PageSetup : Microsoft.Office.Interop.Word.PageSetup with get, set" Usage="Microsoft.Office.Interop.Word.Range.PageSetup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1101)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1101)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1101)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.PageSetup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Word.PageSetup" /> 与指定区域相关联的对象。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParagraphFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ParagraphFormat ParagraphFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ParagraphFormat ParagraphFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.ParagraphFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property ParagraphFormat As ParagraphFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::ParagraphFormat ^ ParagraphFormat { Microsoft::Office::Interop::Word::ParagraphFormat ^ get(); void set(Microsoft::Office::Interop::Word::ParagraphFormat ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ParagraphFormat : Microsoft.Office.Interop.Word.ParagraphFormat with get, set" Usage="Microsoft.Office.Interop.Word.Range.ParagraphFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1102)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1102)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1102)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ParagraphFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置一个 <see cref="T:Microsoft.Office.Interop.Word.ParagraphFormat" /> 对象，表示指定区域的段落设置。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paragraphs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Paragraphs Paragraphs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Paragraphs Paragraphs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Paragraphs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Paragraphs As Paragraphs" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Paragraphs ^ Paragraphs { Microsoft::Office::Interop::Word::Paragraphs ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Paragraphs : Microsoft.Office.Interop.Word.Paragraphs" Usage="Microsoft.Office.Interop.Word.Range.Paragraphs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(59)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(59)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Paragraphs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.Paragraphs" /> 集合，该集合代表指定区域中的所有段落。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParagraphStyle">
      <MemberSignature Language="C#" Value="public object ParagraphStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ParagraphStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.ParagraphStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParagraphStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ParagraphStyle { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParagraphStyle : obj" Usage="Microsoft.Office.Interop.Word.Range.ParagraphStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(421)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(421)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个<b>对象</b>，表示用于设置段落格式的样式。 只读。</summary>
        <value><b>Object</b></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : obj" Usage="Microsoft.Office.Interop.Word.Range.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1002)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1002)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个对象，代表指定对象的父对象。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentContentControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ContentControl ParentContentControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ContentControl ParentContentControl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.ParentContentControl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentContentControl As ContentControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::ContentControl ^ ParentContentControl { Microsoft::Office::Interop::Word::ContentControl ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentContentControl : Microsoft.Office.Interop.Word.ContentControl" Usage="Microsoft.Office.Interop.Word.Range.ParentContentControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(501)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(501)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ContentControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.ContentControl" /> 对象，表示指定范围的父内容控件。 只读。</summary>
        <value><see cref="T:Microsoft.Office.Interop.Word.ContentControl" /></value>
        <remarks><para>如果没有指定区域的父内容控件，则此属性返回<b>Null</b> 。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Paste() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste();" />
      <MemberSignature Language="F#" Value="abstract member Paste : unit -&gt; unit" Usage="range.Paste " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(121)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将"剪贴板"中的内容插入指定范围。</summary>
        <remarks><para>如果您不想替换该范围的内容，请在 <see cref="M:Microsoft.Office.Interop.Word.Range.Collapse(System.Object@)" /> 使用此方法之前使用该方法。</para>
          <para>范围将扩展，以包含剪贴板中的内容。 当此方法与对象一起使用时 <see cref="T:Microsoft.Office.Interop.Word.Selection" /> ，所选内容不会扩展以包含剪贴板内容; 而是将所选内容放置在粘贴的剪贴板内容之后。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteAndFormat">
      <MemberSignature Language="C#" Value="public void PasteAndFormat (Microsoft.Office.Interop.Word.WdRecoveryType Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteAndFormat([in]valuetype Microsoft.Office.Interop.Word.WdRecoveryType Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.PasteAndFormat(Microsoft.Office.Interop.Word.WdRecoveryType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PasteAndFormat (Type As WdRecoveryType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PasteAndFormat(Microsoft::Office::Interop::Word::WdRecoveryType Type);" />
      <MemberSignature Language="F#" Value="abstract member PasteAndFormat : Microsoft.Office.Interop.Word.WdRecoveryType -&gt; unit" Usage="range.PasteAndFormat Type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(412)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Word.WdRecoveryType" />
      </Parameters>
      <Docs>
        <param name="Type">必需 <see cref="T:Microsoft.Office.Interop.Word.WdRecoveryType" /> 。 粘贴所选的表格单元格时使用的格式类型。</param>
        <summary>粘贴选定的表格单元格，并为其设置指定的格式。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteAppendTable">
      <MemberSignature Language="C#" Value="public void PasteAppendTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteAppendTable() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.PasteAppendTable" />
      <MemberSignature Language="VB.NET" Value="Public Sub PasteAppendTable ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PasteAppendTable();" />
      <MemberSignature Language="F#" Value="abstract member PasteAppendTable : unit -&gt; unit" Usage="range.PasteAppendTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(414)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>通过在所选行之间插入粘贴的行，将粘贴的单元格合并到现有的表格中。</summary>
        <remarks><para>不覆盖任何单元格。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteAsNestedTable">
      <MemberSignature Language="C#" Value="public void PasteAsNestedTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteAsNestedTable() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.PasteAsNestedTable" />
      <MemberSignature Language="VB.NET" Value="Public Sub PasteAsNestedTable ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PasteAsNestedTable();" />
      <MemberSignature Language="F#" Value="abstract member PasteAsNestedTable : unit -&gt; unit" Usage="range.PasteAsNestedTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(222)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将一个或一组单元格作为嵌套表格粘贴到所选范围。</summary>
        <remarks><para>仅当剪贴板中包含一个单元格或者单元格和选定的区域的组是一个或一组单元格当前文档中，可以使用 <b>PasteAsNestedTable</b> 。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteExcelTable">
      <MemberSignature Language="C#" Value="public void PasteExcelTable (bool LinkedToExcel, bool WordFormatting, bool RTF);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteExcelTable([in]bool LinkedToExcel, [in]bool WordFormatting, [in]bool RTF) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.PasteExcelTable(System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PasteExcelTable (LinkedToExcel As Boolean, WordFormatting As Boolean, RTF As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PasteExcelTable(bool LinkedToExcel, bool WordFormatting, bool RTF);" />
      <MemberSignature Language="F#" Value="abstract member PasteExcelTable : bool * bool * bool -&gt; unit" Usage="range.PasteExcelTable (LinkedToExcel, WordFormatting, RTF)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(413)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="LinkedToExcel" Type="System.Boolean" />
        <Parameter Name="WordFormatting" Type="System.Boolean" />
        <Parameter Name="RTF" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="LinkedToExcel">必需的<b>布尔值</b>。 <b>为</b> 链接到原始 Excel 文件粘贴的表格，以便对 Excel 文件所做的更改将反映在 Microsoft Word。</param>
        <param name="WordFormatting">必需的<b>布尔值</b>。 <b>为</b> 目录设置格式，使用 Word 文档中的格式设置。 <b>假</b> 的格式根据原始 Excel 文件。</param>
        <param name="RTF">必需的<b>布尔值</b>。 <b>True</b> 将粘贴使用丰富文本格式 (RTF) Excel 表。 <b>False</b> ，则将 Excel 表格粘贴为 HTML。</param>
        <summary>粘贴 Microsoft Excel 表格并设置其格式。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteSpecial">
      <MemberSignature Language="C#" Value="public void PasteSpecial (ref object IconIndex, ref object Link, ref object Placement, ref object DisplayAsIcon, ref object DataType, ref object IconFileName, ref object IconLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteSpecial([in]object&amp; IconIndex, [in]object&amp; Link, [in]object&amp; Placement, [in]object&amp; DisplayAsIcon, [in]object&amp; DataType, [in]object&amp; IconFileName, [in]object&amp; IconLabel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.PasteSpecial(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PasteSpecial (Optional ByRef IconIndex As Object, Optional ByRef Link As Object, Optional ByRef Placement As Object, Optional ByRef DisplayAsIcon As Object, Optional ByRef DataType As Object, Optional ByRef IconFileName As Object, Optional ByRef IconLabel As Object)" />
      <MemberSignature Language="F#" Value="abstract member PasteSpecial : obj * obj * obj * obj * obj * obj * obj -&gt; unit" Usage="range.PasteSpecial (IconIndex, Link, Placement, DisplayAsIcon, DataType, IconFileName, IconLabel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(176)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="IconIndex" Type="System.Object" RefType="ref" />
        <Parameter Name="Link" Type="System.Object" RefType="ref" />
        <Parameter Name="Placement" Type="System.Object" RefType="ref" />
        <Parameter Name="DisplayAsIcon" Type="System.Object" RefType="ref" />
        <Parameter Name="DataType" Type="System.Object" RefType="ref" />
        <Parameter Name="IconFileName" Type="System.Object" RefType="ref" />
        <Parameter Name="IconLabel" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="IconIndex">可选<b>对象</b>。 如果 <paramref name="DisplayAsIcon" /> 为<b>True</b>，则此参数是一个与指定的程序文件中要使用的图标相对应的数字 <paramref name="IconFilename" /> 。 图标显示在 "更改图标" 对话框（"插入" 菜单，"对象" 命令，"新建" 选项卡）中：0（零）对应于第一个图标，1对应于第二个图标，依此类推。 如果省略该参数，则使用第一个（默认）图标。</param>
        <param name="Link">可选<b>对象</b>。 如果为 <b>True</b>，则创建指向“剪贴板”内容源文件的链接。 默认值为 <b>False</b>。</param>
        <param name="Placement">可选<b>对象</b>。 可以是下列 <see cref="T:Microsoft.Office.Interop.Word.WdOLEPlacement" /> 常量之一： <b>WdFloatOverText</b>或<b>wdInLine</b>。 默认值为 <b>wdInLine</b>。</param>
        <param name="DisplayAsIcon">可选<b>对象</b>。 可选<b>对象</b>。 如果为 <b>True</b>，则将链接显示为图标。 默认值为 <b>False</b> 。</param>
        <param name="DataType">可选<b>对象</b>。 将剪贴板内容插入到文档中所使用的格式。 <see cref="T:Microsoft.Office.Interop.Word.WdPasteDataType" />.</param>
        <param name="IconFileName">可选<b>对象</b>。如果 <paramref name="DisplayAsIcon" /> 为<b>True</b>，则此参数是存储要显示的图标的文件的路径和文件名。</param>
        <param name="IconLabel">可选<b>对象</b>。 如果 <paramref name="DisplayAsIcon" /> 为<b>True</b>，则此参数是显示在图标下方的文本。</param>
        <summary>插入“剪贴板”中的内容。</summary>
        <remarks><para>与方法不同的是 <see cref="M:Microsoft.Office.Interop.Word.Range.Paste" /> ，通过<b>PasteSpecial</b> ，您可以控制粘贴信息的格式和（可选）建立指向源文件的链接（例如，Microsoft Excel 工作表）。</para>
          <para>如果不想替换指定范围的内容，请在 <see cref="M:Microsoft.Office.Interop.Word.Range.Collapse(System.Object@)" /> 使用此方法之前使用方法。 使用此方法时，区域不会扩展以包含 "剪贴板" 中的内容。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PhoneticGuide">
      <MemberSignature Language="C#" Value="public void PhoneticGuide (string Text, Microsoft.Office.Interop.Word.WdPhoneticGuideAlignmentType Alignment = (Microsoft.Office.Interop.Word.WdPhoneticGuideAlignmentType) -1, int Raise = 0, int FontSize = 0, string FontName = &quot;&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PhoneticGuide([in]string Text, [in]valuetype Microsoft.Office.Interop.Word.WdPhoneticGuideAlignmentType Alignment, [in]int32 Raise, [in]int32 FontSize, [in]string FontName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.PhoneticGuide(System.String,Microsoft.Office.Interop.Word.WdPhoneticGuideAlignmentType,System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PhoneticGuide (Text As String, Optional Alignment As WdPhoneticGuideAlignmentType = (Microsoft.Office.Interop.Word.WdPhoneticGuideAlignmentType) -1, Optional Raise As Integer = 0, Optional FontSize As Integer = 0, Optional FontName As String = &quot;&quot;)" />
      <MemberSignature Language="F#" Value="abstract member PhoneticGuide : string * Microsoft.Office.Interop.Word.WdPhoneticGuideAlignmentType * int * int * string -&gt; unit" Usage="range.PhoneticGuide (Text, Alignment, Raise, FontSize, FontName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(224)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
        <Parameter Name="Alignment" Type="Microsoft.Office.Interop.Word.WdPhoneticGuideAlignmentType" />
        <Parameter Name="Raise" Type="System.Int32" />
        <Parameter Name="FontSize" Type="System.Int32" />
        <Parameter Name="FontName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Text">必需的 <b>字符串</b> 。 要添加的拼音文字。</param>
        <param name="Alignment">可选 <see cref="T:Microsoft.Office.Interop.Word.WdPhoneticGuideAlignmentType" /> 。 添加的拼音文字的对齐方式。</param>
        <param name="Raise">可选属性，类型为 <b>Integer</b>。 从指定区域内文字的顶端到拼音文字顶端的距离（以磅为单位）。 如果未指定任何值，则 Microsoft Word 自动将拼音文字与指定区域的距离设置为最优值。</param>
        <param name="FontSize">可选属性，类型为 <b>Integer</b>。 拼音文字的字体大小。 如果未指定任何值，则 Word 将拼音字体的大小设置为指定区域内文字大小的一半。</param>
        <param name="FontName">可选<b>字符串</b>。 用于拼音文字的字体的名称。 如果未指定任何值，则 Word 将其设置为与指定区域内文字相同的字体。</param>
        <summary>将拼音指南添加到指定区域。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range Previous (ref object Unit, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Range Previous([in]object&amp; Unit, [in]object&amp; Count) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.Previous(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Previous (Optional ByRef Unit As Object, Optional ByRef Count As Object) As Range" />
      <MemberSignature Language="F#" Value="abstract member Previous : obj * obj -&gt; Microsoft.Office.Interop.Word.Range" Usage="range.Previous (Unit, Count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(106)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Unit" Type="System.Object" RefType="ref" />
        <Parameter Name="Count" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Unit">可选<b>对象</b>。 <see cref="T:Microsoft.Office.Interop.Word.WdUnits" /></param>
        <param name="Count">可选<b>对象</b>。 要向后移动的单位数。 默认值为 1。</param>
        <summary>返回 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 相对于指定的所选内容或区域的对象。</summary>
        <returns>To be added.</returns>
        <remarks><para>如果区域恰好在指定的位置之后 <paramref name="Unit" /> ，则将区域移到上一个单元。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousBookmarkID">
      <MemberSignature Language="C#" Value="public int PreviousBookmarkID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PreviousBookmarkID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.PreviousBookmarkID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreviousBookmarkID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PreviousBookmarkID { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PreviousBookmarkID : int" Usage="Microsoft.Office.Interop.Word.Range.PreviousBookmarkID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(309)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(309)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回与指定区域位于同一位置或之前的最后一个书签的编号。</summary>
        <value>To be added.</value>
        <remarks><para>如果没有对应的书签，则<b>PreviousBookmarkID</b>属性返回0（零）。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousSubdocument">
      <MemberSignature Language="C#" Value="public void PreviousSubdocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreviousSubdocument() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.PreviousSubdocument" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreviousSubdocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreviousSubdocument();" />
      <MemberSignature Language="F#" Value="abstract member PreviousSubdocument : unit -&gt; unit" Usage="range.PreviousSubdocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(220)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将区域或所选内容移至上一个子文档。 如果没有上一个子文档，将发生错误。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadabilityStatistics">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ReadabilityStatistics ReadabilityStatistics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ReadabilityStatistics ReadabilityStatistics" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.ReadabilityStatistics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReadabilityStatistics As ReadabilityStatistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::ReadabilityStatistics ^ ReadabilityStatistics { Microsoft::Office::Interop::Word::ReadabilityStatistics ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReadabilityStatistics : Microsoft.Office.Interop.Word.ReadabilityStatistics" Usage="Microsoft.Office.Interop.Word.Range.ReadabilityStatistics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(314)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(314)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ReadabilityStatistics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.ReadabilityStatistics" /> 集合，该集合代表指定区域的可读性统计信息。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Relocate">
      <MemberSignature Language="C#" Value="public void Relocate (int Direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Relocate([in]int32 Direction) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.Relocate(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Relocate (Direction As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Relocate(int Direction);" />
      <MemberSignature Language="F#" Value="abstract member Relocate : int -&gt; unit" Usage="range.Relocate Direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(179)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Direction" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Direction">必需 <see cref="T:Microsoft.Office.Interop.Word.WdRelocate" /> 。 移动的方向。</param>
        <summary>在大纲视图中，将指定区域中各段移至下一个可见段落之后或上一个可见段落之前。</summary>
        <remarks><para>仅当正文文本折叠在大纲视图中或区域的一部分时，正文文本才与标题一起移动。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Revisions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Revisions Revisions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Revisions Revisions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Revisions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Revisions As Revisions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Revisions ^ Revisions { Microsoft::Office::Interop::Word::Revisions ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Revisions : Microsoft.Office.Interop.Word.Revisions" Usage="Microsoft.Office.Interop.Word.Range.Revisions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Revisions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.Revisions" /> 集合，该集合代表区域中的修订。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Rows Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Rows Rows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Rows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rows As Rows" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Rows ^ Rows { Microsoft::Office::Interop::Word::Rows ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Rows : Microsoft.Office.Interop.Word.Rows" Usage="Microsoft.Office.Interop.Word.Range.Rows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(303)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(303)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Rows</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.Rows" /> 集合，该集合代表区域中的所有表格行。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scripts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Scripts Scripts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Scripts Scripts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Scripts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scripts As Scripts" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Scripts ^ Scripts { Microsoft::Office::Core::Scripts ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scripts : Microsoft.Office.Core.Scripts" Usage="Microsoft.Office.Interop.Word.Range.Scripts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(325)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(325)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Scripts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Core.Scripts" /> 集合，该集合代表指定对象中的 HTML 脚本的集合。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sections">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Sections Sections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Sections Sections" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Sections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sections As Sections" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Sections ^ Sections { Microsoft::Office::Interop::Word::Sections ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Sections : Microsoft.Office.Interop.Word.Sections" Usage="Microsoft.Office.Interop.Word.Range.Sections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(58)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(58)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Sections</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.Sections" /> 集合，该集合代表指定区域中的节。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.Select" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select();" />
      <MemberSignature Language="F#" Value="abstract member Select : unit -&gt; unit" Usage="range.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(65535)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>选择指定的对象。</summary>
        <remarks><para>使用此方法后，请使用 <see cref="P:Microsoft.Office.Interop.Word._Application.Selection" /> 属性来处理选定的项。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Sentences">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Sentences Sentences { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Sentences Sentences" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Sentences" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sentences As Sentences" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Sentences ^ Sentences { Microsoft::Office::Interop::Word::Sentences ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Sentences : Microsoft.Office.Interop.Word.Sentences" Usage="Microsoft.Office.Interop.Word.Range.Sentences" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(52)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(52)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Sentences</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.Sentences" /> 集合，该集合代表区域中的所有句子。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetListLevel">
      <MemberSignature Language="C#" Value="public void SetListLevel (short Level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetListLevel([in]int16 Level) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.SetListLevel(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetListLevel (Level As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetListLevel(short Level);" />
      <MemberSignature Language="F#" Value="abstract member SetListLevel : int16 -&gt; unit" Usage="range.SetListLevel Level" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(427)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Level" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Level">必需的<b>缩写</b>一个指示新的列表级别的数字。</param>
        <summary>为编号列表中的一个或多个项目设置列表级别。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRange">
      <MemberSignature Language="C#" Value="public void SetRange (int Start, int End);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRange([in]int32 Start, [in]int32 End) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.SetRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetRange (Start As Integer, End As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRange(int Start, int End);" />
      <MemberSignature Language="F#" Value="abstract member SetRange : int * int -&gt; unit" Usage="range.SetRange (Start, End)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(100)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Start" Type="System.Int32" />
        <Parameter Name="End" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Start">必需的<b>整数</b>。 区域或所选内容的起始字符位置。</param>
        <param name="End">必需的<b>整数</b>。 区域或所选内容的结束字符位置。</param>
        <summary>设置范围的起始字符和结束字符的位置。</summary>
        <remarks><para>字符位置的值从文档该部分开头计起，起始值为 0（零）。将计算所有的字符，包括非打印字符和未显示的隐藏字符。</para>
          <para><b>SetRange</b>方法重新定义现有对象的起始和结束位置 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 。 此方法与方法不同 <see cref="M:Microsoft.Office.Interop.Word._Document.Range(System.Object@,System.Object@)" /> ，后者用于在给定起始位置和结束位置时创建范围。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Shading">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shading Shading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Shading Shading" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Shading" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Shading As Shading" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Shading ^ Shading { Microsoft::Office::Interop::Word::Shading ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Shading : Microsoft.Office.Interop.Word.Shading" Usage="Microsoft.Office.Interop.Word.Range.Shading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shading</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.Shading" /> 对象，该对象代表指定对象的底纹格式。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShapeRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ShapeRange ShapeRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ShapeRange ShapeRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.ShapeRange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShapeRange As ShapeRange" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::ShapeRange ^ ShapeRange { Microsoft::Office::Interop::Word::ShapeRange ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ShapeRange : Microsoft.Office.Interop.Word.ShapeRange" Usage="Microsoft.Office.Interop.Word.Range.ShapeRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(311)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(311)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ShapeRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.ShapeRange" /> 集合，该集合代表 <see cref="T:Microsoft.Office.Interop.Word.Shape" /> 指定区域中的所有对象。</summary>
        <value>To be added.</value>
        <remarks><para>形状范围可以包含图形、形状、图片、OLE 对象、ActiveX 控件、文字对象和标注。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowAll">
      <MemberSignature Language="C#" Value="public bool ShowAll { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowAll" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.ShowAll" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowAll As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowAll { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowAll : bool with get, set" Usage="Microsoft.Office.Interop.Word.Range.ShowAll" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(408)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(408)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(408)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>确定是否显示所有非打印字符（如隐藏文本、制表符、空格标记和段落标记）。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTags">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.SmartTags SmartTags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.SmartTags SmartTags" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.SmartTags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartTags As SmartTags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::SmartTags ^ SmartTags { Microsoft::Office::Interop::Word::SmartTags ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SmartTags : Microsoft.Office.Interop.Word.SmartTags" Usage="Microsoft.Office.Interop.Word.Range.SmartTags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(407)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(407)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.SmartTags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.SmartTags" /> 对象，表示区域中的智能标记。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (ref object ExcludeHeader, ref object FieldNumber, ref object SortFieldType, ref object SortOrder, ref object FieldNumber2, ref object SortFieldType2, ref object SortOrder2, ref object FieldNumber3, ref object SortFieldType3, ref object SortOrder3, ref object SortColumn, ref object Separator, ref object CaseSensitive, ref object BidiSort, ref object IgnoreThe, ref object IgnoreKashida, ref object IgnoreDiacritics, ref object IgnoreHe, ref object LanguageID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort([in]object&amp; ExcludeHeader, [in]object&amp; FieldNumber, [in]object&amp; SortFieldType, [in]object&amp; SortOrder, [in]object&amp; FieldNumber2, [in]object&amp; SortFieldType2, [in]object&amp; SortOrder2, [in]object&amp; FieldNumber3, [in]object&amp; SortFieldType3, [in]object&amp; SortOrder3, [in]object&amp; SortColumn, [in]object&amp; Separator, [in]object&amp; CaseSensitive, [in]object&amp; BidiSort, [in]object&amp; IgnoreThe, [in]object&amp; IgnoreKashida, [in]object&amp; IgnoreDiacritics, [in]object&amp; IgnoreHe, [in]object&amp; LanguageID) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.Sort(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (Optional ByRef ExcludeHeader As Object, Optional ByRef FieldNumber As Object, Optional ByRef SortFieldType As Object, Optional ByRef SortOrder As Object, Optional ByRef FieldNumber2 As Object, Optional ByRef SortFieldType2 As Object, Optional ByRef SortOrder2 As Object, Optional ByRef FieldNumber3 As Object, Optional ByRef SortFieldType3 As Object, Optional ByRef SortOrder3 As Object, Optional ByRef SortColumn As Object, Optional ByRef Separator As Object, Optional ByRef CaseSensitive As Object, Optional ByRef BidiSort As Object, Optional ByRef IgnoreThe As Object, Optional ByRef IgnoreKashida As Object, Optional ByRef IgnoreDiacritics As Object, Optional ByRef IgnoreHe As Object, Optional ByRef LanguageID As Object)" />
      <MemberSignature Language="F#" Value="abstract member Sort : obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj -&gt; unit" Usage="range.Sort (ExcludeHeader, FieldNumber, SortFieldType, SortOrder, FieldNumber2, SortFieldType2, SortOrder2, FieldNumber3, SortFieldType3, SortOrder3, SortColumn, Separator, CaseSensitive, BidiSort, IgnoreThe, IgnoreKashida, IgnoreDiacritics, IgnoreHe, LanguageID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(484)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ExcludeHeader" Type="System.Object" RefType="ref" />
        <Parameter Name="FieldNumber" Type="System.Object" RefType="ref" />
        <Parameter Name="SortFieldType" Type="System.Object" RefType="ref" />
        <Parameter Name="SortOrder" Type="System.Object" RefType="ref" />
        <Parameter Name="FieldNumber2" Type="System.Object" RefType="ref" />
        <Parameter Name="SortFieldType2" Type="System.Object" RefType="ref" />
        <Parameter Name="SortOrder2" Type="System.Object" RefType="ref" />
        <Parameter Name="FieldNumber3" Type="System.Object" RefType="ref" />
        <Parameter Name="SortFieldType3" Type="System.Object" RefType="ref" />
        <Parameter Name="SortOrder3" Type="System.Object" RefType="ref" />
        <Parameter Name="SortColumn" Type="System.Object" RefType="ref" />
        <Parameter Name="Separator" Type="System.Object" RefType="ref" />
        <Parameter Name="CaseSensitive" Type="System.Object" RefType="ref" />
        <Parameter Name="BidiSort" Type="System.Object" RefType="ref" />
        <Parameter Name="IgnoreThe" Type="System.Object" RefType="ref" />
        <Parameter Name="IgnoreKashida" Type="System.Object" RefType="ref" />
        <Parameter Name="IgnoreDiacritics" Type="System.Object" RefType="ref" />
        <Parameter Name="IgnoreHe" Type="System.Object" RefType="ref" />
        <Parameter Name="LanguageID" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ExcludeHeader">可选<b>对象</b>。 <b>真</b> 要排除第一个行或段落标题进行排序。 默认值为 <b>False</b>。</param>
        <param name="FieldNumber">可选<b>对象</b>。 作为排序依据的字段。 Microsoft Word 先排序 <paramref name="FieldNumber" /> ，再按 <paramref name="FieldNumber2" /> ，然后再按 <paramref name="FieldNumber3" /> 。</param>
        <param name="SortFieldType">可选<b>对象</b>。 、和的各自的排序类型 <paramref name="FieldNumber" /> <paramref name="FieldNumber2" /> <paramref name="FieldNumber3" /> 。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdSortFieldType" /> 常量之一。</param>
        <param name="SortOrder">可选<b>对象</b>。 排序、和时使用的排序 <paramref name="FieldNumber" /> 顺序 <paramref name="FieldNumber2" /> <paramref name="FieldNumber3" /> 。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdSortOrder" /> 常量之一。</param>
        <param name="FieldNumber2">可选<b>对象</b>。 作为排序依据的字段。 Microsoft Word 先排序 <paramref name="FieldNumber" /> ，再按 <paramref name="FieldNumber2" /> ，然后再按<paramref name="FieldNumber3" /></param>
        <param name="SortFieldType2">可选<b>对象</b>。 、和的各自的排序类型 <paramref name="FieldNumber" /> <paramref name="FieldNumber2" /> <paramref name="FieldNumber3" /> 。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdSortFieldType" /> 常量之一</param>
        <param name="SortOrder2">可选<b>对象</b>。 排序、和时使用的排序 <paramref name="FieldNumber" /> 顺序 <paramref name="FieldNumber2" /> <paramref name="FieldNumber3" /> 。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdSortOrder" /> 常量之一。</param>
        <param name="FieldNumber3">可选<b>对象</b>。 作为排序依据的字段。 Microsoft Word 先排序 <paramref name="FieldNumber" /> ，再按 <paramref name="FieldNumber2" /> ，然后再按<paramref name="FieldNumber3" /></param>
        <param name="SortFieldType3">可选<b>对象</b>。 、和的各自的排序类型 <paramref name="FieldNumber" /> <paramref name="FieldNumber2" /> <paramref name="FieldNumber3" /> 。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdSortFieldType" /> 常量之一</param>
        <param name="SortOrder3">可选<b>对象</b>。 排序、和时使用的排序 <paramref name="FieldNumber" /> 顺序 <paramref name="FieldNumber2" /> <paramref name="FieldNumber3" /> 。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdSortOrder" /> 常量之一。</param>
        <param name="SortColumn">可选<b>对象</b>。 <b>如果为 True</b> ，则仅对对象指定的列进行排序 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 。</param>
        <param name="Separator">可选<b>对象</b>。 域分隔符的类型。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdSortSeparator" /> 常量之一。</param>
        <param name="CaseSensitive">可选<b>对象</b>。 <b>真</b> 要排序时区分大小写。 默认值为 <b>False</b> 。</param>
        <param name="BidiSort">可选<b>对象</b>。 <b>真</b> 要排序按照从右到左语言规则。 根据您所选择或安装的语言支持（例如，美国英语），此参数可能不可用。</param>
        <param name="IgnoreThe">可选<b>对象</b>。 <b>如果为 True，则</b> <paramref name="alef lam" /> 在对从右向左的语言文本进行排序时忽略阿拉伯语字符。 根据您所选择或安装的语言支持（例如，美国英语），此参数可能不可用。</param>
        <param name="IgnoreKashida">可选<b>对象</b>。 <b>为</b> 从右向左的语言文本进行排序时忽略 kashida。 根据您所选择或安装的语言支持（例如，美国英语），此参数可能不可用。</param>
        <param name="IgnoreDiacritics">可选<b>对象</b>。 <b>为</b> 从右向左的语言文本进行排序时忽略双向控制字符。 根据您所选择或安装的语言支持（例如，美国英语），此参数可能不可用。</param>
        <param name="IgnoreHe">可选<b>对象</b>。 <b>如果为 True，则</b> <paramref name="he" /> 在对从右向左的语言文本进行排序时忽略希伯来字符。 根据您所选择或安装的语言支持（例如，美国英语），此参数可能不可用。</param>
        <param name="LanguageID">可选<b>对象</b>。 <paramref name="LanguageIDOptional" /><b>对象</b>。 指定排序语言。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdLanguageID" /> <b></b> 常量之一。</param>
        <summary>对指定范围中的段落进行排序。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SortAscending">
      <MemberSignature Language="C#" Value="public void SortAscending ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SortAscending() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.SortAscending" />
      <MemberSignature Language="VB.NET" Value="Public Sub SortAscending ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SortAscending();" />
      <MemberSignature Language="F#" Value="abstract member SortAscending : unit -&gt; unit" Usage="range.SortAscending " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(169)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>按字母数字升序对段落或表格行进行排序。</summary>
        <remarks><para>第一个段落或表格行被视为域名记录，不包含在排序中。 使用 <see cref="M:Microsoft.Office.Interop.Word.Range.Sort(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" /> 方法将域名记录包含在排序中。</para>
          <para>此方法提供针对包含数据列的邮件合并数据源进行排序一种简化的的形式。 对于大多数排序任务，请使用 <b>Sort</b> 方法。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SortByHeadings">
      <MemberSignature Language="C#" Value="public void SortByHeadings (ref object SortFieldType, ref object SortOrder, ref object CaseSensitive, ref object BidiSort, ref object IgnoreThe, ref object IgnoreKashida, ref object IgnoreDiacritics, ref object IgnoreHe, ref object LanguageID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SortByHeadings([in]object&amp; SortFieldType, [in]object&amp; SortOrder, [in]object&amp; CaseSensitive, [in]object&amp; BidiSort, [in]object&amp; IgnoreThe, [in]object&amp; IgnoreKashida, [in]object&amp; IgnoreDiacritics, [in]object&amp; IgnoreHe, [in]object&amp; LanguageID) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.SortByHeadings(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SortByHeadings (Optional ByRef SortFieldType As Object, Optional ByRef SortOrder As Object, Optional ByRef CaseSensitive As Object, Optional ByRef BidiSort As Object, Optional ByRef IgnoreThe As Object, Optional ByRef IgnoreKashida As Object, Optional ByRef IgnoreDiacritics As Object, Optional ByRef IgnoreHe As Object, Optional ByRef LanguageID As Object)" />
      <MemberSignature Language="F#" Value="abstract member SortByHeadings : obj * obj * obj * obj * obj * obj * obj * obj * obj -&gt; unit" Usage="range.SortByHeadings (SortFieldType, SortOrder, CaseSensitive, BidiSort, IgnoreThe, IgnoreKashida, IgnoreDiacritics, IgnoreHe, LanguageID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(508)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SortFieldType" Type="System.Object" RefType="ref" />
        <Parameter Name="SortOrder" Type="System.Object" RefType="ref" />
        <Parameter Name="CaseSensitive" Type="System.Object" RefType="ref" />
        <Parameter Name="BidiSort" Type="System.Object" RefType="ref" />
        <Parameter Name="IgnoreThe" Type="System.Object" RefType="ref" />
        <Parameter Name="IgnoreKashida" Type="System.Object" RefType="ref" />
        <Parameter Name="IgnoreDiacritics" Type="System.Object" RefType="ref" />
        <Parameter Name="IgnoreHe" Type="System.Object" RefType="ref" />
        <Parameter Name="LanguageID" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="SortFieldType">要使用的排序字段类型。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdSortFieldType" /> 常量之一。 默认值是 <b>wdSortFieldAlphanumeric</b> 。 根据您所选择或安装的语言支持（例如，美国英语），某些常量可能不可用。</param>
        <param name="SortOrder">要使用的排序顺序。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdSortOrder" /> 常量之一。</param>
        <param name="CaseSensitive"><b>真</b> 要排序时区分大小写。 默认值为 <b>False</b> 。</param>
        <param name="BidiSort"><b>真</b> 要排序按照从右到左语言规则。 根据所选择或安装的语言支持（例如，美国英语），此参数可能不可用。</param>
        <param name="IgnoreThe"><b>真</b> 要忽略阿拉伯语字符 alef lam 从右向左的语言文本进行排序时。 根据所选择或安装的语言支持（例如，美国英语），此参数可能不可用。</param>
        <param name="IgnoreKashida"><b>为</b> 从右向左的语言文本进行排序时忽略 kashida。 根据所选择或安装的语言支持（例如，美国英语），此参数可能不可用。</param>
        <param name="IgnoreDiacritics"><b>为</b> 从右向左的语言文本进行排序时忽略双向控制字符。 根据所选择或安装的语言支持（例如，美国英语），此参数可能不可用。</param>
        <param name="IgnoreHe"><b>真</b> 要忽略希伯来字符 he 从右向左的语言文本进行排序时。 根据所选择或安装的语言支持（例如，美国英语），此参数可能不可用。</param>
        <param name="LanguageID">指定排序语言。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdLanguageID" /> 常量之一。</param>
        <summary>对指定区域中的标题进行排序。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SortDescending">
      <MemberSignature Language="C#" Value="public void SortDescending ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SortDescending() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.SortDescending" />
      <MemberSignature Language="VB.NET" Value="Public Sub SortDescending ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SortDescending();" />
      <MemberSignature Language="F#" Value="abstract member SortDescending : unit -&gt; unit" Usage="range.SortDescending " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>按字母数字降序顺序对段落或表格行进行排序。</summary>
        <remarks><para>第一个段落或表格行被视为域名记录，不包含在排序中。 使用 <see cref="M:Microsoft.Office.Interop.Word.Range.Sort(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" /> 方法将域名记录包含在排序中。</para>
          <para>此方法提供针对包含数据列的邮件合并数据源进行排序一种简化的的形式。对于大多数排序任务，请使用 <b>Sort</b> 方法。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SortOld">
      <MemberSignature Language="C#" Value="public void SortOld (ref object ExcludeHeader, ref object FieldNumber, ref object SortFieldType, ref object SortOrder, ref object FieldNumber2, ref object SortFieldType2, ref object SortOrder2, ref object FieldNumber3, ref object SortFieldType3, ref object SortOrder3, ref object SortColumn, ref object Separator, ref object CaseSensitive, ref object LanguageID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SortOld([in]object&amp; ExcludeHeader, [in]object&amp; FieldNumber, [in]object&amp; SortFieldType, [in]object&amp; SortOrder, [in]object&amp; FieldNumber2, [in]object&amp; SortFieldType2, [in]object&amp; SortOrder2, [in]object&amp; FieldNumber3, [in]object&amp; SortFieldType3, [in]object&amp; SortOrder3, [in]object&amp; SortColumn, [in]object&amp; Separator, [in]object&amp; CaseSensitive, [in]object&amp; LanguageID) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.SortOld(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SortOld (Optional ByRef ExcludeHeader As Object, Optional ByRef FieldNumber As Object, Optional ByRef SortFieldType As Object, Optional ByRef SortOrder As Object, Optional ByRef FieldNumber2 As Object, Optional ByRef SortFieldType2 As Object, Optional ByRef SortOrder2 As Object, Optional ByRef FieldNumber3 As Object, Optional ByRef SortFieldType3 As Object, Optional ByRef SortOrder3 As Object, Optional ByRef SortColumn As Object, Optional ByRef Separator As Object, Optional ByRef CaseSensitive As Object, Optional ByRef LanguageID As Object)" />
      <MemberSignature Language="F#" Value="abstract member SortOld : obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj -&gt; unit" Usage="range.SortOld (ExcludeHeader, FieldNumber, SortFieldType, SortOrder, FieldNumber2, SortFieldType2, SortOrder2, FieldNumber3, SortFieldType3, SortOrder3, SortColumn, Separator, CaseSensitive, LanguageID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ExcludeHeader" Type="System.Object" RefType="ref" />
        <Parameter Name="FieldNumber" Type="System.Object" RefType="ref" />
        <Parameter Name="SortFieldType" Type="System.Object" RefType="ref" />
        <Parameter Name="SortOrder" Type="System.Object" RefType="ref" />
        <Parameter Name="FieldNumber2" Type="System.Object" RefType="ref" />
        <Parameter Name="SortFieldType2" Type="System.Object" RefType="ref" />
        <Parameter Name="SortOrder2" Type="System.Object" RefType="ref" />
        <Parameter Name="FieldNumber3" Type="System.Object" RefType="ref" />
        <Parameter Name="SortFieldType3" Type="System.Object" RefType="ref" />
        <Parameter Name="SortOrder3" Type="System.Object" RefType="ref" />
        <Parameter Name="SortColumn" Type="System.Object" RefType="ref" />
        <Parameter Name="Separator" Type="System.Object" RefType="ref" />
        <Parameter Name="CaseSensitive" Type="System.Object" RefType="ref" />
        <Parameter Name="LanguageID" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ExcludeHeader">To be added.</param>
        <param name="FieldNumber">To be added.</param>
        <param name="SortFieldType">To be added.</param>
        <param name="SortOrder">To be added.</param>
        <param name="FieldNumber2">To be added.</param>
        <param name="SortFieldType2">To be added.</param>
        <param name="SortOrder2">To be added.</param>
        <param name="FieldNumber3">To be added.</param>
        <param name="SortFieldType3">To be added.</param>
        <param name="SortOrder3">To be added.</param>
        <param name="SortColumn">To be added.</param>
        <param name="Separator">To be added.</param>
        <param name="CaseSensitive">To be added.</param>
        <param name="LanguageID">To be added.</param>
        <summary>仅供内部使用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpellingChecked">
      <MemberSignature Language="C#" Value="public bool SpellingChecked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SpellingChecked" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.SpellingChecked" />
      <MemberSignature Language="VB.NET" Value="Public Property SpellingChecked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SpellingChecked { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SpellingChecked : bool with get, set" Usage="Microsoft.Office.Interop.Word.Range.SpellingChecked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>确定是否已对指定区域中的拼写进行检查。</summary>
        <value>To be added.</value>
        <remarks><para>如果在整个指定的区域或文档中检查了拼写，则此属性返回<b>True</b> ; 如果未检查全部或部分区域或文档的拼写，则返回<b>False</b> 。</para>
          <para>若要重新检查的区域或文档中的拼写错误，请 <b>SpellingChecked</b> 属性设置为 <b>False</b> 。</para>
          <para>若要查看区域或文档中是否包含拼写错误，请使用 <see cref="P:Microsoft.Office.Interop.Word.Range.SpellingErrors" /> 属性。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SpellingErrors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ProofreadingErrors SpellingErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ProofreadingErrors SpellingErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.SpellingErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SpellingErrors As ProofreadingErrors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::ProofreadingErrors ^ SpellingErrors { Microsoft::Office::Interop::Word::ProofreadingErrors ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SpellingErrors : Microsoft.Office.Interop.Word.ProofreadingErrors" Usage="Microsoft.Office.Interop.Word.Range.SpellingErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(316)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(316)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ProofreadingErrors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.ProofreadingErrors" /> 集合，该集合代表指定区域中被标识为拼写错误的单词。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public int Start { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Start" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Start" />
      <MemberSignature Language="VB.NET" Value="Public Property Start As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Start { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Start : int with get, set" Usage="Microsoft.Office.Interop.Word.Range.Start" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置范围的起始字符位置。</summary>
        <value>To be added.</value>
        <remarks><para>如果此属性设置为大于该属性的值 <see cref="P:Microsoft.Office.Interop.Word.Range.End" /> ，则<b>End</b>属性将设置为与<b>Start</b>属性相同的值。</para>
          <para>
            <see cref="T:Microsoft.Office.Interop.Word.Selection" />、 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 和 <see cref="T:Microsoft.Office.Interop.Word.Bookmark" /> 对象具有起始字符和结束字符的位置。 故事的开头最近的字符位置引用的起始位置。</para>
          <para>该属性返回起始字符相对于文档开头部分的位置。文本主体部分 (<b>wdMainTextStory</b>) 的起始字符位置为 0（零）。通过设置该属性可以更改选定内容、区域或书签的大小。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="StartOf">
      <MemberSignature Language="C#" Value="public int StartOf (ref object Unit, ref object Extend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 StartOf([in]object&amp; Unit, [in]object&amp; Extend) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.StartOf(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartOf (Optional ByRef Unit As Object, Optional ByRef Extend As Object) As Integer" />
      <MemberSignature Language="F#" Value="abstract member StartOf : obj * obj -&gt; int" Usage="range.StartOf (Unit, Extend)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(107)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Unit" Type="System.Object" RefType="ref" />
        <Parameter Name="Extend" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Unit">可选 <see cref="T:Microsoft.Office.Interop.Word.WdUnits" /> 。 指定的区域或所选内容的起始位置的移动单位。</param>
        <param name="Extend">可选 <see cref="T:Microsoft.Office.Interop.Word.WdMovementType" /> 。</param>
        <summary>移动或扩展至最近的指定的文字单位的开头的指定的区域或所选内容的起始位置。</summary>
        <returns>To be added.</returns>
        <remarks><para>此方法返回一个<b>整数</b>，该整数指示区域或所选内容移动或扩展的字符数。 如果是在文档中向后移动，则该方法返回一个负数。</para>
          <para>如果指定区域或选定内容的开始已经位于指定单位的开始，则该方法不移动或扩展区域或选定内容。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="StoryLength">
      <MemberSignature Language="C#" Value="public int StoryLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StoryLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.StoryLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StoryLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StoryLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.StoryLength : int" Usage="Microsoft.Office.Interop.Word.Range.StoryLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(152)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(152)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回包含指定的区域的文章中的字符数。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoryType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdStoryType StoryType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdStoryType StoryType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.StoryType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StoryType As WdStoryType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdStoryType StoryType { Microsoft::Office::Interop::Word::WdStoryType get(); };" />
      <MemberSignature Language="F#" Value="member this.StoryType : Microsoft.Office.Interop.Word.WdStoryType" Usage="Microsoft.Office.Interop.Word.Range.StoryType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdStoryType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回指定区域的文字部分类型。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public object Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Style" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Style" />
      <MemberSignature Language="VB.NET" Value="Public Property Style As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Style { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Style : obj with get, set" Usage="Microsoft.Office.Interop.Word.Range.Style" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(151)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(151)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(151)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置指定对象的样式。</summary>
        <value>To be added.</value>
        <remarks><para>若要设置该属性，请指定样式的本地名称、一个整数、一个 <see cref="T:Microsoft.Office.Interop.Word.WdBuiltinStyle" /> 常量或一个代表样式的对象。</para>
          <para>如果返回包含多个样式的范围的样式，则只返回第一个字符样式或段落样式。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Subdocuments">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Subdocuments Subdocuments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Subdocuments Subdocuments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Subdocuments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Subdocuments As Subdocuments" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Subdocuments ^ Subdocuments { Microsoft::Office::Interop::Word::Subdocuments ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Subdocuments : Microsoft.Office.Interop.Word.Subdocuments" Usage="Microsoft.Office.Interop.Word.Range.Subdocuments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(159)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(159)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Subdocuments</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.Subdocuments" /> 集合，该集合代表指定区域中的所有子文档。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubscribeTo">
      <MemberSignature Language="C#" Value="public void SubscribeTo (string Edition, ref object Format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SubscribeTo([in]string Edition, [in]object&amp; Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.SubscribeTo(System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SubscribeTo (Edition As String, Optional ByRef Format As Object)" />
      <MemberSignature Language="F#" Value="abstract member SubscribeTo : string * obj -&gt; unit" Usage="range.SubscribeTo (Edition, Format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Edition" Type="System.String" />
        <Parameter Name="Format" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Edition">此参数仅适用于 Macintosh 并且不应使用。</param>
        <param name="Format">此参数仅适用于 Macintosh 并且不应使用。</param>
        <summary>保留以供内部使用。此成员仅用于 Macintosh，不应使用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynonymInfo">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.SynonymInfo SynonymInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.SynonymInfo SynonymInfo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.SynonymInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SynonymInfo As SynonymInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::SynonymInfo ^ SynonymInfo { Microsoft::Office::Interop::Word::SynonymInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SynonymInfo : Microsoft.Office.Interop.Word.SynonymInfo" Usage="Microsoft.Office.Interop.Word.Range.SynonymInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(155)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(155)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.SynonymInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.SynonymInfo" /> 对象，该对象包含同义词库中有关指定单词或短语的同义词、反义词或相关单词和表达的信息。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tables">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Tables Tables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Tables Tables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Tables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tables As Tables" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Tables ^ Tables { Microsoft::Office::Interop::Word::Tables ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Tables : Microsoft.Office.Interop.Word.Tables" Usage="Microsoft.Office.Interop.Word.Range.Tables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(50)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(50)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Tables</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.Tables" /> 集合，该集合代表指定区域中的所有表格。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TableStyle">
      <MemberSignature Language="C#" Value="public object TableStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TableStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.TableStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TableStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TableStyle { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TableStyle : obj" Usage="Microsoft.Office.Interop.Word.Range.TableStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(423)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(423)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个<b>Object</b>类型的对象，该对象代表用于设置表格格式的样式。 只读。</summary>
        <value><b>Object</b></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TCSCConverter">
      <MemberSignature Language="C#" Value="public void TCSCConverter (Microsoft.Office.Interop.Word.WdTCSCConverterDirection WdTCSCConverterDirection = Microsoft.Office.Interop.Word.WdTCSCConverterDirection.wdTCSCConverterDirectionAuto, bool CommonTerms = false, bool UseVariants = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TCSCConverter([in]valuetype Microsoft.Office.Interop.Word.WdTCSCConverterDirection WdTCSCConverterDirection, [in]bool CommonTerms, [in]bool UseVariants) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.TCSCConverter(Microsoft.Office.Interop.Word.WdTCSCConverterDirection,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TCSCConverter (Optional WdTCSCConverterDirection As WdTCSCConverterDirection = Microsoft.Office.Interop.Word.WdTCSCConverterDirection.wdTCSCConverterDirectionAuto, Optional CommonTerms As Boolean = false, Optional UseVariants As Boolean = false)" />
      <MemberSignature Language="F#" Value="abstract member TCSCConverter : Microsoft.Office.Interop.Word.WdTCSCConverterDirection * bool * bool -&gt; unit" Usage="range.TCSCConverter (WdTCSCConverterDirection, CommonTerms, UseVariants)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(499)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="WdTCSCConverterDirection" Type="Microsoft.Office.Interop.Word.WdTCSCConverterDirection" />
        <Parameter Name="CommonTerms" Type="System.Boolean" />
        <Parameter Name="UseVariants" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="WdTCSCConverterDirection">可选 <see cref="T:Microsoft.Office.Interop.Word.WdTCSCConverterDirection" /> 。</param>
        <param name="CommonTerms">可选属性，类型为 <b>Boolean</b>。 <b>如此</b>如果 Microsoft Word 将完整地转换常用表达式，而不是逐字符转换。</param>
        <param name="UseVariants">可选属性，类型为 <b>Boolean</b>。 <b>如此</b> 如果 Word 使用台湾、 Hong 香港特别行政区和澳门特别行政区字符变量。 只能从简体中文向繁体中文的转换。</param>
        <summary>将指定区域的文本由繁体中文转换为简体中文，或进行相反转换。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string this { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Text" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="Microsoft.Office.Interop.Word.Range.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置指定区域中的文本。</summary>
        <value>To be added.</value>
        <remarks><para><b>Text</b> 属性返回选定内容或区域的无格式文本。当设置此属性时，将替换该区域或所选内容的文本。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TextRetrievalMode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.TextRetrievalMode TextRetrievalMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.TextRetrievalMode TextRetrievalMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.TextRetrievalMode" />
      <MemberSignature Language="VB.NET" Value="Public Property TextRetrievalMode As TextRetrievalMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::TextRetrievalMode ^ TextRetrievalMode { Microsoft::Office::Interop::Word::TextRetrievalMode ^ get(); void set(Microsoft::Office::Interop::Word::TextRetrievalMode ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TextRetrievalMode : Microsoft.Office.Interop.Word.TextRetrievalMode with get, set" Usage="Microsoft.Office.Interop.Word.Range.TextRetrievalMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(62)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(62)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(62)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.TextRetrievalMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.TextRetrievalMode" /> 对象，该对象控制从指定区域中检索文本的方式。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextVisibleOnScreen">
      <MemberSignature Language="C#" Value="public int TextVisibleOnScreen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextVisibleOnScreen" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.TextVisibleOnScreen" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TextVisibleOnScreen As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TextVisibleOnScreen { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TextVisibleOnScreen : int" Usage="Microsoft.Office.Interop.Word.Range.TextVisibleOnScreen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(507)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(507)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个<b>整数</b>（<b>以 c # 为单位</b>），指示指定区域中的文本是否在屏幕上可见。 只读。</summary>
        <value>To be added.</value>
        <remarks><para>如果区域中的所有文本都可见，则<b>TextVisibleOnScreen</b>属性返回 1; 否则返回 false。如果区域中不显示任何文本，则返回 0; 否则返回 false。如果区域中的某些文本可见，而有些则不可见，则返回-1。 不可见的文本可能是处于折叠状态的文本，例如，折叠的标题中的文本。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TopLevelTables">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Tables TopLevelTables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Tables TopLevelTables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.TopLevelTables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TopLevelTables As Tables" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Tables ^ TopLevelTables { Microsoft::Office::Interop::Word::Tables ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TopLevelTables : Microsoft.Office.Interop.Word.Tables" Usage="Microsoft.Office.Interop.Word.Range.TopLevelTables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(324)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(324)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Tables</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.Tables" /> 集合，该集合代表当前范围最外层嵌套级别的表格。</summary>
        <value>To be added.</value>
        <remarks><para>此方法返回一个集合，该集合仅包含当前区域或所选内容的上下文中最外部嵌套层的表格。 这些表格可能不在整套嵌套表格的最外部嵌套层中。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TwoLinesInOne">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdTwoLinesInOneType TwoLinesInOne { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdTwoLinesInOneType TwoLinesInOne" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.TwoLinesInOne" />
      <MemberSignature Language="VB.NET" Value="Public Property TwoLinesInOne As WdTwoLinesInOneType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdTwoLinesInOneType TwoLinesInOne { Microsoft::Office::Interop::Word::WdTwoLinesInOneType get(); void set(Microsoft::Office::Interop::Word::WdTwoLinesInOneType value); };" />
      <MemberSignature Language="F#" Value="member this.TwoLinesInOne : Microsoft.Office.Interop.Word.WdTwoLinesInOneType with get, set" Usage="Microsoft.Office.Interop.Word.Range.TwoLinesInOne" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(266)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(266)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(266)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdTwoLinesInOneType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置 Microsoft Word 设置在一个两行文本并指定将文本括起来的字符，如果有的话。</summary>
        <value>To be added.</value>
        <remarks><para>将 <b>TwoLinesInOne</b> 属性设置为 <b>wdTwoLinesInOneNoBrackets</b> 设置两行文本中不包含任何字符括起来的文本。将 <b>TwoLinesInOne</b> 属性设置为 <b>wdTwoLinesInOneNone</b> 恢复分两行合并的文本行。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Underline">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdUnderline Underline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdUnderline Underline" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Underline" />
      <MemberSignature Language="VB.NET" Value="Public Property Underline As WdUnderline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdUnderline Underline { Microsoft::Office::Interop::Word::WdUnderline get(); void set(Microsoft::Office::Interop::Word::WdUnderline value); };" />
      <MemberSignature Language="F#" Value="member this.Underline : Microsoft.Office.Interop.Word.WdUnderline with get, set" Usage="Microsoft.Office.Interop.Word.Range.Underline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdUnderline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置应用于区域的下划线的类型。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Updates">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.CoAuthUpdates Updates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.CoAuthUpdates Updates" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Updates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Updates As CoAuthUpdates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::CoAuthUpdates ^ Updates { Microsoft::Office::Interop::Word::CoAuthUpdates ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Updates : Microsoft.Office.Interop.Word.CoAuthUpdates" Usage="Microsoft.Office.Interop.Word.Range.Updates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(505)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(505)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.CoAuthUpdates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.CoAuthUpdates" /> 集合对象，该对象表示范围中的所有可用更新。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.CoAuthUpdates" /> 集合对象，该对象表示范围中的所有可用更新。</value>
        <remarks><para>只读。 使用此属性可返回 <see cref="T:Microsoft.Office.Interop.Word.CoAuthUpdates" /> 集合。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WholeStory">
      <MemberSignature Language="C#" Value="public void WholeStory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WholeStory() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.WholeStory" />
      <MemberSignature Language="VB.NET" Value="Public Sub WholeStory ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WholeStory();" />
      <MemberSignature Language="F#" Value="abstract member WholeStory : unit -&gt; unit" Usage="range.WholeStory " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(128)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>扩展某一范围使其包含整个文章。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WordOpenXML">
      <MemberSignature Language="C#" Value="public string WordOpenXML { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WordOpenXML" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.WordOpenXML" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WordOpenXML As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WordOpenXML { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WordOpenXML : string" Usage="Microsoft.Office.Interop.Word.Range.WordOpenXML" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(426)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(426)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个<b>字符串</b>，表示包含在 Microsoft Office WORD Open xml 格式的范围内的 xml。 只读。</summary>
        <value><b>String</b></value>
        <remarks><para>此属性只返回文档中为表示指定区域所需的 XML。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Words">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Words Words { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Words Words" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Words" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Words As Words" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Words ^ Words { Microsoft::Office::Interop::Word::Words ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Words : Microsoft.Office.Interop.Word.Words" Usage="Microsoft.Office.Interop.Word.Range.Words" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(51)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(51)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Words</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.Words" /> 集合，该集合代表区域中的所有单词。</summary>
        <value>To be added.</value>
        <remarks><para><b>Words</b> 集合中包含的文档中的标点符号和段落标记。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="XML">
      <MemberSignature Language="C#" Value="public string XML[bool DataOnly = false] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XML(bool)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.XML(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XML(Optional DataOnly As Boolean = false) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XML[bool] { System::String ^ get(bool DataOnly); };" />
      <MemberSignature Language="F#" Value="member this.XML(bool) : string" Usage="Microsoft.Office.Interop.Word.Range.XML" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(344)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(344)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DataOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="DataOnly">可选属性，类型为 <b>Boolean</b>。 <b>True</b> 将返回而不使用 Word XML 标记的 xml 文本。 默认设置为 <b>False</b> 。</param>
        <summary>返回一个<b>字符串</b>，表示指定对象中的 XML 文本。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XMLNodes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.XMLNodes XMLNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.XMLNodes XMLNodes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.XMLNodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XMLNodes As XMLNodes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::XMLNodes ^ XMLNodes { Microsoft::Office::Interop::Word::XMLNodes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XMLNodes : Microsoft.Office.Interop.Word.XMLNodes" Usage="Microsoft.Office.Interop.Word.Range.XMLNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(340)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(340)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.XMLNodes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>此对象、成员或枚举已被弃用并且不适合在您的代码中使用。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XMLParentNode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.XMLNode XMLParentNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.XMLNode XMLParentNode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.XMLParentNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XMLParentNode As XMLNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::XMLNode ^ XMLParentNode { Microsoft::Office::Interop::Word::XMLNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XMLParentNode : Microsoft.Office.Interop.Word.XMLNode" Usage="Microsoft.Office.Interop.Word.Range.XMLParentNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(341)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(341)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.XMLNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>此对象、成员或枚举已被弃用并且不适合在您的代码中使用。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
