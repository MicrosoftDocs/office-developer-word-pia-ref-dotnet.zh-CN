<Type Name="Shapes" FullName="Microsoft.Office.Interop.Word.Shapes">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e31082ca8ce0c996cdaaa98405514b0b72c43eb4" /><Meta Name="ms.sourcegitcommit" Value="655244c9d9a99d41d118f4fa57b5d74d46c410d7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/03/2020" /><Meta Name="ms.locfileid" Value="43924520" /></Metadata><TypeSignature Language="C#" Value="public interface Shapes : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Shapes implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Word.Shapes" />
  <TypeSignature Language="VB.NET" Value="Public Interface Shapes&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Shapes : System::Collections::IEnumerable" />
  <TypeSignature Language="F#" Value="type Shapes = interface&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002099F-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>对象的集合 <see cref="T:Microsoft.Office.Interop.Word.Shape" /> ，这些对象代表文档中的所有形状或文档中所有页眉和页脚中的所有形状。</summary>
    <remarks><para>每个 <b>Shape</b> 对象代表对象在绘图层中，如自选图形、 任意多边形、 OLE 对象或图片。</para>
      <para>
        <b>注释</b> 如果要处理文档中的一部分形状（例如，只对文档中的自选图形或只对选定的形状执行某些操作），则必须构造一个 <see cref="T:Microsoft.Office.Interop.Word.ShapeRange" /> 包含要使用的形状的集合。</para>
      <para>使用 <see cref="P:Microsoft.Office.Interop.Word._Document.Shapes" /> 属性返回<b>Shapes</b>集合。</para>
      <para>
        <b>注释</b> 如果要同时对文档中的所有形状执行某些操作（如删除或设置属性），请使用 <see cref="M:Microsoft.Office.Interop.Word.Shapes.Range(System.Object@)" /> 方法创建一个<b>ShapeRange</b>对象，该对象包含<b>shapes</b>集合中的所有形状，然后对<b>ShapeRange</b>对象应用相应的属性或方法。</para>
      <para>使用<b>Shapes</b>集合的下列方法之一：、、、、、、、、 <see cref="M:Microsoft.Office.Interop.Word.Shapes.AddCallout(Microsoft.Office.Core.MsoCalloutType,System.Single,System.Single,System.Single,System.Single,System.Object@)" /> <see cref="M:Microsoft.Office.Interop.Word.Shapes.AddCurve(System.Object@,System.Object@)" /> 或。 <see cref="M:Microsoft.Office.Interop.Word.Shapes.AddLabel(Microsoft.Office.Core.MsoTextOrientation,System.Single,System.Single,System.Single,System.Single,System.Object@)" /> <see cref="M:Microsoft.Office.Interop.Word.Shapes.AddLine(System.Single,System.Single,System.Single,System.Single,System.Object@)" /> <see cref="M:Microsoft.Office.Interop.Word.Shapes.AddOLEControl(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" /> <see cref="M:Microsoft.Office.Interop.Word.Shapes.AddOLEObject(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" /> <see cref="M:Microsoft.Office.Interop.Word.Shapes.AddPolyline(System.Object@,System.Object@)" /> <see cref="M:Microsoft.Office.Interop.Word.Shapes.AddShape(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Object@)" /> <see cref="M:Microsoft.Office.Interop.Word.Shapes.AddTextbox(Microsoft.Office.Core.MsoTextOrientation,System.Single,System.Single,System.Single,System.Single,System.Object@)" /> <see cref="M:Microsoft.Office.Interop.Word.Shapes.AddTextEffect(Microsoft.Office.Core.MsoPresetTextEffect,System.String,System.String,System.Single,Microsoft.Office.Core.MsoTriState,Microsoft.Office.Core.MsoTriState,System.Single,System.Single,System.Object@)" /> <see cref="M:Microsoft.Office.Interop.Word.Shapes.BuildFreeform(Microsoft.Office.Core.MsoEditingType,System.Single,System.Single)" /> 若要将形状添加到文档中，并返回一个<b>shape</b>对象，该对象表示新创建的形状。</para>
      <para>使用<b>Shapes</b>（ <paramref name="index" /> ），其中 <paramref name="index" /> 是名称或索引号，返回单个<b>Shape</b>对象。</para>
      <para>每个形状创建时分配一个默认名称。 例如，如果向文档中添加了三个不同的形状，它们可能会被命名为"矩形 2、"文本框 3"和"椭圆 4。 若要为形状指定更有意义的名称，请设置 <see cref="P:Microsoft.Office.Interop.Word.Shape.Name" /> 属性。</para>
      <para>Shapes 集合不包含 <see cref="T:Microsoft.Office.Interop.Word.InlineShape" /> 对象。 <b>InlineShape</b> 对象被视为字符，并作为字符置于文本行中。 <b>Shape</b> 对象锁定到某一文本范围，但可以自由浮动，并且可以放置在页面上的任何位置。 您可以使用 <see cref="M:Microsoft.Office.Interop.Word.Shape.ConvertToInlineShape" /> 方法和 <see cref="M:Microsoft.Office.Interop.Word.FreeformBuilder.ConvertToShape(System.Object@)" /> 方法将形状从一种类型转换为另一种类型。 您可以将图片、 OLE 对象和 ActiveX 控件转换为嵌入式图形。</para>
      <para><see cref="P:Microsoft.Office.Interop.Word.Shapes.Count" />在文档中，此集合的属性返回的只是正文中的项目数。 若要对所有页眉和页脚中的形状进行计数，请将<b>shapes</b>集合与任何对象一起使用 <see cref="T:Microsoft.Office.Interop.Word.HeaderFooter" /> 。</para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="AddCallout">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape AddCallout (Microsoft.Office.Core.MsoCalloutType Type, float Left, float Top, float Width, float Height, ref object Anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Shape AddCallout([in]valuetype Microsoft.Office.Core.MsoCalloutType Type, [in]float32 Left, [in]float32 Top, [in]float32 Width, [in]float32 Height, [in]object&amp; Anchor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.AddCallout(Microsoft.Office.Core.MsoCalloutType,System.Single,System.Single,System.Single,System.Single,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddCallout (Type As MsoCalloutType, Left As Single, Top As Single, Width As Single, Height As Single, Optional ByRef Anchor As Object) As Shape" />
      <MemberSignature Language="F#" Value="abstract member AddCallout : Microsoft.Office.Core.MsoCalloutType * single * single * single * single * obj -&gt; Microsoft.Office.Interop.Word.Shape" Usage="shapes.AddCallout (Type, Left, Top, Width, Height, Anchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Core.MsoCalloutType" />
        <Parameter Name="Left" Type="System.Single" />
        <Parameter Name="Top" Type="System.Single" />
        <Parameter Name="Width" Type="System.Single" />
        <Parameter Name="Height" Type="System.Single" />
        <Parameter Name="Anchor" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Type">必需 <see cref="T:Microsoft.Office.Core.MsoCalloutType" /> 。 标注的类型。<b>MsoCalloutType</b>可为以下常量之一。 <b>msoCalloutOne</b> –沿标注框的左边缘沿标注线直接向下放置。 <b>msoCalloutTwo</b> –将标注线沿对角线方向朝下和远离标注框的左边缘。 <b>msoCalloutThree</b> –将标注线直接向下，然后沿对角线从标注框的左边缘消失。 <b>msocalloutfour 类型</b>–沿标注文本框的左边缘放置标注线。 <b>msoCalloutMixed</b> –指示一个区域或所选内容中存在多个<b>MsoCalloutType</b>的返回值。</param>
        <param name="Left">必需<b>Single</b>。 标注边框左边缘的位置（以磅为单位）。</param>
        <param name="Top">必需<b>Single</b>。 标注边框上边缘的位置（以磅为单位）。</param>
        <param name="Width">必需<b>Single</b>。 标注边框的宽度（以磅为单位）。</param>
        <param name="Height">必需<b>Single</b>。 标注边框的高度（以磅为单位）。</param>
        <param name="Anchor">可选<b>对象</b>。 一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，表示标注绑定到的文本。 如果 <paramref name="Anchor" /> 指定，则锁定标记位于锁定区域中第一段的开头。 如果省略此参数，则自动选定锁定区域，而标注相对于页面的上边缘和左边缘进行定位。</param>
        <summary>向文档中添加无边框的线形标注。 返回一个 <see cref="T:Microsoft.Office.Interop.Word.Shape" /> 对象，该对象表示标注并将其添加到 <see cref="T:Microsoft.Office.Interop.Word.Shapes" /> 集合中。</summary>
        <returns>To be added.</returns>
        <remarks><para>您可以使用方法插入更多的注解，如球标和云彩 <see cref="M:Microsoft.Office.Interop.Word.Shapes.AddShape(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Object@)" /> 。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCanvas">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape AddCanvas (float Left, float Top, float Width, float Height, ref object Anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Shape AddCanvas([in]float32 Left, [in]float32 Top, [in]float32 Width, [in]float32 Height, [in]object&amp; Anchor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.AddCanvas(System.Single,System.Single,System.Single,System.Single,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddCanvas (Left As Single, Top As Single, Width As Single, Height As Single, Optional ByRef Anchor As Object) As Shape" />
      <MemberSignature Language="F#" Value="abstract member AddCanvas : single * single * single * single * obj -&gt; Microsoft.Office.Interop.Word.Shape" Usage="shapes.AddCanvas (Left, Top, Width, Height, Anchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(25)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Single" />
        <Parameter Name="Top" Type="System.Single" />
        <Parameter Name="Width" Type="System.Single" />
        <Parameter Name="Height" Type="System.Single" />
        <Parameter Name="Anchor" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Left">必需<b>Single</b>。 画布左侧边缘相对于锁定标记的位置，以磅为单位。</param>
        <param name="Top">必需<b>Single</b>。 画布上部边缘相对于锁定标记的位置，以磅为单位。</param>
        <param name="Width">必需<b>Single</b>。 画布的宽度，以磅为单位。</param>
        <param name="Height">必需<b>Single</b>。 画布的高度，以磅为单位。</param>
        <param name="Anchor">可选<b>对象</b>。 一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，表示画布绑定到的文本。 如果 <paramref name="Anchor" /> 指定，则锁定标记位于锁定区域中第一段的开头。 如果省略该参数，将自动选定锁定区域，而画布将相对于页面的上边缘和左边缘进行定位。</param>
        <summary>在文档中添加绘图画布。 返回一个 <see cref="T:Microsoft.Office.Interop.Word.Shape" /> 对象，该对象代表绘图画布并将其添加到 <see cref="T:Microsoft.Office.Interop.Word.Shapes" /> 集合中。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddChart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape AddChart (Microsoft.Office.Core.XlChartType Type = (Microsoft.Office.Core.XlChartType) -1, ref object Left, ref object Top, ref object Width, ref object Height, ref object Anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Shape AddChart([in]valuetype Microsoft.Office.Core.XlChartType Type, [in]object&amp; Left, [in]object&amp; Top, [in]object&amp; Width, [in]object&amp; Height, [in]object&amp; Anchor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.AddChart(Microsoft.Office.Core.XlChartType,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddChart (Optional Type As XlChartType = (Microsoft.Office.Core.XlChartType) -1, Optional ByRef Left As Object, Optional ByRef Top As Object, Optional ByRef Width As Object, Optional ByRef Height As Object, Optional ByRef Anchor As Object) As Shape" />
      <MemberSignature Language="F#" Value="abstract member AddChart : Microsoft.Office.Core.XlChartType * obj * obj * obj * obj * obj -&gt; Microsoft.Office.Interop.Word.Shape" Usage="shapes.AddChart (Type, Left, Top, Width, Height, Anchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Core.XlChartType" />
        <Parameter Name="Left" Type="System.Object" RefType="ref" />
        <Parameter Name="Top" Type="System.Object" RefType="ref" />
        <Parameter Name="Width" Type="System.Object" RefType="ref" />
        <Parameter Name="Height" Type="System.Object" RefType="ref" />
        <Parameter Name="Anchor" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Type">To be added.</param>
        <param name="Left">To be added.</param>
        <param name="Top">To be added.</param>
        <param name="Width">To be added.</param>
        <param name="Height">To be added.</param>
        <param name="Anchor">To be added.</param>
        <summary>此对象、成员或枚举已被弃用并且不适合在您的代码中使用。</summary>
        <returns><see cref="T:Microsoft.Office.Interop.Word.Shape" /></returns>
        <remarks>To be added.</remarks>
        <example><para>创建一个新的三维柱形图，然后将其添加到活动文档中。</para></example>
      </Docs>
    </Member>
    <Member MemberName="AddChart2">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape AddChart2 (int Style = -1, Microsoft.Office.Core.XlChartType Type = (Microsoft.Office.Core.XlChartType) -1, ref object Left, ref object Top, ref object Width, ref object Height, ref object Anchor, ref object NewLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Shape AddChart2([in]int32 Style, [in]valuetype Microsoft.Office.Core.XlChartType Type, [in]object&amp; Left, [in]object&amp; Top, [in]object&amp; Width, [in]object&amp; Height, [in]object&amp; Anchor, [in]object&amp; NewLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.AddChart2(System.Int32,Microsoft.Office.Core.XlChartType,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddChart2 (Optional Style As Integer = -1, Optional Type As XlChartType = (Microsoft.Office.Core.XlChartType) -1, Optional ByRef Left As Object, Optional ByRef Top As Object, Optional ByRef Width As Object, Optional ByRef Height As Object, Optional ByRef Anchor As Object, Optional ByRef NewLayout As Object) As Shape" />
      <MemberSignature Language="F#" Value="abstract member AddChart2 : int * Microsoft.Office.Core.XlChartType * obj * obj * obj * obj * obj * obj -&gt; Microsoft.Office.Interop.Word.Shape" Usage="shapes.AddChart2 (Style, Type, Left, Top, Width, Height, Anchor, NewLayout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(105)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Style" Type="System.Int32" />
        <Parameter Name="Type" Type="Microsoft.Office.Core.XlChartType" />
        <Parameter Name="Left" Type="System.Object" RefType="ref" />
        <Parameter Name="Top" Type="System.Object" RefType="ref" />
        <Parameter Name="Width" Type="System.Object" RefType="ref" />
        <Parameter Name="Height" Type="System.Object" RefType="ref" />
        <Parameter Name="Anchor" Type="System.Object" RefType="ref" />
        <Parameter Name="NewLayout" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Style">图表样式。</param>
        <param name="Type">图表类型。</param>
        <param name="Left">图表左边缘距离定位点的以磅为单位的位置。</param>
        <param name="Top">图表上边缘距离定位点的以磅为单位的位置。</param>
        <param name="Width">以磅为单位的图表宽度。</param>
        <param name="Height">以磅为单位的图表高度。</param>
        <param name="Anchor">如果 <paramref name="NewLayout" /> 为 true，将使用新的动态格式规则插入图表（标题为打开，并且图例仅在有多个系列时才打开）。</param>
        <param name="NewLayout">如果 <paramref name="NewLayout" /> 为 true，则使用新的动态格式规则插入图表（标题为打开，并且图例仅在有多个系列时才打开）。</param>
        <summary>向文档添加图表。 返回一个 <see cref="T:Microsoft.Office.Interop.Word.Shape" /> 对象，该对象表示一个图表并将其添加到指定的集合。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddConnector">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape AddConnector (Microsoft.Office.Core.MsoConnectorType Type, float BeginX, float BeginY, float EndX, float EndY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Shape AddConnector([in]valuetype Microsoft.Office.Core.MsoConnectorType Type, [in]float32 BeginX, [in]float32 BeginY, [in]float32 EndX, [in]float32 EndY) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.AddConnector(Microsoft.Office.Core.MsoConnectorType,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddConnector (Type As MsoConnectorType, BeginX As Single, BeginY As Single, EndX As Single, EndY As Single) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Word::Shape ^ AddConnector(Microsoft::Office::Core::MsoConnectorType Type, float BeginX, float BeginY, float EndX, float EndY);" />
      <MemberSignature Language="F#" Value="abstract member AddConnector : Microsoft.Office.Core.MsoConnectorType * single * single * single * single -&gt; Microsoft.Office.Interop.Word.Shape" Usage="shapes.AddConnector (Type, BeginX, BeginY, EndX, EndY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(11)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Core.MsoConnectorType" />
        <Parameter Name="BeginX" Type="System.Single" />
        <Parameter Name="BeginY" Type="System.Single" />
        <Parameter Name="EndX" Type="System.Single" />
        <Parameter Name="EndY" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Type">To be added.</param>
        <param name="BeginX">To be added.</param>
        <param name="BeginY">To be added.</param>
        <param name="EndX">To be added.</param>
        <param name="EndY">To be added.</param>
        <summary>仅供内部使用。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape AddCurve (ref object SafeArrayOfPoints, ref object Anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Shape AddCurve([in]object&amp; SafeArrayOfPoints, [in]object&amp; Anchor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.AddCurve(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddCurve (ByRef SafeArrayOfPoints As Object, Optional ByRef Anchor As Object) As Shape" />
      <MemberSignature Language="F#" Value="abstract member AddCurve : obj * obj -&gt; Microsoft.Office.Interop.Word.Shape" Usage="shapes.AddCurve (SafeArrayOfPoints, Anchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(12)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SafeArrayOfPoints" Type="System.Object" RefType="ref" />
        <Parameter Name="Anchor" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="SafeArrayOfPoints">必需的<b>对象</b>。 由指定曲线的顶点和控制点的坐标对组成的数组。 首先指定起点，然后指定两个第一段贝塞尔曲线的控制点。 该曲线每增加一条线段，就要为其指定一个顶点和两个控制点。 最后指定该曲线的终点。 请注意，必须指定的点数始终为 3n + 1，其中 n 为曲线的线段个数。</param>
        <param name="Anchor">可选<b>对象</b>。 一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，表示该曲线绑定到的文本。 如果 <paramref name="Anchor" /> 指定，则锁定标记位于锁定区域中第一段的开头。 如果省略此参数，则自动选定锁定区域，而该曲线相对于页面的上边缘和左边缘进行定位。</param>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.Shape" /> 对象，表示文档中的贝赛尔曲线。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDiagram">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape AddDiagram (Microsoft.Office.Core.MsoDiagramType Type, float Left, float Top, float Width, float Height, ref object Anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Shape AddDiagram([in]valuetype Microsoft.Office.Core.MsoDiagramType Type, [in]float32 Left, [in]float32 Top, [in]float32 Width, [in]float32 Height, [in]object&amp; Anchor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.AddDiagram(Microsoft.Office.Core.MsoDiagramType,System.Single,System.Single,System.Single,System.Single,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddDiagram (Type As MsoDiagramType, Left As Single, Top As Single, Width As Single, Height As Single, Optional ByRef Anchor As Object) As Shape" />
      <MemberSignature Language="F#" Value="abstract member AddDiagram : Microsoft.Office.Core.MsoDiagramType * single * single * single * single * obj -&gt; Microsoft.Office.Interop.Word.Shape" Usage="shapes.AddDiagram (Type, Left, Top, Width, Height, Anchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(23)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Core.MsoDiagramType" />
        <Parameter Name="Left" Type="System.Single" />
        <Parameter Name="Top" Type="System.Single" />
        <Parameter Name="Width" Type="System.Single" />
        <Parameter Name="Height" Type="System.Single" />
        <Parameter Name="Anchor" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Type">必需 <see cref="T:Microsoft.Office.Core.MsoDiagramType" /> 。<b>MsoDiagramType</b>可为以下常量之一。 <b>msoDiagramCycle</b> –显示一个持续循环的过程。 <b>msoDiagramMixed</b> –不用于此方法。 <b>msoDiagramOrgChart</b> –显示层次结构关系。 <b>msoDiagramPyramid</b> –显示基于基础的关系。 <b>msoDiagramRadial</b> –显示 core 元素的关系。 <b>msoDiagramTarget</b> –向目标显示步骤。 <b>msoDiagramVenn</b> –显示元素之间的重叠区域。</param>
        <param name="Left">必需<b>Single</b>。 图表的边界框左边缘相对于锁定标记的位置（以磅为单位）。</param>
        <param name="Top">必需<b>Single</b>。 图表的边界框的上边缘相对于锁定标记的位置（以磅为单位）。</param>
        <param name="Width">必需<b>Single</b>。 图表边界框的宽度（以磅为单位）。</param>
        <param name="Height">必需<b>Single</b>。 图的边界框的高度（以磅为单位）。</param>
        <param name="Anchor">可选<b>对象</b>。 一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，表示图表绑定到的文本。 如果 <paramref name="Anchor" /> 指定，则锁定标记位于锁定区域中第一段的开头。 如果省略此参数，则自动选定锁定区域，图表相对于页面的上边缘和左边缘定位。</param>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.Shape" /> 对象，表示文档中新创建的图表。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLabel">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape AddLabel (Microsoft.Office.Core.MsoTextOrientation Orientation, float Left, float Top, float Width, float Height, ref object Anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Shape AddLabel([in]valuetype Microsoft.Office.Core.MsoTextOrientation Orientation, [in]float32 Left, [in]float32 Top, [in]float32 Width, [in]float32 Height, [in]object&amp; Anchor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.AddLabel(Microsoft.Office.Core.MsoTextOrientation,System.Single,System.Single,System.Single,System.Single,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddLabel (Orientation As MsoTextOrientation, Left As Single, Top As Single, Width As Single, Height As Single, Optional ByRef Anchor As Object) As Shape" />
      <MemberSignature Language="F#" Value="abstract member AddLabel : Microsoft.Office.Core.MsoTextOrientation * single * single * single * single * obj -&gt; Microsoft.Office.Interop.Word.Shape" Usage="shapes.AddLabel (Orientation, Left, Top, Width, Height, Anchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(13)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Orientation" Type="Microsoft.Office.Core.MsoTextOrientation" />
        <Parameter Name="Left" Type="System.Single" />
        <Parameter Name="Top" Type="System.Single" />
        <Parameter Name="Width" Type="System.Single" />
        <Parameter Name="Height" Type="System.Single" />
        <Parameter Name="Anchor" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Orientation">必需 <see cref="T:Microsoft.Office.Core.MsoTextOrientation" /> 。 文本的方向。<b>MsoTextOrientation</b>可以是下列常量之一： <b>msoTextOrientationDownward </b> <b>msoTextOrientationHorizontal </b> <b>msoTextOrientationHorizontalRotatedFarEast </b> <b>msoTextOrientationMixed </b> <b>msoTextOrientationUpward </b> <b>msoTextOrientationVertical </b> <b>msoTextOrientationVerticalFarEast</b>其中一些常量可能不可用，具体取决于您选择或安装的语言支持（例如，美国英语）。</param>
        <param name="Left">必需<b>Single</b>。 标签左边缘相对于锁定标记的位置（以磅为单位）。</param>
        <param name="Top">必需<b>Single</b>。 标签上边缘相对于锁定标记的位置（以磅为单位）。</param>
        <param name="Width">必需<b>Single</b>。 标签的宽度（以磅为单位）。</param>
        <param name="Height">必需<b>Single</b>。 标签的高度（以磅为单位）。</param>
        <param name="Anchor">可选<b>对象</b>。 一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，表示标签绑定到的文本。 如果 <paramref name="Anchor" /> 指定，则锁定标记位于锁定区域中第一段的开头。 如果省略此参数，则自动选定锁定区域，且标签相对于页面的上边缘和左边缘定位。</param>
        <summary>向文档中添加文本标签。 返回一个 <see cref="T:Microsoft.Office.Interop.Word.Shape" /> 对象，表示该文本标签并将其添加到 <see cref="T:Microsoft.Office.Interop.Word.Shapes" /> 集合中。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape AddLine (float BeginX, float BeginY, float EndX, float EndY, ref object Anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Shape AddLine([in]float32 BeginX, [in]float32 BeginY, [in]float32 EndX, [in]float32 EndY, [in]object&amp; Anchor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.AddLine(System.Single,System.Single,System.Single,System.Single,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddLine (BeginX As Single, BeginY As Single, EndX As Single, EndY As Single, Optional ByRef Anchor As Object) As Shape" />
      <MemberSignature Language="F#" Value="abstract member AddLine : single * single * single * single * obj -&gt; Microsoft.Office.Interop.Word.Shape" Usage="shapes.AddLine (BeginX, BeginY, EndX, EndY, Anchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(14)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="BeginX" Type="System.Single" />
        <Parameter Name="BeginY" Type="System.Single" />
        <Parameter Name="EndX" Type="System.Single" />
        <Parameter Name="EndY" Type="System.Single" />
        <Parameter Name="Anchor" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="BeginX">必需<b>Single</b>。 直线起点相对于锚点的水平位置（以磅为单位）。</param>
        <param name="BeginY">必需<b>Single</b>。 直线起点相对于锚点的垂直位置（以磅为单位）。</param>
        <param name="EndX">必需<b>Single</b>。 直线终点相对于锁定标记的水平位置（以磅为单位）。</param>
        <param name="EndY">必需<b>Single</b>。 直线终点相对于锁定标记的垂直位置（以磅为单位）。</param>
        <param name="Anchor">可选<b>对象</b>。 一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，表示标签绑定到的文本。 如果 <paramref name="Anchor" /> 指定，则锁定标记位于锁定区域中第一段的开头。 如果省略此参数，则自动选定锁定区域，且标签相对于页面的上边缘和左边缘定位。</param>
        <summary>向文档中添加一条线。 返回一个 <see cref="T:Microsoft.Office.Interop.Word.Shape" /> 代表该行并将其添加到集合中的对象 <see cref="M:Microsoft.Office.Interop.Word.Shapes.AddCallout(Microsoft.Office.Core.MsoCalloutType,System.Single,System.Single,System.Single,System.Single,System.Object@)" /> 。</summary>
        <returns>To be added.</returns>
        <remarks><para>若要创建箭头，请使用 <see cref="P:Microsoft.Office.Interop.Word.Shape.Line" /> 属性设置线条格式。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOLEControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape AddOLEControl (ref object ClassType, ref object Left, ref object Top, ref object Width, ref object Height, ref object Anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Shape AddOLEControl([in]object&amp; ClassType, [in]object&amp; Left, [in]object&amp; Top, [in]object&amp; Width, [in]object&amp; Height, [in]object&amp; Anchor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.AddOLEControl(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOLEControl (Optional ByRef ClassType As Object, Optional ByRef Left As Object, Optional ByRef Top As Object, Optional ByRef Width As Object, Optional ByRef Height As Object, Optional ByRef Anchor As Object) As Shape" />
      <MemberSignature Language="F#" Value="abstract member AddOLEControl : obj * obj * obj * obj * obj * obj -&gt; Microsoft.Office.Interop.Word.Shape" Usage="shapes.AddOLEControl (ClassType, Left, Top, Width, Height, Anchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ClassType" Type="System.Object" RefType="ref" />
        <Parameter Name="Left" Type="System.Object" RefType="ref" />
        <Parameter Name="Top" Type="System.Object" RefType="ref" />
        <Parameter Name="Width" Type="System.Object" RefType="ref" />
        <Parameter Name="Height" Type="System.Object" RefType="ref" />
        <Parameter Name="Anchor" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ClassType">可选<b>对象</b>。 用于要创建的 ActiveX 控件的编程标识符。</param>
        <param name="Left">可选<b>对象</b>。 新对象的左边缘相对于锁定标记的位置（以磅为单位）。</param>
        <param name="Top">可选<b>对象</b>。 新对象的上边缘相对于锁定标记的位置（以磅为单位）。</param>
        <param name="Width">可选<b>对象</b>。 ActiveX 控件的宽度（以磅为单位）。</param>
        <param name="Height">可选<b>对象</b>。ActiveX 控件的高度（以磅为单位）。</param>
        <param name="Anchor">可选<b>对象</b>。 ActiveX 控件绑定到的区域。 如果 <paramref name="Anchor" /> 指定，则锁定标记位于锁定区域中第一段的开头。 但如果省略此参数，则自动放置锚点，且相对于页面的上边缘和左边缘定位 ActiveX 控件。</param>
        <summary>创建一个 ActiveX 控件（以前称为 OLE 控件）。 返回 <see cref="T:Microsoft.Office.Interop.Word.Shape" /> 表示新的 ActiveX 控件的对象。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOLEObject">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape AddOLEObject (ref object ClassType, ref object FileName, ref object LinkToFile, ref object DisplayAsIcon, ref object IconFileName, ref object IconIndex, ref object IconLabel, ref object Left, ref object Top, ref object Width, ref object Height, ref object Anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Shape AddOLEObject([in]object&amp; ClassType, [in]object&amp; FileName, [in]object&amp; LinkToFile, [in]object&amp; DisplayAsIcon, [in]object&amp; IconFileName, [in]object&amp; IconIndex, [in]object&amp; IconLabel, [in]object&amp; Left, [in]object&amp; Top, [in]object&amp; Width, [in]object&amp; Height, [in]object&amp; Anchor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.AddOLEObject(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOLEObject (Optional ByRef ClassType As Object, Optional ByRef FileName As Object, Optional ByRef LinkToFile As Object, Optional ByRef DisplayAsIcon As Object, Optional ByRef IconFileName As Object, Optional ByRef IconIndex As Object, Optional ByRef IconLabel As Object, Optional ByRef Left As Object, Optional ByRef Top As Object, Optional ByRef Width As Object, Optional ByRef Height As Object, Optional ByRef Anchor As Object) As Shape" />
      <MemberSignature Language="F#" Value="abstract member AddOLEObject : obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj -&gt; Microsoft.Office.Interop.Word.Shape" Usage="shapes.AddOLEObject (ClassType, FileName, LinkToFile, DisplayAsIcon, IconFileName, IconIndex, IconLabel, Left, Top, Width, Height, Anchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ClassType" Type="System.Object" RefType="ref" />
        <Parameter Name="FileName" Type="System.Object" RefType="ref" />
        <Parameter Name="LinkToFile" Type="System.Object" RefType="ref" />
        <Parameter Name="DisplayAsIcon" Type="System.Object" RefType="ref" />
        <Parameter Name="IconFileName" Type="System.Object" RefType="ref" />
        <Parameter Name="IconIndex" Type="System.Object" RefType="ref" />
        <Parameter Name="IconLabel" Type="System.Object" RefType="ref" />
        <Parameter Name="Left" Type="System.Object" RefType="ref" />
        <Parameter Name="Top" Type="System.Object" RefType="ref" />
        <Parameter Name="Width" Type="System.Object" RefType="ref" />
        <Parameter Name="Height" Type="System.Object" RefType="ref" />
        <Parameter Name="Anchor" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ClassType">可选<b>对象</b>。 用于激活指定 OLE 对象的应用程序的名称。</param>
        <param name="FileName">可选<b>对象</b>。 创建对象所用的文件。 如果省略该参数，则使用当前的文件夹。 必须 <paramref name="ClassType" /> <paramref name="FileName" /> 为对象指定或参数，但不能同时指定这两者。</param>
        <param name="LinkToFile">可选<b>对象</b>。 <b>真</b> 若要将 OLE 对象链接到创建它的文件。 <b>假</b> 以使 OLE 对象成为独立复的文件。 如果为指定的值 <paramref name="ClassType" /> ，则该 <paramref name="LinkToFile" /> 参数必须为<b>False</b>。 默认值为 <b>False</b>。</param>
        <param name="DisplayAsIcon">可选<b>对象</b>。 <b>真</b> 若要将 OLE 对象显示为图标。 默认值为 <b>False</b> 。</param>
        <param name="IconFileName">可选<b>对象</b>。 包含将要显示的图标的文件。</param>
        <param name="IconIndex">可选<b>对象</b>。 中的图标的索引号 <paramref name="IconFileName" /> 。 当选中“显示为图标”复选框时，在指定文件中图标的顺序对应于“插入”菜单“对象”对话框的“更改图标”对话框中图标出现的顺序。 文件中的第一个图标的索引号是 0 (零)。 如果具有给定索引号的图标在中不存在 <paramref name="IconFileName" /> ，则使用索引号为1的图标（文件中的第二个图标）。 默认值为 0 (零)。</param>
        <param name="IconLabel">可选<b>对象</b>。 显示在图标下面的标签（题注）。</param>
        <param name="Left">可选<b>对象</b>。 新对象的左边缘相对于锁定标记的位置（以磅为单位）。</param>
        <param name="Top">可选<b>对象</b>。 新对象的上边缘相对于锁定标记的位置（以磅为单位）。</param>
        <param name="Width">可选<b>对象</b>。 OLE 对象的宽度（以磅为单位）。</param>
        <param name="Height">可选<b>对象</b>。 OLE 对象的高度（以磅为单位）。</param>
        <param name="Anchor">可选<b>对象</b>。 OLE 对象绑定到的区域。 如果 <paramref name="Anchor" /> 指定，则锁定标记位于锁定区域第一段的开头。 如果 <paramref name="Anchor" /> 未指定，则自动放置定位点，并相对于页面的上边缘和左边缘定位 OLE 对象。</param>
        <summary>创建一个 OLE 对象。 返回 <see cref="T:Microsoft.Office.Interop.Word.Shape" /> 代表新 OLE 对象的对象。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPicture">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape AddPicture (string FileName, ref object LinkToFile, ref object SaveWithDocument, ref object Left, ref object Top, ref object Width, ref object Height, ref object Anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Shape AddPicture([in]string FileName, [in]object&amp; LinkToFile, [in]object&amp; SaveWithDocument, [in]object&amp; Left, [in]object&amp; Top, [in]object&amp; Width, [in]object&amp; Height, [in]object&amp; Anchor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.AddPicture(System.String,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddPicture (FileName As String, Optional ByRef LinkToFile As Object, Optional ByRef SaveWithDocument As Object, Optional ByRef Left As Object, Optional ByRef Top As Object, Optional ByRef Width As Object, Optional ByRef Height As Object, Optional ByRef Anchor As Object) As Shape" />
      <MemberSignature Language="F#" Value="abstract member AddPicture : string * obj * obj * obj * obj * obj * obj * obj -&gt; Microsoft.Office.Interop.Word.Shape" Usage="shapes.AddPicture (FileName, LinkToFile, SaveWithDocument, Left, Top, Width, Height, Anchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(15)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileName" Type="System.String" />
        <Parameter Name="LinkToFile" Type="System.Object" RefType="ref" />
        <Parameter Name="SaveWithDocument" Type="System.Object" RefType="ref" />
        <Parameter Name="Left" Type="System.Object" RefType="ref" />
        <Parameter Name="Top" Type="System.Object" RefType="ref" />
        <Parameter Name="Width" Type="System.Object" RefType="ref" />
        <Parameter Name="Height" Type="System.Object" RefType="ref" />
        <Parameter Name="Anchor" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileName">必需的 <b>字符串</b> 。 图片的路径和文件名。</param>
        <param name="LinkToFile">可选<b>对象</b>。 <b>真</b> 要将图片链接到创建它的文件。 <b>False</b> 使图片文件的独立副本。 默认值为 <b>False</b>。</param>
        <param name="SaveWithDocument">可选<b>对象</b>。 <b>真</b> 要随文档一起保存的链接的图片。 默认值为 <b>False</b>。</param>
        <param name="Left">可选<b>对象</b>。 新图片的左边缘相对于锁定标记的位置（以磅为单位）。</param>
        <param name="Top">可选<b>对象</b>。 新图片的上边缘相对于锁定标记的位置（以磅为单位）。</param>
        <param name="Width">可选<b>对象</b>。 图片的宽度，以磅为单位。</param>
        <param name="Height">可选<b>对象</b>。 图片的高度，以磅为单位。</param>
        <param name="Anchor">可选<b>对象</b>。 图片绑定到的区域。 如果 <paramref name="Anchor" /> 指定，则锁定标记位于锁定区域中第一段的开头。 但如果省略此参数，则自动放置锚点，并相对于页面的上边缘和左边缘定位图片。</param>
        <summary>在文档中添加一幅图片。 返回一个 <see cref="T:Microsoft.Office.Interop.Word.Shape" /> 对象，该对象代表图片并将其添加到 <see cref="T:Microsoft.Office.Interop.Word.Shapes" /> 集合中。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPolyline">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape AddPolyline (ref object SafeArrayOfPoints, ref object Anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Shape AddPolyline([in]object&amp; SafeArrayOfPoints, [in]object&amp; Anchor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.AddPolyline(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddPolyline (ByRef SafeArrayOfPoints As Object, Optional ByRef Anchor As Object) As Shape" />
      <MemberSignature Language="F#" Value="abstract member AddPolyline : obj * obj -&gt; Microsoft.Office.Interop.Word.Shape" Usage="shapes.AddPolyline (SafeArrayOfPoints, Anchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SafeArrayOfPoints" Type="System.Object" RefType="ref" />
        <Parameter Name="Anchor" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="SafeArrayOfPoints">必需的<b>对象</b>。 指定连续线段图形的顶点的坐标对数组。</param>
        <param name="Anchor">可选<b>对象</b>。 一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，表示要将折线绑定到的文本。 如果 <paramref name="Anchor" /> 指定，则锁定标记位于锁定区域中第一段的开头。 如果省略此参数，则自动选定锁定区域，而行相对于页面的上边缘和左边缘进行定位。</param>
        <summary>向文档中添加一个开放的或封闭的多边形。 返回一个 <see cref="T:Microsoft.Office.Interop.Word.Shape" /> 对象，该对象表示多边形并将其添加到 <see cref="T:Microsoft.Office.Interop.Word.Shapes" /> 集合中。</summary>
        <returns>To be added.</returns>
        <remarks><para>若要组成一个封闭的多边形，请为连续线段图形的第一个和最后一个顶点指定相同的坐标。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddShape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape AddShape (int Type, float Left, float Top, float Width, float Height, ref object Anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Shape AddShape([in]int32 Type, [in]float32 Left, [in]float32 Top, [in]float32 Width, [in]float32 Height, [in]object&amp; Anchor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.AddShape(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddShape (Type As Integer, Left As Single, Top As Single, Width As Single, Height As Single, Optional ByRef Anchor As Object) As Shape" />
      <MemberSignature Language="F#" Value="abstract member AddShape : int * single * single * single * single * obj -&gt; Microsoft.Office.Interop.Word.Shape" Usage="shapes.AddShape (Type, Left, Top, Width, Height, Anchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(17)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="System.Int32" />
        <Parameter Name="Left" Type="System.Single" />
        <Parameter Name="Top" Type="System.Single" />
        <Parameter Name="Width" Type="System.Single" />
        <Parameter Name="Height" Type="System.Single" />
        <Parameter Name="Anchor" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Type">必需的<b>整数</b>。 要返回的形状类型。 可以是任何 <see cref="T:Microsoft.Office.Core.MsoAutoShapeType" /> 常量。</param>
        <param name="Left">必需<b>Single</b>。 自选图形左边缘的位置（以磅为单位）。</param>
        <param name="Top">必需<b>Single</b>。 自选图形上边缘的位置（以磅为单位）。</param>
        <param name="Width">必需<b>Single</b>。 自选图形的宽度（以磅为单位）。</param>
        <param name="Height">必需<b>Single</b>。 自选图形的高度（以磅为单位）。</param>
        <param name="Anchor">可选<b>对象</b>。 一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，表示要将自选图形绑定到的文本。 如果 <paramref name="Anchor" /> 指定，则锁定标记位于锁定区域中第一段的开头。 如果省略此参数，则自动选定锁定区域，而自选图形相对于页面的上边缘和左边缘定位。</param>
        <summary>向某文档中添加一个自选图形。 返回一个 <see cref="T:Microsoft.Office.Interop.Word.Shape" /> 对象，该对象代表自选图形并将其添加到 <see cref="T:Microsoft.Office.Interop.Word.Shapes" /> 集合中。</summary>
        <returns>To be added.</returns>
        <remarks><para>若要更改已添加的自选图形的类型，请设置 <see cref="P:Microsoft.Office.Interop.Word.Shape.AutoShapeType" /> 属性。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSmartArt">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape AddSmartArt (Microsoft.Office.Core.SmartArtLayout Layout, ref object Left, ref object Top, ref object Width, ref object Height, ref object Anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Shape AddSmartArt([in]class Microsoft.Office.Core.SmartArtLayout Layout, [in]object&amp; Left, [in]object&amp; Top, [in]object&amp; Width, [in]object&amp; Height, [in]object&amp; Anchor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.AddSmartArt(Microsoft.Office.Core.SmartArtLayout,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddSmartArt (Layout As SmartArtLayout, Optional ByRef Left As Object, Optional ByRef Top As Object, Optional ByRef Width As Object, Optional ByRef Height As Object, Optional ByRef Anchor As Object) As Shape" />
      <MemberSignature Language="F#" Value="abstract member AddSmartArt : Microsoft.Office.Core.SmartArtLayout * obj * obj * obj * obj * obj -&gt; Microsoft.Office.Interop.Word.Shape" Usage="shapes.AddSmartArt (Layout, Left, Top, Width, Height, Anchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(28)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Layout" Type="Microsoft.Office.Core.SmartArtLayout" />
        <Parameter Name="Left" Type="System.Object" RefType="ref" />
        <Parameter Name="Top" Type="System.Object" RefType="ref" />
        <Parameter Name="Width" Type="System.Object" RefType="ref" />
        <Parameter Name="Height" Type="System.Object" RefType="ref" />
        <Parameter Name="Anchor" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Layout">一个 <see cref="T:Microsoft.Office.Core.SmartArtLayout" /> 指定 SmartArt 图形的布局的对象。</param>
        <param name="Left">从幻灯片左边缘到 SmartArt 图形左边缘之间的距离（以磅为单位）。</param>
        <param name="Top">从幻灯片上边缘到 SmartArt 图形上边缘之间的距离（以磅为单位）。</param>
        <param name="Width">SmartArt 图形的宽度。</param>
        <param name="Height">SmartArt 图形的高度。</param>
        <param name="Anchor">一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 代表 SmartArt 图形绑定到的文本的对象。 如果指定了 Anchor，锁定标记位于锁定区域第一段的开头。 如果省略此参数，则自动选定锁定区域，而 SmartArt 图形相对于页面的上边缘和左边缘定位。</param>
        <summary>将指定 SmartArt 图形插入活动文档。</summary>
        <returns><see cref="T:Microsoft.Office.Interop.Word.Shape" /> 对象。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTextbox">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape AddTextbox (Microsoft.Office.Core.MsoTextOrientation Orientation, float Left, float Top, float Width, float Height, ref object Anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Shape AddTextbox([in]valuetype Microsoft.Office.Core.MsoTextOrientation Orientation, [in]float32 Left, [in]float32 Top, [in]float32 Width, [in]float32 Height, [in]object&amp; Anchor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.AddTextbox(Microsoft.Office.Core.MsoTextOrientation,System.Single,System.Single,System.Single,System.Single,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddTextbox (Orientation As MsoTextOrientation, Left As Single, Top As Single, Width As Single, Height As Single, Optional ByRef Anchor As Object) As Shape" />
      <MemberSignature Language="F#" Value="abstract member AddTextbox : Microsoft.Office.Core.MsoTextOrientation * single * single * single * single * obj -&gt; Microsoft.Office.Interop.Word.Shape" Usage="shapes.AddTextbox (Orientation, Left, Top, Width, Height, Anchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(19)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Orientation" Type="Microsoft.Office.Core.MsoTextOrientation" />
        <Parameter Name="Left" Type="System.Single" />
        <Parameter Name="Top" Type="System.Single" />
        <Parameter Name="Width" Type="System.Single" />
        <Parameter Name="Height" Type="System.Single" />
        <Parameter Name="Anchor" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Orientation">必需 <see cref="T:Microsoft.Office.Core.MsoTextOrientation" /> 。 文本的方向。 由于选择或安装的语言支持（例如美国英语）不同，有些常量可能无法使用。</param>
        <param name="Left">必需<b>Single</b>。 文本框左边缘的位置（以磅为单位）。</param>
        <param name="Top">必需<b>Single</b>。 文本框上边缘的位置（以磅为单位）。</param>
        <param name="Width">必需<b>Single</b>。 文本框的宽度（以磅为单位）。</param>
        <param name="Height">必需<b>Single</b>。 文本框的高度（以磅为单位）。</param>
        <param name="Anchor">可选<b>对象</b>。 一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 代表文本框绑定到的文本的对象。 如果 <paramref name="Anchor" /> 指定，则锁定标记位于锁定区域中第一段的开头。 如果省略此参数，则自动选定锁定区域，而相对于页面的上边缘和左边缘定位文本框。</param>
        <summary>向文档中添加文本框。 返回一个 <see cref="T:Microsoft.Office.Interop.Word.Shape" /> 对象，该对象表示文本框并将其添加到 <see cref="T:Microsoft.Office.Interop.Word.Shapes" /> 集合中。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTextEffect">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape AddTextEffect (Microsoft.Office.Core.MsoPresetTextEffect PresetTextEffect, string Text, string FontName, float FontSize, Microsoft.Office.Core.MsoTriState FontBold, Microsoft.Office.Core.MsoTriState FontItalic, float Left, float Top, ref object Anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Shape AddTextEffect([in]valuetype Microsoft.Office.Core.MsoPresetTextEffect PresetTextEffect, [in]string Text, [in]string FontName, [in]float32 FontSize, [in]valuetype Microsoft.Office.Core.MsoTriState FontBold, [in]valuetype Microsoft.Office.Core.MsoTriState FontItalic, [in]float32 Left, [in]float32 Top, [in]object&amp; Anchor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.AddTextEffect(Microsoft.Office.Core.MsoPresetTextEffect,System.String,System.String,System.Single,Microsoft.Office.Core.MsoTriState,Microsoft.Office.Core.MsoTriState,System.Single,System.Single,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddTextEffect (PresetTextEffect As MsoPresetTextEffect, Text As String, FontName As String, FontSize As Single, FontBold As MsoTriState, FontItalic As MsoTriState, Left As Single, Top As Single, Optional ByRef Anchor As Object) As Shape" />
      <MemberSignature Language="F#" Value="abstract member AddTextEffect : Microsoft.Office.Core.MsoPresetTextEffect * string * string * single * Microsoft.Office.Core.MsoTriState * Microsoft.Office.Core.MsoTriState * single * single * obj -&gt; Microsoft.Office.Interop.Word.Shape" Usage="shapes.AddTextEffect (PresetTextEffect, Text, FontName, FontSize, FontBold, FontItalic, Left, Top, Anchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(18)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PresetTextEffect" Type="Microsoft.Office.Core.MsoPresetTextEffect" />
        <Parameter Name="Text" Type="System.String" />
        <Parameter Name="FontName" Type="System.String" />
        <Parameter Name="FontSize" Type="System.Single" />
        <Parameter Name="FontBold" Type="Microsoft.Office.Core.MsoTriState" />
        <Parameter Name="FontItalic" Type="Microsoft.Office.Core.MsoTriState" />
        <Parameter Name="Left" Type="System.Single" />
        <Parameter Name="Top" Type="System.Single" />
        <Parameter Name="Anchor" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="PresetTextEffect">必需 <see cref="T:Microsoft.Office.Core.MsoPresetTextEffect" /> 。 预设的文本效果。 <b>可读</b> 常数的值对应于 艺术字库对话框 (从左到右，从上到下编号) 中列出的格式。</param>
        <param name="Text">必需的 <b>字符串</b> 。 艺术字中的文字。</param>
        <param name="FontName">必需的 <b>字符串</b> 。 艺术字中所用字体的名称。</param>
        <param name="FontSize">必需<b>Single</b>。 艺术字中使用的字体的大小（以磅为单位）。</param>
        <param name="FontBold">必需 <see cref="T:Microsoft.Office.Core.MsoTriState" /> 。 <b>属性值为 MsoTrue</b> 为艺术字字体加粗。</param>
        <param name="FontItalic">必需 <see cref="T:Microsoft.Office.Core.MsoTriState" /> 。 <b>属性值为 MsoTrue</b> ，以斜体显示艺术字。</param>
        <param name="Left">必需<b>Single</b>。 艺术字形状左边缘相对于锁定标记的位置（以磅为单位）。</param>
        <param name="Top">必需<b>Single</b>。 相对于锁定标记的艺术字形状的上边缘的位置（以磅为单位）。</param>
        <param name="Anchor">可选<b>对象</b>。 一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，表示艺术字绑定到的文本。 如果 <paramref name="Anchor" /> 指定，则锁定标记位于锁定区域中第一段的开头。 如果省略此参数，则自动选定锁定区域，而艺术字相对于页面的上边缘和左边缘定位。</param>
        <summary>向文档中添加一个 "艺术字" 图形。 返回一个 <see cref="T:Microsoft.Office.Interop.Word.Shape" /> 对象，该对象代表艺术字并将其添加到 <see cref="T:Microsoft.Office.Interop.Word.Shapes" /> 集合中。</summary>
        <returns>To be added.</returns>
        <remarks><para>向文档添加艺术字对象时，该对象的高度和宽度将自动根据所指定的文字的大小和数量来设置。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddWebVideo">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape AddWebVideo (string EmbedCode, ref object VideoWidth, ref object VideoHeight, ref object PosterFrameImage, ref object Url, ref object Left, ref object Top, ref object Width, ref object Height, ref object Anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Shape AddWebVideo([in]string EmbedCode, [in]object&amp; VideoWidth, [in]object&amp; VideoHeight, [in]object&amp; PosterFrameImage, [in]object&amp; Url, [in]object&amp; Left, [in]object&amp; Top, [in]object&amp; Width, [in]object&amp; Height, [in]object&amp; Anchor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.AddWebVideo(System.String,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddWebVideo (EmbedCode As String, ByRef VideoWidth As Object, ByRef VideoHeight As Object, Optional ByRef PosterFrameImage As Object, Optional ByRef Url As Object, Optional ByRef Left As Object, Optional ByRef Top As Object, Optional ByRef Width As Object, Optional ByRef Height As Object, Optional ByRef Anchor As Object) As Shape" />
      <MemberSignature Language="F#" Value="abstract member AddWebVideo : string * obj * obj * obj * obj * obj * obj * obj * obj * obj -&gt; Microsoft.Office.Interop.Word.Shape" Usage="shapes.AddWebVideo (EmbedCode, VideoWidth, VideoHeight, PosterFrameImage, Url, Left, Top, Width, Height, Anchor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(104)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EmbedCode" Type="System.String" />
        <Parameter Name="VideoWidth" Type="System.Object" RefType="ref" />
        <Parameter Name="VideoHeight" Type="System.Object" RefType="ref" />
        <Parameter Name="PosterFrameImage" Type="System.Object" RefType="ref" />
        <Parameter Name="Url" Type="System.Object" RefType="ref" />
        <Parameter Name="Left" Type="System.Object" RefType="ref" />
        <Parameter Name="Top" Type="System.Object" RefType="ref" />
        <Parameter Name="Width" Type="System.Object" RefType="ref" />
        <Parameter Name="Height" Type="System.Object" RefType="ref" />
        <Parameter Name="Anchor" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="EmbedCode">要嵌入的 HTML 代码。</param>
        <param name="VideoWidth">一个整数，表示 web 视频的宽度（以像素为单位）。</param>
        <param name="VideoHeight">一个整数，表示 web 视频的高度（以像素为单位）。</param>
        <param name="PosterFrameImage">指向要用作 web 视频海报框架的文件的字符串。</param>
        <param name="Url">一个包含指向 web 视频的 URL 的字符串。</param>
        <param name="Left">标牌框架左边缘距文档边缘的位置（以磅为单位）。</param>
        <param name="Top">标牌框架上边缘距文档边缘的位置（以磅为单位）。</param>
        <param name="Width">文档中标牌帧的宽度（以磅为单位）。</param>
        <param name="Height">文档中标牌帧的高度（以磅为单位）。</param>
        <param name="Anchor">一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，表示 web 视频绑定到的文本。 如果 <paramref name="Anchor" /> 指定，则锁定标记位于锁定区域中第一段的开头。 如果省略此参数，则自动选定锁定区域，而视频相对于页面的上边缘和左边缘进行定位。</param>
        <summary>向文档中添加新的 web 视频。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Shapes.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Application ^ Application { Microsoft::Office::Interop::Word::Application ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Application : Microsoft.Office.Interop.Word.Application" Usage="Microsoft.Office.Interop.Word.Shapes.Application" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8000)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.Application" /> 代表 Microsoft Word 应用程序的对象。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildFreeform">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.FreeformBuilder BuildFreeform (Microsoft.Office.Core.MsoEditingType EditingType, float X1, float Y1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.FreeformBuilder BuildFreeform([in]valuetype Microsoft.Office.Core.MsoEditingType EditingType, [in]float32 X1, [in]float32 Y1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.BuildFreeform(Microsoft.Office.Core.MsoEditingType,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildFreeform (EditingType As MsoEditingType, X1 As Single, Y1 As Single) As FreeformBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Word::FreeformBuilder ^ BuildFreeform(Microsoft::Office::Core::MsoEditingType EditingType, float X1, float Y1);" />
      <MemberSignature Language="F#" Value="abstract member BuildFreeform : Microsoft.Office.Core.MsoEditingType * single * single -&gt; Microsoft.Office.Interop.Word.FreeformBuilder" Usage="shapes.BuildFreeform (EditingType, X1, Y1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(20)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.FreeformBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EditingType" Type="Microsoft.Office.Core.MsoEditingType" />
        <Parameter Name="X1" Type="System.Single" />
        <Parameter Name="Y1" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="EditingType">第一个顶点的编辑属性。 必需 <see cref="T:Microsoft.Office.Core.MsoEditingType" /> 。<b>MsoEditingType</b>可以是下列常量之一（不能是<b>MsoEditingSmooth</b>或<b>msoEditingSymmetric</b>）。 <b>msoEditingAuto </b> <b>msoEditingCorner</b></param>
        <param name="X1">必需<b>Single</b>。 任意图形中第一个节点相对于文档左上角的位置（以磅为单位）。</param>
        <param name="Y1">必需<b>Single</b>。 任意图形中第一个节点相对于文档左上角的位置（以磅为单位）。</param>
        <summary>建立任意多边形对象。 返回一个 <see cref="T:Microsoft.Office.Interop.Word.FreeformBuilder" /> 对象，表示正在生成的任意多边形。</summary>
        <returns>To be added.</returns>
        <remarks><para>使用 <see cref="M:Microsoft.Office.Interop.Word.FreeformBuilder.AddNodes(Microsoft.Office.Core.MsoSegmentType,Microsoft.Office.Core.MsoEditingType,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" /> 方法将线段添加到任意多边形。 向任意多边形添加了至少一个线段之后，可以使用 <see cref="M:Microsoft.Office.Interop.Word.FreeformBuilder.ConvertToShape(System.Object@)" /> 方法将<b>FreeformBuilder</b>对象转换为 <see cref="T:Microsoft.Office.Interop.Word.Shape" /> 具有您在<b>FreeformBuilder</b>对象中定义的几何说明的对象。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Shapes.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="Microsoft.Office.Interop.Word.Shapes.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回指定集合中的项目数。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Shapes.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Creator { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Creator : int" Usage="Microsoft.Office.Interop.Word.Shapes.Creator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8001)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8001)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 32 位整数，它指示在其中创建指定的对象的应用程序。</summary>
        <value>To be added.</value>
        <remarks><para>如果对象是在 Microsoft Word 中创建的，则此属性返回十六进制数字是4d535744，表示字符串 "MSWD"。 [!注释] 此值还可以通过常量 <b>wdCreatorCode</b> 表示。</para>
          <para><b>Creator</b>属性主要用于在 Macintosh 上使用，其中每个应用程序都有一个四字符创建者代码。 例如，Microsoft Word 提供了 MSWD 的创建者代码。 有关此属性的其他信息，请参阅语言参考 Microsoft Office Macintosh 版本所附带的帮助。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="shapes.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape this[ref object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Shape Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Shapes.Item(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(ByRef Index As Object) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Shape ^ default[System::Object ^ %] { Microsoft::Office::Interop::Word::Shape ^ get(System::Object ^ % Index); };" />
      <MemberSignature Language="F#" Value="member this.Item(obj) : Microsoft.Office.Interop.Word.Shape" Usage="Microsoft.Office.Interop.Word.Shapes.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Index">一个指示序号位置的<b>对象</b>，或表示单个对象的名称的字符串。</param>
        <summary>返回集合中的单个对象。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Shapes.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : obj" Usage="Microsoft.Office.Interop.Word.Shapes.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个对象，代表指定对象的父对象。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ShapeRange Range (ref object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.ShapeRange Range([in]object&amp; Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.Range(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Range (ByRef Index As Object) As ShapeRange" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Word::ShapeRange ^ Range(System::Object ^ % Index);" />
      <MemberSignature Language="F#" Value="abstract member Range : obj -&gt; Microsoft.Office.Interop.Word.ShapeRange" Usage="shapes.Range Index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ShapeRange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Index">必需的<b>对象</b>。 指定要包含在指定范围中的形状。 可以是一个整数，用于指定形状在集合中的索引号 <see cref="T:Microsoft.Office.Interop.Word.Shapes" /> 、指定形状名称的字符串或包含整数或字符串的<b>对象</b>数组。</param>
        <summary>返回一个 <see cref="T:Microsoft.Office.Interop.Word.ShapeRange" /> 对象。</summary>
        <returns>To be added.</returns>
        <remarks><para>字符位置值从文档开头算起，起始值为 0（零）。 将计算所有字符，包括非打印字符。 隐藏字符即便未显示也计算在内。 如果不指定<b>Range</b>方法的起始和结束字符位置，则整个文档以对象的形式返回 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 。</para>
          <para>
            <b>ShapeRange</b>对象不包含 <see cref="T:Microsoft.Office.Interop.Word.InlineShape" /> 对象。 <b>InlineShape</b> 对象等效于一个字符，并定位为一个文本范围内的一个字符。 <see cref="T:Microsoft.Office.Interop.Word.Shape" />对象定位到文本区域（默认情况下为选定内容），但它们可以放置在页面上的任何位置。 <b>Shape</b>对象将始终显示在其锁定的区域所在的同一页上。</para>
          <para>[!注释] 与 <b>形状</b> 对象可以执行的大多数操作还可以执行与一个 <b>ShapeRange</b> 对象，该对象包含一个形状。某些操作，一个 <b>ShapeRange</b> 对象，该对象包含多个形状，在执行时产生错误。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectAll() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Shapes.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectAll();" />
      <MemberSignature Language="F#" Value="abstract member SelectAll : unit -&gt; unit" Usage="shapes.SelectAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(22)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>选择主要文章、画布或文档的页眉和页脚中的所有形状。</summary>
        <remarks><para>此方法不选择 <see cref="T:Microsoft.Office.Interop.Word.InlineShapes" /> 对象。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
