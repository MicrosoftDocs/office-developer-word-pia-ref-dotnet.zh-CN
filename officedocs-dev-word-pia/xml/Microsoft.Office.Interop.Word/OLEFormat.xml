<Type Name="OLEFormat" FullName="Microsoft.Office.Interop.Word.OLEFormat">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="67318725a843161eb77654b732cf7c9e63c73493" />
    <Meta Name="ms.sourcegitcommit" Value="9a6162e1f2c2145e95970c1fdb1ddcac1366d42f" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20666428" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface OLEFormat" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract OLEFormat" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Word.OLEFormat" />
  <TypeSignature Language="VB.NET" Value="Public Interface OLEFormat" />
  <TypeSignature Language="C++ CLI" Value="public interface class OLEFormat" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020933-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>代表 OLE 对象、ActiveX 控件或域的 OLE（而不是链接）特性。</summary>
    <remarks>
      <para>使用的<b>OLEFormat</b>属性<see cref="T:Microsoft.Office.Interop.Word.Shape" />， <see cref="T:Microsoft.Office.Interop.Word.InlineShape" />，或<see cref="T:Microsoft.Office.Interop.Word.Field" />对象可返回<b>OLEFormat</b>对象。</para>
      <para>不所有类型的图形、 嵌入式图形或域都具有 OLE 功能。使用<b>形状</b>和<b>InlineShape</b>对象的<b>Type</b>属性来确定哪些类别指定的形状或内嵌形状都属于。对于<b>Field</b>对象的<b>Type</b>属性返回字段的类型。</para>
      <para>您可以使用<see cref="M:Microsoft.Office.Interop.Word.OLEFormat.Activate" />， <see cref="M:Microsoft.Office.Interop.Word.OLEFormat.Edit" />， <see cref="M:Microsoft.Office.Interop.Word.OLEFormat.Open" />，和<see cref="M:Microsoft.Office.Interop.Word.OLEFormat.DoVerb(System.Object@)" />自动 OLE 对象的方法。</para>使用
      <para><see cref="P:Microsoft.Office.Interop.Word.OLEFormat.Object" />属性返回一个对象，表示的 ActiveX 控件或 OLE 对象。此对象，您可以使用的属性和方法的容器应用程序或 ActiveX 控件。</para><para /></remarks>
  </Docs>
  <Members>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.OLEFormat.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(104)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>激活指定的对象。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivateAs">
      <MemberSignature Language="C#" Value="public void ActivateAs (string ClassType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ActivateAs([in]string ClassType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.OLEFormat.ActivateAs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ActivateAs (ClassType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ActivateAs(System::String ^ ClassType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(111)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ClassType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ClassType">必需的 <b>字符串</b> 。 在其中打开 OLE 对象的应用程序的名称。 要查看的 OLE 对象可激活为的对象类型的列表，请单击对象，然后打开转换对话框 （对象子菜单中的编辑菜单）。 您可以找到<paramref name="ClassType" />插入作为内嵌形状对象，然后查看域代码的字符串。 对象的类类型遵循的单词"嵌入"或 word"链接。"</param>
        <summary>设置确定用于激活指定 OLE 对象的默认应用程序的 Windows 注册表值。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Application ^ Application { Microsoft::Office::Interop::Word::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回<see cref="T:Microsoft.Office.Interop.Word.Application" />对象代表 Microsoft Word 应用程序。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassType">
      <MemberSignature Language="C#" Value="public string ClassType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClassType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.ClassType" />
      <MemberSignature Language="VB.NET" Value="Public Property ClassType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClassType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置指定的 OLE 对象、 图片或字段的类类型。</summary>
        <value>To be added.</value>
        <remarks>
          <para>此属性是只读的 DDE 链接之外的链接对象。</para>您可以看到对象类型框中的可用应用程序的列表 （插入菜单） 中的对象对话框中新建选项卡上的
          <para>。您可以找到<paramref name="ClassType" />插入作为内嵌形状对象，然后查看域代码的字符串。对象的类类型遵循的单词"嵌入"或 word"链接。"</para><para /></remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public void ConvertTo (ref object ClassType, ref object DisplayAsIcon, ref object IconFileName, ref object IconIndex, ref object IconLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConvertTo([in]object&amp; ClassType, [in]object&amp; DisplayAsIcon, [in]object&amp; IconFileName, [in]object&amp; IconIndex, [in]object&amp; IconLabel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.OLEFormat.ConvertTo(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ConvertTo (Optional ByRef ClassType As Object, Optional ByRef DisplayAsIcon As Object, Optional ByRef IconFileName As Object, Optional ByRef IconIndex As Object, Optional ByRef IconLabel As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ClassType" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="DisplayAsIcon" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IconFileName" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IconIndex" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IconLabel" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ClassType">可选的<b>对象</b>。 用于激活 OLE 对象的应用程序的名称。 在对象对话框 （插入菜单） 中新建选项卡上，可以看到对象类型框中的可用应用程序的列表。 您可以找到<paramref name="ClassType" />插入作为内嵌形状对象，然后查看域代码的字符串。 对象的类类型遵循的单词"嵌入"或 word"链接。"</param>
        <param name="DisplayAsIcon">可选的<b>对象</b>。 <b>真</b> 若要将 OLE 对象显示为图标。 默认值为 <b>False</b> 。</param>
        <param name="IconFileName">可选的<b>对象</b>。 包含将要显示的图标的文件。</param>
        <param name="IconIndex">可选的<b>对象</b>。 内的图标索引号<paramref name="IconFileName" />。 图标显示在更改图标对话框 （插入菜单、 对象对话框） 顺序相对应的指定文件中的图标次序当选显示为图标复选框。 文件中第一个图标的索引号是 0（零）。 如果中不存在具有给定的索引号的图标<paramref name="IconFileName" />，则使用具有索引编号 1 （在文件中的第二个图标） 图标。 默认值为 0（零）。</param>
        <param name="IconLabel">可选的<b>对象</b>。 显示在图标下面的标签（标题）。</param>
        <summary>将指定的 OLE 对象从一个类转换为另一个，从而使您可以编辑的对象在不同的服务器应用程序，或更改该对象在文档中的显示方式。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Creator { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 32 位整数，它指示在其中创建指定的对象的应用程序。</summary>
        <value>To be added.</value>
        <remarks>
          <para>如果 Microsoft Word 中创建对象，此属性返回十六进制数字 4d535744，表示字符串"MSWD。"此值也可以由常量<b>wdCreatorCode</b>。</para>主要设计
          <para><b>Creator</b>属性用于 Macintosh，其中每个应用程序具有四个字符的创建者代码。例如，Microsoft Word 具有 MSWD 的创建者代码。有关此属性的其他信息，请咨询的语言参考 Microsoft Office Macintosh Edition 中包含的帮助。</para><para /></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayAsIcon">
      <MemberSignature Language="C#" Value="public bool DisplayAsIcon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayAsIcon" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.DisplayAsIcon" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayAsIcon As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayAsIcon { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>True</b>如果指定的对象显示为图标。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoVerb">
      <MemberSignature Language="C#" Value="public void DoVerb (ref object VerbIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoVerb([in]object&amp; VerbIndex) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.OLEFormat.DoVerb(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DoVerb (Optional ByRef VerbIndex As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(109)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VerbIndex" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="VerbIndex">可选的<b>对象</b>。 OLE 对象应执行的动作。 如果省略此参数，则发送默认动词。 如果 OLE 对象不支持被请求的动作，将发生错误。 可以是任意<see cref="T:Microsoft.Office.Interop.Word.WdOLEVerb" />常量。</param>
        <summary>请求 OLE 对象执行一个有效动作 — 操作 OLE 对象所需，以激活其内容。 每个 OLE 对象都支持附加于该对象的一组动作。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Edit">
      <MemberSignature Language="C#" Value="public void Edit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Edit() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.OLEFormat.Edit" />
      <MemberSignature Language="VB.NET" Value="Public Sub Edit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Edit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(106)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在创建指定 OLE 对象的应用程序中打开该对象，以便进行编辑。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconIndex">
      <MemberSignature Language="C#" Value="public int IconIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IconIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.IconIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property IconIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IconIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(9)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(9)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(9)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置具有时所使用的图标<see cref="P:Microsoft.Office.Interop.Word.OLEFormat.DisplayAsIcon" />属性为<b>True</b>: 0 （零） 对应于第一个图标，1 对应于第二个图标，依此类推。 如果省略此参数，则使用第一个 (默认) 图标。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconLabel">
      <MemberSignature Language="C#" Value="public string IconLabel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IconLabel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.IconLabel" />
      <MemberSignature Language="VB.NET" Value="Public Property IconLabel As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IconLabel { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置 OLE 对象的图标下面显示的文本。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconName">
      <MemberSignature Language="C#" Value="public string IconName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IconName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.IconName" />
      <MemberSignature Language="VB.NET" Value="Public Property IconName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IconName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置存储 OLE 对象的图标的程序文件。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconPath">
      <MemberSignature Language="C#" Value="public string IconPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IconPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.IconPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IconPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IconPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回存储 OLE 对象的图标的文件的路径。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.Label" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(12)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(12)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个字符串，用于标识源文件中被链接的部分。 例如，如果源文件是 Microsoft Excel 工作簿，则<b>Label</b>属性可能返回"Workbook1 ！R3C1:R4C2"如果 OLE 对象仅包含几个单元格从工作表。</summary>
        <value>To be added.</value>
        <remarks>
          <para>此属性仅适用于形状、 嵌入形状或链接的 OLE 对象字段。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Object">
      <MemberSignature Language="C#" Value="public object Object { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Object" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.Object" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Object As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Object { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(14)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(14)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <b>对象</b> ，表示指定的 OLE 对象的顶层界面。 此属性使您可以访问的属性和方法的 ActiveX 控件或在其中创建 OLE 对象的应用程序。 OLE 对象必须支持 OLE 自动化此属性的工作。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Open() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.OLEFormat.Open" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(107)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>打开指定的对象。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1002)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1002)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个对象，代表指定对象的父对象。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveFormattingOnUpdate">
      <MemberSignature Language="C#" Value="public bool PreserveFormattingOnUpdate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveFormattingOnUpdate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.PreserveFormattingOnUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Property PreserveFormattingOnUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveFormattingOnUpdate { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(112)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>如此</b> 保留格式在 Microsoft Word 中链接的 OLE 对象，例如表到完成链接到 Microsoft Excel 电子表格。</summary>
        <value>To be added.</value>
        <remarks>
          <para>当<b>PreserveFormattingOnUpdate</b>设置为<b>True</b>时，对 Word 中的对象所做更改时，保留格式更新的对象。Word 更新链接的对象中的内容。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgID">
      <MemberSignature Language="C#" Value="public string ProgID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProgID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.ProgID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProgID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProgID { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(22)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(22)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回指定 OLE 对象的编程标识符 (ProgID)。</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <b>ProgID</b>和<see cref="P:Microsoft.Office.Interop.Word.OLEFormat.ClassType" />属性将 （默认） 返回相同的字符串。但是，您可以更改 DDE 链接的<b>ClassType</b>属性。</para>
          <para>
            <b>安全</b>动态数据交换 (DDE) 是不安全的较旧的技术。如果可能，请使用 DDE 的更安全的替代。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>