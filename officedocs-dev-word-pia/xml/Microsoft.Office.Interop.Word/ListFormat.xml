<Type Name="ListFormat" FullName="Microsoft.Office.Interop.Word.ListFormat">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bedc659e05e0c224f2395785ec902aa8914376ed" />
    <Meta Name="ms.sourcegitcommit" Value="9a6162e1f2c2145e95970c1fdb1ddcac1366d42f" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20666251" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ListFormat" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ListFormat" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Word.ListFormat" />
  <TypeSignature Language="VB.NET" Value="Public Interface ListFormat" />
  <TypeSignature Language="C++ CLI" Value="public interface class ListFormat" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000209C0-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>代表可应用于范围中各段落的列表格式属性。</summary>
    <remarks>
      <para>使用<see cref="P:Microsoft.Office.Interop.Word.Range.ListFormat" />属性返回<see cref="T:Microsoft.Office.Interop.Word.ListFormat" />范围的对象。</para>
      <para>应用列表格式的简单方法是使用<see cref="M:Microsoft.Office.Interop.Word.ListFormat.ApplyBulletDefault(System.Object@)" />， <see cref="M:Microsoft.Office.Interop.Word.ListFormat.ApplyNumberDefault(System.Object@)" />，和<see cref="M:Microsoft.Office.Interop.Word.ListFormat.ApplyOutlineNumberDefault(System.Object@)" />方法，分别对应，（不包括无） 的第一列表格式每个选项卡中的项目符号和编号对话框。</para>
      <para>要应用的格式之外的默认格式，请使用<see cref="M:Microsoft.Office.Interop.Word.ListFormat.ApplyListTemplate(Microsoft.Office.Interop.Word.ListTemplate,System.Object@,System.Object@,System.Object@)" />方法，它允许您指定要应用的列表格式 （列表模板）。</para>
      <para>使用<see cref="P:Microsoft.Office.Interop.Word.ListFormat.List" />或<see cref="P:Microsoft.Office.Interop.Word.ListFormat.ListTemplate" />属性可从指定范围中的第一段返回列表或列表模板。</para>
      <para>使用<see cref="P:Microsoft.Office.Interop.Word.Range.ListFormat" />属性<see cref="T:Microsoft.Office.Interop.Word.Range" />对象访问的列表格式属性和方法可指定区域。</para>
      <para>但是，如果已将文档中定义的列表，您可以访问的列表对象使用<see cref="P:Microsoft.Office.Interop.Word._Document.Lists" />属性。</para>
      <para />
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.ListFormat.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Application ^ Application { Microsoft::Office::Interop::Word::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回<see cref="T:Microsoft.Office.Interop.Word.Application" />对象代表 Microsoft Word 应用程序。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyBulletDefault">
      <MemberSignature Language="C#" Value="public void ApplyBulletDefault (ref object DefaultListBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyBulletDefault([in]object&amp; DefaultListBehavior) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.ListFormat.ApplyBulletDefault(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyBulletDefault (Optional ByRef DefaultListBehavior As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(212)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DefaultListBehavior" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="DefaultListBehavior">可选的<b>对象</b>。 设置一个值，指定是否 Microsoft Word 使用新的面向 Web 的格式更好的列表中显示。 可以是下列常量之一: <b>wdWord8ListBehavior</b> (使用与 Microsoft Word 97 兼容格式) 或 <b>wdWord9ListBehavior</b> (使用面向 Web 的格式)。 出于兼容性原因，默认常量 <b>wdWord8ListBehavior</b> ，但在新的过程，您应该使用 <b>wdWord9ListBehavior</b> 利用改进的面向 Web 的格式相对于缩进和多级列表中。</param>
        <summary>添加项目符号和格式为指定区域中的段落<see cref="T:Microsoft.Office.Interop.Word.ListFormat" />对象。 如果该段落已经设置了项目符号，则该方法将清除其中已有的项目符号和格式。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyBulletDefaultOld">
      <MemberSignature Language="C#" Value="public void ApplyBulletDefaultOld ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyBulletDefaultOld() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.ListFormat.ApplyBulletDefaultOld" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyBulletDefaultOld ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyBulletDefaultOld();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(188)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>仅供内部使用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyListTemplate">
      <MemberSignature Language="C#" Value="public void ApplyListTemplate (Microsoft.Office.Interop.Word.ListTemplate ListTemplate, ref object ContinuePreviousList, ref object ApplyTo, ref object DefaultListBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyListTemplate([in]class Microsoft.Office.Interop.Word.ListTemplate ListTemplate, [in]object&amp; ContinuePreviousList, [in]object&amp; ApplyTo, [in]object&amp; DefaultListBehavior) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.ListFormat.ApplyListTemplate(Microsoft.Office.Interop.Word.ListTemplate,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(215)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListTemplate" Type="Microsoft.Office.Interop.Word.ListTemplate" />
        <Parameter Name="ContinuePreviousList" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyTo" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="DefaultListBehavior" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ListTemplate">所需<see cref="T:Microsoft.Office.Interop.Word.ListTemplate" />对象。 要应用的列表模板。</param>
        <param name="ContinuePreviousList">可选的<b>对象</b>。 <b>如此</b> 继续编排页码从前面的列表; <b>假</b> 以启动一个新的列表。</param>
        <param name="ApplyTo">可选的<b>对象</b>。 要应用于列表模板的列表部分。 可以是以下项之一<see cref="T:Microsoft.Office.Interop.Word.WdListApplyTo" />常量： <b>wdListApplyToSelection</b>、 <b>wdListApplyToWholeList</b>或<b>wdListApplyToThisPointForward</b>。</param>
        <param name="DefaultListBehavior">可选的<b>对象</b>。 设置一个值，指定是否 Microsoft Word 使用新的面向 Web 的格式更好的列表中显示。 可以是下列常量之一: <b>wdWord8ListBehavior</b> (使用与 Microsoft Word 97 兼容格式) 或 <b>wdWord9ListBehavior</b> (使用面向 Web 的格式)。 出于兼容性原因，默认常量 <b>wdWord8ListBehavior</b> ，但在新的过程，您应该使用 <b>wdWord9ListBehavior</b> 利用改进的面向 Web 的格式相对于缩进和多级列表中。</param>
        <summary>适用于指定的一组列表格式特征<see cref="T:Microsoft.Office.Interop.Word.ListFormat" />对象。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyListTemplateOld">
      <MemberSignature Language="C#" Value="public void ApplyListTemplateOld (Microsoft.Office.Interop.Word.ListTemplate ListTemplate, ref object ContinuePreviousList, ref object ApplyTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyListTemplateOld([in]class Microsoft.Office.Interop.Word.ListTemplate ListTemplate, [in]object&amp; ContinuePreviousList, [in]object&amp; ApplyTo) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.ListFormat.ApplyListTemplateOld(Microsoft.Office.Interop.Word.ListTemplate,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(191)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListTemplate" Type="Microsoft.Office.Interop.Word.ListTemplate" />
        <Parameter Name="ContinuePreviousList" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyTo" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ListTemplate">To be added.</param>
        <param name="ContinuePreviousList">To be added.</param>
        <param name="ApplyTo">To be added.</param>
        <summary>仅供内部使用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyListTemplateWithLevel">
      <MemberSignature Language="C#" Value="public void ApplyListTemplateWithLevel (Microsoft.Office.Interop.Word.ListTemplate ListTemplate, ref object ContinuePreviousList, ref object ApplyTo, ref object DefaultListBehavior, ref object ApplyLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyListTemplateWithLevel([in]class Microsoft.Office.Interop.Word.ListTemplate ListTemplate, [in]object&amp; ContinuePreviousList, [in]object&amp; ApplyTo, [in]object&amp; DefaultListBehavior, [in]object&amp; ApplyLevel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.ListFormat.ApplyListTemplateWithLevel(Microsoft.Office.Interop.Word.ListTemplate,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(216)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListTemplate" Type="Microsoft.Office.Interop.Word.ListTemplate" />
        <Parameter Name="ContinuePreviousList" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyTo" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="DefaultListBehavior" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyLevel" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ListTemplate">要应用的列表模板。</param>
        <param name="ContinuePreviousList">
          <b>如此</b> 继续编排页码从前面的列表; <b>假</b> 以启动一个新的列表。</param>
        <param name="ApplyTo">要应用于列表模板的列表部分。 可以是以下项之一<see cref="T:Microsoft.Office.Interop.Word.WdListApplyTo" />常量： <see cref="F:Microsoft.Office.Interop.Word.WdListApplyTo.wdListApplyToSelection" />， <see cref="F:Microsoft.Office.Interop.Word.WdListApplyTo.wdListApplyToThisPointForward" />，或<see cref="F:Microsoft.Office.Interop.Word.WdListApplyTo.wdListApplyToWholeList" />。</param>
        <param name="DefaultListBehavior">设置一个值，指定是否 Microsoft Word 使用新的面向 Web 的格式更好的列表中显示。 可以是以下任一<see cref="T:Microsoft.Office.Interop.Word.WdDefaultListBehavior" />常量： <see cref="F:Microsoft.Office.Interop.Word.WdDefaultListBehavior.wdWord8ListBehavior" /> （使用与 Microsoft Word 97 兼容的格式） 或<see cref="F:Microsoft.Office.Interop.Word.WdDefaultListBehavior.wdWord9ListBehavior" />（使用面向网站的格式）。 兼容性原因，采用默认常量是<see cref="F:Microsoft.Office.Interop.Word.WdDefaultListBehavior.wdWord8ListBehavior" />，但在新的过程，您应使用<see cref="F:Microsoft.Office.Interop.Word.WdDefaultListBehavior.wdWord9ListBehavior" />充分利用改进面向网站的格式与尊重缩进到和多级列表。</param>
        <param name="ApplyLevel">要应用列表模板的级别。</param>
        <summary>（可选）对指定级别应用一组列表格式特征。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyNumberDefault">
      <MemberSignature Language="C#" Value="public void ApplyNumberDefault (ref object DefaultListBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyNumberDefault([in]object&amp; DefaultListBehavior) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.ListFormat.ApplyNumberDefault(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyNumberDefault (Optional ByRef DefaultListBehavior As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(213)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DefaultListBehavior" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="DefaultListBehavior">可选的<b>对象</b>。 设置一个值，指定是否 Microsoft Word 使用新的面向 Web 的格式更好的列表中显示。 可以是下列常量之一: <b>wdWord8ListBehavior</b> (使用与 Microsoft Word 97 兼容格式) 或 <b>wdWord9ListBehavior</b> (使用面向 Web 的格式)。 出于兼容性原因，默认常量 <b>wdWord8ListBehavior</b> ，但在新的过程，您应该使用 <b>wdWord9ListBehavior</b> 利用改进的面向 Web 的格式相对于缩进和多级列表中。</param>
        <summary>添加默认的编号段落的方案中指定的范围<see cref="T:Microsoft.Office.Interop.Word.ListFormat" />对象。 如果段落已设置了编号列表格式，该方法将清除其中已有的编号和格式。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyNumberDefaultOld">
      <MemberSignature Language="C#" Value="public void ApplyNumberDefaultOld ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyNumberDefaultOld() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.ListFormat.ApplyNumberDefaultOld" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyNumberDefaultOld ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyNumberDefaultOld();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(189)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>仅供内部使用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyOutlineNumberDefault">
      <MemberSignature Language="C#" Value="public void ApplyOutlineNumberDefault (ref object DefaultListBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyOutlineNumberDefault([in]object&amp; DefaultListBehavior) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.ListFormat.ApplyOutlineNumberDefault(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyOutlineNumberDefault (Optional ByRef DefaultListBehavior As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(214)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DefaultListBehavior" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="DefaultListBehavior">可选的<b>对象</b>。 设置一个值，指定是否 Microsoft Word 使用新的面向 Web 的格式更好的列表中显示。 可以是下列常量之一: <b>wdWord8ListBehavior</b> (使用与 Microsoft Word 97 兼容格式) 或 <b>wdWord9ListBehavior</b> (使用面向 Web 的格式)。 出于兼容性原因，默认常量 <b>wdWord8ListBehavior</b> ，但在新的过程，您应该使用 <b>wdWord9ListBehavior</b> 利用改进的面向 Web 的格式相对于缩进和多级列表中。</param>
        <summary>向指定区域中的段落添加默认大纲编号方案<see cref="T:Microsoft.Office.Interop.Word.ListFormat" />对象。 如果段落中已经设置了多级符号列表的格式，该方法将清除这些原有的符号和格式。</summary>
        <remarks>
          <para>此方法不会删除已应用于段落的内置标题样式。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyOutlineNumberDefaultOld">
      <MemberSignature Language="C#" Value="public void ApplyOutlineNumberDefaultOld ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyOutlineNumberDefaultOld() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.ListFormat.ApplyOutlineNumberDefaultOld" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyOutlineNumberDefaultOld ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyOutlineNumberDefaultOld();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(190)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>仅供内部使用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanContinuePreviousList">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdContinue CanContinuePreviousList (Microsoft.Office.Interop.Word.ListTemplate ListTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Word.WdContinue CanContinuePreviousList([in]class Microsoft.Office.Interop.Word.ListTemplate ListTemplate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.ListFormat.CanContinuePreviousList(Microsoft.Office.Interop.Word.ListTemplate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Word::WdContinue CanContinuePreviousList(Microsoft::Office::Interop::Word::ListTemplate ^ ListTemplate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(184)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdContinue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListTemplate" Type="Microsoft.Office.Interop.Word.ListTemplate" />
      </Parameters>
      <Docs>
        <param name="ListTemplate">所需<see cref="T:Microsoft.Office.Interop.Word.ListTemplate" />对象。 一个应用于文档中先前段落的列表模板。</param>
        <summary>返回<see cref="T:Microsoft.Office.Interop.Word.WdContinue" />常量 （<b>wdContinueDisabled</b>、 <b>wdResetList</b>或<b>wdContinueList</b>），指示是否可以继续前一列表的格式。</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>此方法返回的状态继续前一列表和重新启动选项编号项目符号和编号对话框中指定的列表格式。若要更改这些选项的设置，设置<paramref name="ContinuePreviousList" />参数<see cref="M:Microsoft.Office.Interop.Word.ListFormat.ApplyListTemplate(Microsoft.Office.Interop.Word.ListTemplate,System.Object@,System.Object@,System.Object@)" />方法。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertNumbersToText">
      <MemberSignature Language="C#" Value="public void ConvertNumbersToText (ref object NumberType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConvertNumbersToText([in]object&amp; NumberType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.ListFormat.ConvertNumbersToText(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ConvertNumbersToText (Optional ByRef NumberType As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(186)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="NumberType" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="NumberType">可选的<b>对象</b>。 要转换的号码的类型。 可以是任意<see cref="T:Microsoft.Office.Interop.Word.WdNumberType" />常量。</param>
        <summary>更改的列表编号和 LISTNUM 域中指定<see cref="T:Microsoft.Office.Interop.Word.ListFormat" />对象的文本。</summary>
        <remarks>
          <para>有两种类型的数字： 的预设编号 (<b>wdNumberParagraph</b>)，您可以通过选择模板中的项目符号和编号对话框; 添加到段落和 LISTNUM 域 (<b>wdNumberListNum</b>)，使您能够添加每个段落的多个电话号码。</para>
          <para>
            <b>ConvertNumbersToText</b>方法非常有用，如果您想要使用另一个应用程序中的文档和列表格式或 LISTNUM 域不能识别该应用程序。</para>
          <para>在将列表编号转换为文本后，您可以不再对其进行操作列表中。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CountNumberedItems">
      <MemberSignature Language="C#" Value="public int CountNumberedItems (ref object NumberType, ref object Level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CountNumberedItems([in]object&amp; NumberType, [in]object&amp; Level) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.ListFormat.CountNumberedItems(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function CountNumberedItems (Optional ByRef NumberType As Object, Optional ByRef Level As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(187)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="NumberType" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Level" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="NumberType">可选的<b>对象</b>。 要进行计数的编号类型。 可以是以下项之一<see cref="T:Microsoft.Office.Interop.Word.WdNumberType" />常量： <b>wdNumberParagraph</b>、 <b>wdNumberListNum</b>或<b>wdNumberAllNumbers</b>。 默认值是 <b>wdNumberAllNumbers</b> 。</param>
        <param name="Level">可选的<b>对象</b>。 与要计数的编号级别相对应的数。 如果省略该参数，将计算所有级别的数目。</param>
        <summary>返回指定的 <b>ListFormat</b> 对象中的项目符号或编号项和 LISTNUM 域的数目。</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>项目符号项为指定<b>wdNumberParagraph</b>或<b>wdNumberAllNumbers</b> （默认值） 是在内<paramref name="NumberType" />。</para>
          <para>有两种类型的数字： 预设的编号 (<b>wdNumberParagraph</b>)，您可以通过选择模板中的项目符号和编号对话框; 添加到段落和 LISTNUM 域 (<b>wdNumberListNum</b>)，使您能够添加多个每个段落编号。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.ListFormat.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Creator { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 32 位整数，它指示在其中创建指定的对象的应用程序。</summary>
        <value>To be added.</value>
        <remarks>
          <para>如果 Microsoft Word 中创建对象，此属性返回十六进制数字 4d535744，表示字符串"MSWD。"此值也可以由常量<b>wdCreatorCode</b>。</para>主要设计
          <para><b>Creator</b>属性用于 Macintosh，其中每个应用程序具有四个字符的创建者代码。例如，Microsoft Word 具有 MSWD 的创建者代码。有关此属性的其他信息，请咨询的语言参考 Microsoft Office Macintosh Edition 中包含的帮助。</para><para /></remarks>
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.List List { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.List List" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.ListFormat.List" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property List As List" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::List ^ List { Microsoft::Office::Interop::Word::List ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(69)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(69)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.List</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回<see cref="T:Microsoft.Office.Interop.Word.List" />对象，表示包含在指定的第一个格式化的列表<see cref="T:Microsoft.Office.Interop.Word.ListFormat" />对象。</summary>
        <value>To be added.</value>
        <remarks>
          <para>如果<b>ListFormat</b>对象的范围中的第一段的格式不是列表，则<b>List</b>属性返回 nothing。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListIndent">
      <MemberSignature Language="C#" Value="public void ListIndent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ListIndent() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.ListFormat.ListIndent" />
      <MemberSignature Language="VB.NET" Value="Public Sub ListIndent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ListIndent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(211)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>增加指定区域中的段落的列表级别<see cref="T:Microsoft.Office.Interop.Word.ListFormat" />对象，增量为一个级别。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListLevelNumber">
      <MemberSignature Language="C#" Value="public int ListLevelNumber { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ListLevelNumber" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.ListFormat.ListLevelNumber" />
      <MemberSignature Language="VB.NET" Value="Public Property ListLevelNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ListLevelNumber { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(68)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(68)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(68)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置中指定的第一段的列表级别<see cref="T:Microsoft.Office.Interop.Word.ListFormat" />对象。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListOutdent">
      <MemberSignature Language="C#" Value="public void ListOutdent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ListOutdent() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.ListFormat.ListOutdent" />
      <MemberSignature Language="VB.NET" Value="Public Sub ListOutdent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ListOutdent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(210)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>减小指定区域中的段落的列表级别<see cref="T:Microsoft.Office.Interop.Word.ListFormat" />对象，增量为一个级别。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListPictureBullet">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.InlineShape ListPictureBullet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.InlineShape ListPictureBullet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.ListFormat.ListPictureBullet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListPictureBullet As InlineShape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::InlineShape ^ ListPictureBullet { Microsoft::Office::Interop::Word::InlineShape ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(76)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(76)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.InlineShape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回<see cref="T:Microsoft.Office.Interop.Word.InlineShape" />对象，表示用作图片项目符号列表中的项目符号的图片。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListString">
      <MemberSignature Language="C#" Value="public string ListString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ListString" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.ListFormat.ListString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ListString { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(75)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(75)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个<b>String</b>值，该值代表指定的范围中的第一段的列表值的外观<see cref="T:Microsoft.Office.Interop.Word.ListFormat" />对象。 例如，按字母顺序排列的第二段将返回 b。</summary>
        <value>To be added.</value>
        <remarks>
          <para>项目符号列表，您将需要才能看到字符串应用正确的字体。大多数项目符号使用的符号或 Wingdings 字体。</para>
          <para>使用<see cref="P:Microsoft.Office.Interop.Word.ListFormat.ListValue" />属性返回的段落的数值。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListTemplate">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ListTemplate ListTemplate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ListTemplate ListTemplate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.ListFormat.ListTemplate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListTemplate As ListTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::ListTemplate ^ ListTemplate { Microsoft::Office::Interop::Word::ListTemplate ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(70)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(70)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ListTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回<see cref="T:Microsoft.Office.Interop.Word.ListTemplate" />对象，表示的列表格式指定<see cref="T:Microsoft.Office.Interop.Word.ListFormat" />对象。</summary>
        <value>To be added.</value>
        <remarks>
          <para>A 列表模板包含定义特定列表的所有格式。每个 （不包括无） 的七种格式在每个项目符号中的选项卡上找到和编号对话框 （格式菜单） 对应的列表模板。文档和模板还可以包含列表模板的集合。</para>
          <para>如果<b>ListFormat</b>对象的范围中的第一段的格式不是列表，则<b>ListTemplate</b>属性返回<b>Nothing</b>。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdListType ListType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdListType ListType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.ListFormat.ListType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListType As WdListType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdListType ListType { Microsoft::Office::Interop::Word::WdListType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(74)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(74)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdListType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回为指定范围中包含的列表的类型<see cref="T:Microsoft.Office.Interop.Word.ListFormat" />对象。</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <b>ListType</b>属性可以是一个<see cref="T:Microsoft.Office.Interop.Word.WdListType" />常量。<b>WdListListNumOnly</b>常量引用 LISTNUM 域，都可以添加一个段落的文本中的字段。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListValue">
      <MemberSignature Language="C#" Value="public int ListValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ListValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.ListFormat.ListValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListValue As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ListValue { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(71)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(71)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回指定的范围中的第一段的数值<see cref="T:Microsoft.Office.Interop.Word.ListFormat" />对象。 例如，应用于按字母顺序排列的第二段的<b>ListValue</b>属性将返回 2。</summary>
        <value>To be added.</value>
        <remarks>
          <para>使用<see cref="P:Microsoft.Office.Interop.Word.ListFormat.ListString" />属性可返回一个 string 值，该值代表列表值。</para>
          <para>如果<b>ListFormat</b>对象应用于项目符号列表，则<b>ListValue</b>属性返回 1。</para>
          <para>如果<b>ListFormat</b>对象应用于一个多级符号列表，出现在同一个级别的段落的顺序，则<b>ListValue</b>属性返回的第一段的数值。例如，如果指定的<b>ListFormat</b>对象的第一段已编号"A.2" <b>ListValue</b>将返回 2。</para>
          <para>此属性不会返回 LISTNUM 域的值。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.ListFormat.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1002)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1002)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个对象，代表指定对象的父对象。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveNumbers">
      <MemberSignature Language="C#" Value="public void RemoveNumbers (ref object NumberType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveNumbers([in]object&amp; NumberType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.ListFormat.RemoveNumbers(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveNumbers (Optional ByRef NumberType As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(185)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="NumberType" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="NumberType">可选<see cref="T:Microsoft.Office.Interop.Word.WdNumberType" />。 要删除的编号类型。</param>
        <summary>删除指定的编号或项目符号<see cref="T:Microsoft.Office.Interop.Word.ListFormat" />对象。</summary>
        <remarks>
          <para>当此方法应用于<see cref="T:Microsoft.Office.Interop.Word.List" />对象，它仅从指定的列表，跳过任何交错号码，从其他列表中的段落删除号码。如果此方法应用于文本范围的<b>ListFormat</b>对象，则会删除范围中的所有列表中的所有数字。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SingleList">
      <MemberSignature Language="C#" Value="public bool SingleList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SingleList" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.ListFormat.SingleList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SingleList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SingleList { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(72)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(72)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>True</b>如果指定<see cref="T:Microsoft.Office.Interop.Word.ListFormat" />对象包含只有一个列表。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SingleListTemplate">
      <MemberSignature Language="C#" Value="public bool SingleListTemplate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SingleListTemplate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.ListFormat.SingleListTemplate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SingleListTemplate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SingleListTemplate { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(73)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(73)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <b>True</b>如果整个<see cref="T:Microsoft.Office.Interop.Word.ListFormat" />对象都使用相同的列表模板。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>